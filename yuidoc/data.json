{
    "project": {
        "name": "YUI 3 Gallery Modules",
        "description": "YUI 3 Gallery Modules maintained by John Lindal",
        "version": "1.0.0",
        "url": "http://jafl.github.io/yui-modules/"
    },
    "files": {
        "src/gallery-accordion-horiz-vert/js/Accordion.js": {
            "name": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "modules": {
                "gallery-accordion-horiz-vert": 1
            },
            "classes": {
                "Accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-accordion-horiz-vert/js/FixedSizePlugin.js": {
            "name": "src/gallery-accordion-horiz-vert/js/FixedSizePlugin.js",
            "modules": {},
            "classes": {
                "Plugin.FixedSizeAccordion": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-adobe-air-config/js/config.js": {
            "name": "src/gallery-adobe-air-config/js/config.js",
            "modules": {
                "gallery-adobe-air-config": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-adobe-air-page-manager/js/page-manager.js": {
            "name": "src/gallery-adobe-air-page-manager/js/page-manager.js",
            "modules": {
                "gallery-adobe-air-page-manager": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-adobe-air-prefs/js/prefs.js": {
            "name": "src/gallery-adobe-air-prefs/js/prefs.js",
            "modules": {
                "gallery-adobe-air-prefs": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-algorithms/js/Array.js": {
            "name": "src/gallery-algorithms/js/Array.js",
            "modules": {
                "gallery-algorithms": 1
            },
            "classes": {
                "Array~algorithms": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-algorithms/js/ArrayList.js": {
            "name": "src/gallery-algorithms/js/ArrayList.js",
            "modules": {},
            "classes": {
                "ArrayList~extras": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-anim-class/js/anim-class.js": {
            "name": "src/gallery-anim-class/js/anim-class.js",
            "modules": {
                "gallery-anim-class": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-anim-sequence/js/anim-seq-plugin.js": {
            "name": "src/gallery-anim-sequence/js/anim-seq-plugin.js",
            "modules": {},
            "classes": {
                "Plugin.NodeFXSequence": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-anim-sequence/js/anim-seq.js": {
            "name": "src/gallery-anim-sequence/js/anim-seq.js",
            "modules": {
                "gallery-anim-sequence": 1
            },
            "classes": {
                "AnimSequence": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-bulkedit/js/BulkEditDataSource.js": {
            "name": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "modules": {},
            "classes": {
                "DataSource.BulkEdit": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            }
        },
        "src/gallery-bulkedit/js/BulkEditor.js": {
            "name": "src/gallery-bulkedit/js/BulkEditor.js",
            "modules": {
                "gallery-bulkedit": 1
            },
            "classes": {
                "BulkEditor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-bulkedit/js/HTMLTableBulkEditor.js": {
            "name": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "modules": {},
            "classes": {
                "HTMLTableBulkEditor": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-busyoverlay/js/BusyOverlay.js": {
            "name": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "modules": {
                "gallery-busyoverlay": 1
            },
            "classes": {
                "Plugin.BusyOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-canvas/js/Context2d.js": {
            "name": "src/gallery-canvas/js/Context2d.js",
            "modules": {
                "gallery-canvas": 1
            },
            "classes": {
                "Canvas.Context2d": 1
            },
            "fors": {},
            "namespaces": {
                "Canvas": 1
            }
        },
        "src/gallery-checkboxgroups/js/AtLeastOneCheckboxGroup.js": {
            "name": "src/gallery-checkboxgroups/js/AtLeastOneCheckboxGroup.js",
            "modules": {},
            "classes": {
                "AtLeastOneCheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-checkboxgroups/js/AtMostOneCheckboxGroup.js": {
            "name": "src/gallery-checkboxgroups/js/AtMostOneCheckboxGroup.js",
            "modules": {},
            "classes": {
                "AtMostOneCheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-checkboxgroups/js/CheckboxGroup.js": {
            "name": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "modules": {
                "gallery-checkboxgroups": 1
            },
            "classes": {
                "CheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-checkboxgroups/js/EnableIfAnyCheckboxGroup.js": {
            "name": "src/gallery-checkboxgroups/js/EnableIfAnyCheckboxGroup.js",
            "modules": {},
            "classes": {
                "EnableIfAnyCheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js": {
            "name": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "modules": {},
            "classes": {
                "SelectAllCheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-chipper/js/Chipper.js": {
            "name": "src/gallery-chipper/js/Chipper.js",
            "modules": {
                "gallery-chipper": 1
            },
            "classes": {
                "Chipper": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-collapse-toggle/js/CollapseToggle.js": {
            "name": "src/gallery-collapse-toggle/js/CollapseToggle.js",
            "modules": {
                "gallery-collapse-toggle": 1
            },
            "classes": {
                "CollapseToggle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-complexnumber/js/ComplexMath.js": {
            "name": "src/gallery-complexnumber/js/ComplexMath.js",
            "modules": {
                "gallery-complexnumber": 1
            },
            "classes": {
                "ComplexMath": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-complexnumber/js/ComplexNumber.js": {
            "name": "src/gallery-complexnumber/js/ComplexNumber.js",
            "modules": {},
            "classes": {
                "ComplexNumber": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-console-test/js/console-test.js": {
            "name": "src/gallery-console-test/js/console-test.js",
            "modules": {
                "gallery-console-test": 1
            },
            "classes": {
                "Plugin.ConsoleTest": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js": {
            "name": "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js",
            "modules": {
                "gallery-datasource-async-function": 1
            },
            "classes": {
                "DataSource.AsyncFunction": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            }
        },
        "src/gallery-datatable-datasource-busy/js/datasource-busy.js": {
            "name": "src/gallery-datatable-datasource-busy/js/datasource-busy.js",
            "modules": {
                "gallery-datatable-datasource-busy": 1
            },
            "classes": {
                "Plugin.DataTableDataSourceBusy": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-datatable-paginator/js/paginator.js": {
            "name": "src/gallery-datatable-paginator/js/paginator.js",
            "modules": {
                "gallery-datatable-paginator": 1
            },
            "classes": {
                "Plugin.DataTablePaginator": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-datatable-row-expansion/js/row-expansion.js": {
            "name": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "modules": {
                "gallery-datatable-row-expansion": 1
            },
            "classes": {
                "Plugin.DataTableRowExpansion": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-datatable-state/js/state.js": {
            "name": "src/gallery-datatable-state/js/state.js",
            "modules": {
                "gallery-datatable-state": 1
            },
            "classes": {
                "Plugin.DataTableState": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-datetime/js/DateTime.js": {
            "name": "src/gallery-datetime/js/DateTime.js",
            "modules": {
                "gallery-datetime": 1
            },
            "classes": {
                "DateTime": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-datetime-range/js/DateTimeRange.js": {
            "name": "src/gallery-datetime-range/js/DateTimeRange.js",
            "modules": {
                "gallery-datetime-range": 1
            },
            "classes": {
                "DateTimeRange": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-datetime-utils/js/utils.js": {
            "name": "src/gallery-datetime-utils/js/utils.js",
            "modules": {
                "gallery-datetime-utils": 1
            },
            "classes": {
                "DateTimeUtils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-dimensions/js/Dimensions.js": {
            "name": "src/gallery-dimensions/js/Dimensions.js",
            "modules": {
                "gallery-dimensions": 1
            },
            "classes": {
                "Node~dimensions": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-eventsource/js/eventsource.js": {
            "name": "src/gallery-eventsource/js/eventsource.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-expiration-cache/js/ExpirationCache.js": {
            "name": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "modules": {
                "gallery-expiration-cache": 1
            },
            "classes": {
                "ExpirationCache": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-exprbuilder/js/ExpressionBuilder.js": {
            "name": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "modules": {
                "gallery-exprbuilder": 1
            },
            "classes": {
                "ExpressionBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-formmgr/js/FormManager.js": {
            "name": "src/gallery-formmgr/js/FormManager.js",
            "modules": {
                "gallery-formmgr": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-formmgr-css-validation/js/CSSValidation.js": {
            "name": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "modules": {
                "gallery-formmgr-css-validation": 1
            },
            "classes": {
                "FormManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js": {
            "name": "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js",
            "modules": {
                "gallery-formmgr-overlay-plugin": 1
            },
            "classes": {
                "Plugin.OverlayForm": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-funcprog/js/array-extras.js": {
            "name": "src/gallery-funcprog/js/array-extras.js",
            "modules": {},
            "classes": {
                "Array~funcprog-extras": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-funcprog/js/yui-extras.js": {
            "name": "src/gallery-funcprog/js/yui-extras.js",
            "modules": {
                "gallery-funcprog": 1
            },
            "classes": {
                "YUI~funcprog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-input-calendar-sync/js/sync.js": {
            "name": "src/gallery-input-calendar-sync/js/sync.js",
            "modules": {
                "gallery-input-calendar-sync": 1
            },
            "classes": {
                "Plugin.InputCalendarSync": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-instancemanager/js/InstanceManager.js": {
            "name": "src/gallery-instancemanager/js/InstanceManager.js",
            "modules": {
                "gallery-instancemanager": 1
            },
            "classes": {
                "InstanceManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-io-adobe-air/js/air.js": {
            "name": "src/gallery-io-adobe-air/js/air.js",
            "modules": {
                "gallery-io-adobe-air": 1
            },
            "classes": {},
            "fors": {
                "IO": 1
            },
            "namespaces": {}
        },
        "src/gallery-io-multiresponse/js/multi-response.js": {
            "name": "src/gallery-io-multiresponse/js/multi-response.js",
            "modules": {
                "gallery-io-multiresponse": 1
            },
            "classes": {
                "io~multiresponse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-iterable-extras/js/array-iterator.js": {
            "name": "src/gallery-iterable-extras/js/array-iterator.js",
            "modules": {},
            "classes": {
                "ArrayIterator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-iterable-extras/js/iterable-extras.js": {
            "name": "src/gallery-iterable-extras/js/iterable-extras.js",
            "modules": {
                "gallery-iterable-extras": 1
            },
            "classes": {
                "Iterable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-layout/js/PageLayout.js": {
            "name": "src/gallery-layout/js/PageLayout.js",
            "modules": {
                "gallery-layout": 1
            },
            "classes": {
                "PageLayout": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-layout-anywidget/js/layout-anywidget.js": {
            "name": "src/gallery-layout-anywidget/js/layout-anywidget.js",
            "modules": {
                "gallery-layout-anywidget": 1
            },
            "classes": {
                "Plugin.PageLayoutAnyWidgetModule": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-layout-cols/js/PageLayoutCols.js": {
            "name": "src/gallery-layout-cols/js/PageLayoutCols.js",
            "modules": {
                "gallery-layout-cols": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-layout-datatable/js/layout-datatable.js": {
            "name": "src/gallery-layout-datatable/js/layout-datatable.js",
            "modules": {
                "gallery-layout-datatable": 1
            },
            "classes": {
                "Plugin.PageLayoutDataTableModule": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-layout-dd/js/PageLayoutDD.js": {
            "name": "src/gallery-layout-dd/js/PageLayoutDD.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-layout-rows/js/PageLayoutRows.js": {
            "name": "src/gallery-layout-rows/js/PageLayoutRows.js",
            "modules": {
                "gallery-layout-rows": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-linkedlist/js/LinkedList.js": {
            "name": "src/gallery-linkedlist/js/LinkedList.js",
            "modules": {
                "gallery-linkedlist": 1
            },
            "classes": {
                "LinkedList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-linkedlist/js/LinkedListItem.js": {
            "name": "src/gallery-linkedlist/js/LinkedListItem.js",
            "modules": {},
            "classes": {
                "LinkedListItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-linkedlist/js/LinkedListIterator.js": {
            "name": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "modules": {},
            "classes": {
                "LinkedListIterator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-log-filter/js/log-filter.js": {
            "name": "src/gallery-log-filter/js/log-filter.js",
            "modules": {
                "gallery-log-filter": 1
            },
            "classes": {
                "LogFilter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-math/js/Math.js": {
            "name": "src/gallery-math/js/Math.js",
            "modules": {
                "gallery-math": 1
            },
            "classes": {
                "Math": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-mathcanvas/js/Arccosine.js": {
            "name": "src/gallery-mathcanvas/js/Arccosine.js",
            "modules": {},
            "classes": {
                "MathFunction.Arccosine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Arcsine.js": {
            "name": "src/gallery-mathcanvas/js/Arcsine.js",
            "modules": {},
            "classes": {
                "MathFunction.Arcsine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Arctangent.js": {
            "name": "src/gallery-mathcanvas/js/Arctangent.js",
            "modules": {},
            "classes": {
                "MathFunction.Arctangent": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Arctangent2.js": {
            "name": "src/gallery-mathcanvas/js/Arctangent2.js",
            "modules": {},
            "classes": {
                "MathFunction.Arctangent2": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Conjugate.js": {
            "name": "src/gallery-mathcanvas/js/Conjugate.js",
            "modules": {},
            "classes": {
                "MathFunction.Conjugate": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Cosine.js": {
            "name": "src/gallery-mathcanvas/js/Cosine.js",
            "modules": {},
            "classes": {
                "MathFunction.Cosine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/E.js": {
            "name": "src/gallery-mathcanvas/js/E.js",
            "modules": {},
            "classes": {
                "MathFunction.E": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Exponential.js": {
            "name": "src/gallery-mathcanvas/js/Exponential.js",
            "modules": {},
            "classes": {
                "MathFunction.Exponential": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/FunctionWithArgs.js": {
            "name": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "modules": {},
            "classes": {
                "MathFunction.FunctionWithArgs": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/HyperbolicCosine.js": {
            "name": "src/gallery-mathcanvas/js/HyperbolicCosine.js",
            "modules": {},
            "classes": {
                "MathFunction.HyperbolicCosine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/HyperbolicSine.js": {
            "name": "src/gallery-mathcanvas/js/HyperbolicSine.js",
            "modules": {},
            "classes": {
                "MathFunction.HyperbolicSine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/HyperbolicTangent.js": {
            "name": "src/gallery-mathcanvas/js/HyperbolicTangent.js",
            "modules": {},
            "classes": {
                "MathFunction.HyperbolicTangent": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/I.js": {
            "name": "src/gallery-mathcanvas/js/I.js",
            "modules": {},
            "classes": {
                "MathFunction.I": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/ImaginaryPart.js": {
            "name": "src/gallery-mathcanvas/js/ImaginaryPart.js",
            "modules": {},
            "classes": {
                "MathFunction.ImaginaryPart": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/InverseHyperbolicCosine.js": {
            "name": "src/gallery-mathcanvas/js/InverseHyperbolicCosine.js",
            "modules": {},
            "classes": {
                "MathFunction.InverseHyperbolicCosine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/InverseHyperbolicSine.js": {
            "name": "src/gallery-mathcanvas/js/InverseHyperbolicSine.js",
            "modules": {},
            "classes": {
                "MathFunction.InverseHyperbolicSine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/InverseHyperbolicTangent.js": {
            "name": "src/gallery-mathcanvas/js/InverseHyperbolicTangent.js",
            "modules": {},
            "classes": {
                "MathFunction.InverseHyperbolicTangent": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Logarithm.js": {
            "name": "src/gallery-mathcanvas/js/Logarithm.js",
            "modules": {},
            "classes": {
                "MathFunction.Logarithm": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Magnitude.js": {
            "name": "src/gallery-mathcanvas/js/Magnitude.js",
            "modules": {},
            "classes": {
                "MathFunction.Magnitude": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/MathCanvas.js": {
            "name": "src/gallery-mathcanvas/js/MathCanvas.js",
            "modules": {
                "gallery-mathcanvas": 1
            },
            "classes": {
                "MathCanvas": 1,
                "MathCanvas.Parser": 1
            },
            "fors": {},
            "namespaces": {
                "MathCanvas": 1
            }
        },
        "src/gallery-mathcanvas/js/MathFunction.js": {
            "name": "src/gallery-mathcanvas/js/MathFunction.js",
            "modules": {},
            "classes": {
                "MathFunction": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-mathcanvas/js/Max.js": {
            "name": "src/gallery-mathcanvas/js/Max.js",
            "modules": {},
            "classes": {
                "MathFunction.Max": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Min.js": {
            "name": "src/gallery-mathcanvas/js/Min.js",
            "modules": {},
            "classes": {
                "MathFunction.Min": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/NaturalLog.js": {
            "name": "src/gallery-mathcanvas/js/NaturalLog.js",
            "modules": {},
            "classes": {
                "MathFunction.NaturalLog": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Negate.js": {
            "name": "src/gallery-mathcanvas/js/Negate.js",
            "modules": {},
            "classes": {
                "MathFunction.Negate": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Phase.js": {
            "name": "src/gallery-mathcanvas/js/Phase.js",
            "modules": {},
            "classes": {
                "MathFunction.Phase": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Pi.js": {
            "name": "src/gallery-mathcanvas/js/Pi.js",
            "modules": {},
            "classes": {
                "MathFunction.Pi": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Product.js": {
            "name": "src/gallery-mathcanvas/js/Product.js",
            "modules": {},
            "classes": {
                "MathFunction.Product": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Quotient.js": {
            "name": "src/gallery-mathcanvas/js/Quotient.js",
            "modules": {},
            "classes": {
                "MathFunction.Quotient": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/RealPart.js": {
            "name": "src/gallery-mathcanvas/js/RealPart.js",
            "modules": {},
            "classes": {
                "MathFunction.RealPart": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/RectList.js": {
            "name": "src/gallery-mathcanvas/js/RectList.js",
            "modules": {},
            "classes": {
                "MathCanvas.RectList": 1
            },
            "fors": {},
            "namespaces": {
                "MathCanvas": 1
            }
        },
        "src/gallery-mathcanvas/js/Rotate.js": {
            "name": "src/gallery-mathcanvas/js/Rotate.js",
            "modules": {},
            "classes": {
                "MathFunction.Rotate": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Sine.js": {
            "name": "src/gallery-mathcanvas/js/Sine.js",
            "modules": {},
            "classes": {
                "MathFunction.Sine": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/SquareRoot.js": {
            "name": "src/gallery-mathcanvas/js/SquareRoot.js",
            "modules": {},
            "classes": {
                "MathFunction.SquareRoot": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Sum.js": {
            "name": "src/gallery-mathcanvas/js/Sum.js",
            "modules": {},
            "classes": {
                "MathFunction.Sum": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Tangent.js": {
            "name": "src/gallery-mathcanvas/js/Tangent.js",
            "modules": {},
            "classes": {
                "MathFunction.Tangent": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Value.js": {
            "name": "src/gallery-mathcanvas/js/Value.js",
            "modules": {},
            "classes": {
                "MathFunction.Value": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-mathcanvas/js/Variable.js": {
            "name": "src/gallery-mathcanvas/js/Variable.js",
            "modules": {},
            "classes": {
                "MathFunction.Variable": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1
            }
        },
        "src/gallery-matrix-background/js/MatrixBackground.js": {
            "name": "src/gallery-matrix-background/js/MatrixBackground.js",
            "modules": {
                "gallery-matrix-background": 1
            },
            "classes": {
                "MatrixBackground": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-matrix-credits/js/MatrixCredits.js": {
            "name": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "modules": {
                "gallery-matrix-credits": 1
            },
            "classes": {
                "MatrixCredits": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-mojito-rpc/js/mojito-rpc.js": {
            "name": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "modules": {
                "gallery-mojito-rpc": 1
            },
            "classes": {
                "RPC.Mojito": 1
            },
            "fors": {},
            "namespaces": {
                "RPC": 1
            }
        },
        "src/gallery-mru-cache/js/MRUCache.js": {
            "name": "src/gallery-mru-cache/js/MRUCache.js",
            "modules": {
                "gallery-mru-cache": 1
            },
            "classes": {
                "MRUCache": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-multiobject/js/MultiObject.js": {
            "name": "src/gallery-multiobject/js/MultiObject.js",
            "modules": {
                "gallery-multiobject": 1
            },
            "classes": {
                "MultiObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-neon/js/Neon.js": {
            "name": "src/gallery-neon/js/Neon.js",
            "modules": {
                "gallery-neon": 1
            },
            "classes": {
                "Plugin.Neon": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-node-event-set/js/node-event-set.js": {
            "name": "src/gallery-node-event-set/js/node-event-set.js",
            "modules": {
                "gallery-node-event-set": 1
            },
            "classes": {
                "Node~event-set": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-node-optimizations/js/Optimizations.js": {
            "name": "src/gallery-node-optimizations/js/Optimizations.js",
            "modules": {
                "gallery-node-optimizations": 1
            },
            "classes": {
                "Node~optimizations": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-node-utils/js/utils.js": {
            "name": "src/gallery-node-utils/js/utils.js",
            "modules": {
                "gallery-node-utils": 1
            },
            "classes": {
                "Node~utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-nodelist-extras2/js/nodelist-extras2.js": {
            "name": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "modules": {
                "gallery-nodelist-extras2": 1
            },
            "classes": {
                "NodeList~extras2": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-object-extras/js/array-extras.js": {
            "name": "src/gallery-object-extras/js/array-extras.js",
            "modules": {},
            "classes": {
                "Array~object-extras": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-object-extras/js/object-extras.js": {
            "name": "src/gallery-object-extras/js/object-extras.js",
            "modules": {
                "gallery-object-extras": 1
            },
            "classes": {
                "Object~extras": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/CurrentPageInput.js": {
            "name": "src/gallery-paginator/js/CurrentPageInput.js",
            "modules": {
                "gallery-paginator": 1
            },
            "classes": {
                "Paginator.ui.CurrentPageInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/CurrentPageReport.js": {
            "name": "src/gallery-paginator/js/CurrentPageReport.js",
            "modules": {},
            "classes": {
                "Paginator.ui.CurrentPageReport": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/FirstPageLink.js": {
            "name": "src/gallery-paginator/js/FirstPageLink.js",
            "modules": {},
            "classes": {
                "Paginator.ui.FirstPageLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/ItemRangeDropdown.js": {
            "name": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "modules": {},
            "classes": {
                "Paginator.ui.ItemRangeDropdown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/LastPageLink.js": {
            "name": "src/gallery-paginator/js/LastPageLink.js",
            "modules": {},
            "classes": {
                "Paginator.ui.LastPageLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/NextPageLink.js": {
            "name": "src/gallery-paginator/js/NextPageLink.js",
            "modules": {},
            "classes": {
                "Paginator.ui.NextPageLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/PageLinks.js": {
            "name": "src/gallery-paginator/js/PageLinks.js",
            "modules": {},
            "classes": {
                "Paginator.ui.PageLinks": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/Paginator.js": {
            "name": "src/gallery-paginator/js/Paginator.js",
            "modules": {},
            "classes": {
                "Paginator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/PreviousPageLink.js": {
            "name": "src/gallery-paginator/js/PreviousPageLink.js",
            "modules": {},
            "classes": {
                "Paginator.ui.PreviousPageLink": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/RowsPerPageDropdown.js": {
            "name": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "modules": {},
            "classes": {
                "Paginator.ui.RowsPerPageDropdown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-paginator/js/ValidationPageLinks.js": {
            "name": "src/gallery-paginator/js/ValidationPageLinks.js",
            "modules": {},
            "classes": {
                "Paginator.ui.ValidationPageLinks": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-popup/js/input-popup.js": {
            "name": "src/gallery-popup/js/input-popup.js",
            "modules": {},
            "classes": {
                "InputPopup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-popup/js/popup.js": {
            "name": "src/gallery-popup/js/popup.js",
            "modules": {
                "gallery-popup": 1
            },
            "classes": {
                "Popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-querybuilder/js/QueryBuilder.js": {
            "name": "src/gallery-querybuilder/js/QueryBuilder.js",
            "modules": {
                "gallery-querybuilder": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-querybuilder/js/Select.js": {
            "name": "src/gallery-querybuilder/js/Select.js",
            "modules": {},
            "classes": {
                "QueryBuilder.Select": 1
            },
            "fors": {},
            "namespaces": {
                "QueryBuilder": 1
            }
        },
        "src/gallery-querybuilder/js/String.js": {
            "name": "src/gallery-querybuilder/js/String.js",
            "modules": {},
            "classes": {
                "QueryBuilder.String": 1
            },
            "fors": {},
            "namespaces": {
                "QueryBuilder": 1
            }
        },
        "src/gallery-querybuilder/js/Types.js": {
            "name": "src/gallery-querybuilder/js/Types.js",
            "modules": {},
            "classes": {
                "QueryBuilder": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-querybuilder-daterange/js/daterange.js": {
            "name": "src/gallery-querybuilder-daterange/js/daterange.js",
            "modules": {
                "gallery-querybuilder-daterange": 1
            },
            "classes": {
                "QueryBuilder.DateRange": 1
            },
            "fors": {},
            "namespaces": {
                "QueryBuilder": 1
            }
        },
        "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js": {
            "name": "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js",
            "modules": {
                "gallery-querybuilder-multiselect-input": 1
            },
            "classes": {
                "QueryBuilder.MultiselectInput": 1
            },
            "fors": {},
            "namespaces": {
                "QueryBuilder": 1
            }
        },
        "src/gallery-quickedit/js/QuickEdit.js": {
            "name": "src/gallery-quickedit/js/QuickEdit.js",
            "modules": {
                "gallery-quickedit": 1
            },
            "classes": {
                "Plugin.DataTableQuickEdit": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            }
        },
        "src/gallery-scrollintoview/js/ScrollIntoView.js": {
            "name": "src/gallery-scrollintoview/js/ScrollIntoView.js",
            "modules": {
                "gallery-scrollintoview": 1
            },
            "classes": {
                "Node~scrollIntoView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-sort-extras/js/sort-extras.js": {
            "name": "src/gallery-sort-extras/js/sort-extras.js",
            "modules": {
                "gallery-sort-extras": 1
            },
            "classes": {
                "Sort": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-table-utils/js/utils.js": {
            "name": "src/gallery-table-utils/js/utils.js",
            "modules": {
                "gallery-table-utils": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-test-extras/js/Assert.js": {
            "name": "src/gallery-test-extras/js/Assert.js",
            "modules": {
                "gallery-test-extras": 1
            },
            "classes": {
                "Assert": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-treeble/js/Treeble.js": {
            "name": "src/gallery-treeble/js/Treeble.js",
            "modules": {
                "gallery-treeble": 1
            },
            "classes": {
                "Treeble": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/gallery-treeble/js/TreebleDataSource.js": {
            "name": "src/gallery-treeble/js/TreebleDataSource.js",
            "modules": {},
            "classes": {
                "DataSource.Treeble": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            }
        },
        "src/gallery-treeble/js/TreebleParser.js": {
            "name": "src/gallery-treeble/js/TreebleParser.js",
            "modules": {},
            "classes": {
                "Parsers": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "gallery-accordion-horiz-vert": {
            "name": "gallery-accordion-horiz-vert",
            "submodules": {},
            "elements": {},
            "classes": {
                "Accordion": 1,
                "Plugin.FixedSizeAccordion": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-accordion-horiz-vert/js/FixedSizePlugin.js",
            "line": 5,
            "description": "Widget to manage an accordion, either horizontally or vertically.\nAllows either multiple open sections or only a single open section.\nProvides option to always force at least one item to be open.",
            "itemtype": "main"
        },
        "gallery-adobe-air-config": {
            "name": "gallery-adobe-air-config",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-adobe-air-config/js/config.js",
            "line": 5,
            "description": "Implements read-only configuration data, loaded from `app:/config.json`.\n\nThis is a singleton because there should only be one application configuration."
        },
        "gallery-adobe-air-page-manager": {
            "name": "gallery-adobe-air-page-manager",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-adobe-air-page-manager/js/page-manager.js",
            "line": 5,
            "description": "Implements simple page manager for Adobe AIR.  Page HTML is loaded from\nthe modules directory, and JavaScript is loaded using the module prefix\nand the page name.\n\nThis is a singleton because there should only be one page manager."
        },
        "gallery-adobe-air-prefs": {
            "name": "gallery-adobe-air-prefs",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-adobe-air-prefs/js/prefs.js",
            "line": 5,
            "description": "Implements read-write preferences data, loaded from `app-storage:/prefs.json`.\n\nThis is a singleton because there should only be one set of application preferences."
        },
        "gallery-algorithms": {
            "name": "gallery-algorithms",
            "submodules": {},
            "elements": {},
            "classes": {
                "Array~algorithms": 1,
                "ArrayList~extras": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 7,
            "description": "<p>Useful algorithms not provided by browsers.</p>",
            "itemtype": "main"
        },
        "gallery-anim-class": {
            "name": "gallery-anim-class",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-anim-class/js/anim-class.js",
            "line": 3,
            "description": "<p>Adds CSS class animation to `Y.Anim`, so you can specify `cssClass`\nin `from` and/or `to`.  At the end of the animation, the `from` class is\nreplaced by the `to` class, and all the individual styles used during\nthe animation are removed.</p>\n\n<p>Explicit entries in `from` or `to` override values set by cssClass.</p>"
        },
        "gallery-anim-sequence": {
            "name": "gallery-anim-sequence",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.NodeFXSequence": 1,
                "AnimSequence": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 7,
            "description": "Manages a sequence of animations, so you don't have to chain them\nmanually. Each item in the sequence can be a single animation, an array\nof animations to perform in parallel, a function which performs an\nimmediate action, or a delay in milliseconds.\n\nPass `sequence` in the configuration to set the initial animation\nsequence.\n\nThis class exposes the same basic API as Y.Anim, so you can pass\nY.AnimSequence to anything that just needs to run/pause/stop an\nanimation.",
            "itemtype": "main"
        },
        "gallery-bulkedit": {
            "name": "gallery-bulkedit",
            "submodules": {},
            "elements": {},
            "classes": {
                "DataSource.BulkEdit": 1,
                "BulkEditor": 1,
                "HTMLTableBulkEditor": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            },
            "tag": "main",
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 5,
            "description": "A widget for editing many records at once.",
            "itemtype": "main"
        },
        "gallery-busyoverlay": {
            "name": "gallery-busyoverlay",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.BusyOverlay": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 7,
            "description": "A plugin for Y.Node or Y.Widget that creates an overlaying div.\nEspecially useful for a widget that is waiting for an AJAX response.",
            "itemtype": "main"
        },
        "gallery-canvas": {
            "name": "gallery-canvas",
            "submodules": {},
            "elements": {},
            "classes": {
                "Canvas.Context2d": 1
            },
            "fors": {},
            "namespaces": {
                "Canvas": 1
            },
            "tag": "main",
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 15,
            "description": "<p>Wrapper for a canvas 2d context.  It exposes the exact same api as\nthe native 2d context, plus some extras, documented below.  Just like\nY.Node, use get() and set() to modify attributes.</p>",
            "itemtype": "main"
        },
        "gallery-checkboxgroups": {
            "name": "gallery-checkboxgroups",
            "submodules": {},
            "elements": {},
            "classes": {
                "AtLeastOneCheckboxGroup": 1,
                "AtMostOneCheckboxGroup": 1,
                "CheckboxGroup": 1,
                "EnableIfAnyCheckboxGroup": 1,
                "SelectAllCheckboxGroup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "line": 5,
            "description": "Various behaviors that can be attached to a group of checkboxes.",
            "itemtype": "main"
        },
        "gallery-chipper": {
            "name": "gallery-chipper",
            "submodules": {},
            "elements": {},
            "classes": {
                "Chipper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-chipper/js/Chipper.js",
            "line": 7,
            "description": "<p>Destroys objects asynchronously.</p>",
            "itemtype": "main"
        },
        "gallery-collapse-toggle": {
            "name": "gallery-collapse-toggle",
            "submodules": {},
            "elements": {},
            "classes": {
                "CollapseToggle": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-collapse-toggle/js/CollapseToggle.js",
            "line": 10,
            "description": "Overrides Y.Node.show() to make it look like a flickering neon sign.",
            "itemtype": "main"
        },
        "gallery-complexnumber": {
            "name": "gallery-complexnumber",
            "submodules": {},
            "elements": {},
            "classes": {
                "ComplexMath": 1,
                "ComplexNumber": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 7,
            "description": "Support for complex numbers.",
            "itemtype": "main"
        },
        "gallery-console-test": {
            "name": "gallery-console-test",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.ConsoleTest": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-console-test/js/console-test.js",
            "line": 7,
            "description": "<p>Adds a menu of registered unit test suites to the YUI 3 Console.</p>",
            "itemtype": "main"
        },
        "gallery-datasource-async-function": {
            "name": "gallery-datasource-async-function",
            "submodules": {},
            "elements": {},
            "classes": {
                "DataSource.AsyncFunction": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            },
            "tag": "main",
            "file": "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js",
            "line": 7,
            "description": "<p>Data source that calls an asynchronous function.</p>",
            "itemtype": "main"
        },
        "gallery-datatable-datasource-busy": {
            "name": "gallery-datatable-datasource-busy",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.DataTableDataSourceBusy": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-datatable-datasource-busy/js/datasource-busy.js",
            "line": 7,
            "description": "<p>Extension to datatable-datasource to show that the datasource is busy\nloading.</p>",
            "itemtype": "main"
        },
        "gallery-datatable-paginator": {
            "name": "gallery-datatable-paginator",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.DataTablePaginator": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 7,
            "description": "Plugin for DataTable to connect a paginator.",
            "itemtype": "main"
        },
        "gallery-datatable-row-expansion": {
            "name": "gallery-datatable-row-expansion",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.DataTableRowExpansion": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 7,
            "description": "<p>Plugin for DataTable to show additional information for each row via\na twistdown.  The result of the template is displayed spanning all the\ncolumns beyond the twistdown column.</p>\n\n<p>This class patches `getCell` and `getRow` to ignore the additional\nrows created by this plugin.</p>",
            "itemtype": "main"
        },
        "gallery-datatable-state": {
            "name": "gallery-datatable-state",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.DataTableState": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 7,
            "description": "<p>Plugin for DataTable to preserve state, either on a single page or\nacross pages.</p>",
            "itemtype": "main"
        },
        "gallery-datetime": {
            "name": "gallery-datetime",
            "submodules": {},
            "elements": {},
            "classes": {
                "DateTime": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 11,
            "description": "Manages a date input field and an optional time field.  Calendars and\ntime selection widgets can be attached to these fields, but will not be\nmanaged by this class.\n\nDate/time values can be specified as either a Date object or an object\nspecifying year,month,day (all 1-based) or date_str and optionally\nhour,minute or time_str.  Individual values take precedence over string\nvalues.  Time resolution is in minutes.",
            "itemtype": "main"
        },
        "gallery-datetime-range": {
            "name": "gallery-datetime-range",
            "submodules": {},
            "elements": {},
            "classes": {
                "DateTimeRange": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-datetime-range/js/DateTimeRange.js",
            "line": 7,
            "description": "Manages a pair of Y.DateTime instances.  The ending date is constrained\nby the min, max, and blackout ranges configured on the startDateTime\ninstance.  The range is not allowed to span a blackout, so if the start\ndate is between two blackout ranges, then the end date must be after the\nstart date and before the start of the next blackout range.",
            "itemtype": "main"
        },
        "gallery-datetime-utils": {
            "name": "gallery-datetime-utils",
            "submodules": {},
            "elements": {},
            "classes": {
                "DateTimeUtils": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 7,
            "description": "Utility functions work working with dates and times.",
            "itemtype": "main"
        },
        "gallery-dimensions": {
            "name": "gallery-dimensions",
            "submodules": {},
            "elements": {},
            "classes": {
                "Node~dimensions": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 7,
            "description": "Functions for measuring the size of a node.",
            "itemtype": "main"
        },
        "gallery-expiration-cache": {
            "name": "gallery-expiration-cache",
            "submodules": {},
            "elements": {},
            "classes": {
                "ExpirationCache": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 5,
            "description": "<p>Cache which drops items based on a user-defined expiration criterion,\ne.g., age.  By default, expired items are only removed when they are\nrequested.  If you want to \"stop the world\" and clean out the cache,\ncall clean().</p>",
            "itemtype": "main"
        },
        "gallery-exprbuilder": {
            "name": "gallery-exprbuilder",
            "submodules": {},
            "elements": {},
            "classes": {
                "ExpressionBuilder": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 7,
            "description": "Widget which helps user to build a query expression.",
            "itemtype": "main"
        },
        "gallery-formmgr": {
            "name": "gallery-formmgr",
            "submodules": {
                "gallery-formmgr-css-validation": 1
            },
            "elements": {},
            "classes": {
                "FormManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 33,
            "description": "<p>FormManager provides support for initializing a form, pre-validating\nuser input, and displaying messages returned by the server.</p>\n\n<p>Also see the documentation for gallery-formmgr-css-validation.</p>",
            "itemtype": "main"
        },
        "gallery-formmgr-css-validation": {
            "name": "gallery-formmgr-css-validation",
            "submodules": {},
            "elements": {},
            "classes": {
                "FormManager": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-formmgr",
            "namespace": "",
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 33,
            "description": "<p>FormManager CSS Validation provides basic functionality for\npre-validating user input based on CSS classes set on form elements.</p>\n\n<p>The following classes can be applied to a form element for\npre-validation:</p>\n\n<dl>\n<dt><code>yiv-required</code></dt>\n<dd>Value must not be empty.</dd>\n\n<dt><code>yiv-length:[x,y]</code></dt>\n<dd>String must be at least x characters and at most y characters.\nAt least one of x and y must be specified.</dd>\n\n<dt><code>yiv-integer:[x,y]</code></dt>\n<dd>The integer value must be at least x and at most y.\nx and y are both optional.</dd>\n\n<dt><code>yiv-decimal:[x,y]</code></dt>\n<dd>The decimal value must be at least x and at most y.  Exponents are\nnot allowed.  x and y are both optional.</dd>\n</dl>\n\n<p>If we ever need to allow exponents, we can use yiv-float.</p>"
        },
        "gallery-formmgr-overlay-plugin": {
            "name": "gallery-formmgr-overlay-plugin",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.OverlayForm": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js",
            "line": 7,
            "description": "A simple plugin for Y.Overlay which attaches a Y.FormManager to the\n&lt;form&gt; inside the overlay.  Before the overlay is shown,\nprepareForm() is called to insert the default values.  (If this returns\nfalse, the overlay is not shown.)  After the overlay is shown, focus is\nset to the first field.",
            "itemtype": "main"
        },
        "gallery-funcprog": {
            "name": "gallery-funcprog",
            "submodules": {},
            "elements": {},
            "classes": {
                "Array~funcprog-extras": 1,
                "YUI~funcprog": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 7,
            "description": "<p>Augments global Y object with the same higher-order functions that\narray-extras adds to Y.Array.  Note that, unlike arrays and NodeLists,\niteration order for an object is arbitrary, so be careful when applying\nnon-commutative operations!</p>",
            "itemtype": "main"
        },
        "gallery-input-calendar-sync": {
            "name": "gallery-input-calendar-sync",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.InputCalendarSync": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-input-calendar-sync/js/sync.js",
            "line": 7,
            "description": "Plugin for an input field which syncs the value with a calendar.",
            "itemtype": "main"
        },
        "gallery-instancemanager": {
            "name": "gallery-instancemanager",
            "submodules": {},
            "elements": {},
            "classes": {
                "InstanceManager": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 7,
            "description": "<p>Stores instances of JavaScript components.  Allows a constructor or\nfactory method to be passed in place of an instance.  This enables lazy\nconstruction on demand.</p>\n\n<p>One use is to create a global repository of JavaScript components\nattached to DOM id's, e.g., YUI Buttons built on top of HTML\nbuttons.</p>",
            "itemtype": "main"
        },
        "gallery-io-adobe-air": {
            "name": "gallery-io-adobe-air",
            "submodules": {},
            "elements": {},
            "classes": {
                "IO": 1
            },
            "fors": {
                "IO": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-io-adobe-air/js/air.js",
            "line": 3,
            "description": "Implements transport protocol for Adobe AIR.  Based on YUI io-nodejs module."
        },
        "gallery-io-multiresponse": {
            "name": "gallery-io-multiresponse",
            "submodules": {},
            "elements": {},
            "classes": {
                "io~multiresponse": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 8,
            "description": "<p>Extends the IO base class to enable multiple responses using an\niframe as the transport medium.</p>"
        },
        "gallery-iterable-extras": {
            "name": "gallery-iterable-extras",
            "submodules": {},
            "elements": {},
            "classes": {
                "ArrayIterator": 1,
                "Iterable": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 7,
            "description": "<p>Functional programming support for iterable classes.  The class must\nimplement the `iterator` and `newInstance` methods.</p>\n\n<p>For most methods, the iterator only needs to implement `next` and\n`atEnd`.  Backwards iterators like `reduceRight` require `prev` and\n`atBeginning`.</p>\n\n<p>Iterable classes must mix these functions:  `Y.mix(SomeClass,\nY.Iterable, false, null, 4);`  Passing false as the third argument\nallows your class to provide optimized implementations of individual\nfunctions.</p>",
            "itemtype": "main"
        },
        "gallery-layout": {
            "name": "gallery-layout",
            "submodules": {
                "gallery-layout-cols": 1,
                "gallery-layout-rows": 1
            },
            "elements": {},
            "classes": {
                "PageLayout": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 9,
            "description": "Provides fluid layout for the content on a page."
        },
        "gallery-layout-anywidget": {
            "name": "gallery-layout-anywidget",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.PageLayoutAnyWidgetModule": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-layout-anywidget/js/layout-anywidget.js",
            "line": 7,
            "description": "<p>Plugin for any Y.Widget to make it fit inside a PageLayout module.\nAfter you plug it in, it automatically detects the PageLayout module, so\nyou don't have to do anything.</p>",
            "itemtype": "main"
        },
        "gallery-layout-cols": {
            "name": "gallery-layout-cols",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-layout",
            "namespace": "",
            "file": "src/gallery-layout-cols/js/PageLayoutCols.js",
            "line": 5,
            "description": "PageLayout plugin for managing horizontally stacked columns on a page,\nsandwiched vertically between header and footer.  Each column contains\none or more modules."
        },
        "gallery-layout-datatable": {
            "name": "gallery-layout-datatable",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.PageLayoutDataTableModule": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-layout-datatable/js/layout-datatable.js",
            "line": 7,
            "description": "<p>Plugin for scrolling DataTable to make it fit inside a PageLayout\nmodule.  After you plug it in, it automatically detects the PageLayout\nmodule, so you don't have to do anything.</p>",
            "itemtype": "main"
        },
        "gallery-layout-rows": {
            "name": "gallery-layout-rows",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "gallery-layout",
            "namespace": "",
            "file": "src/gallery-layout-rows/js/PageLayoutRows.js",
            "line": 7,
            "description": "PageLayout plugin for managing vertically stacked rows on a page,\nsandwiched vertically between header and footer.  Each row contains one\nor more modules."
        },
        "gallery-linkedlist": {
            "name": "gallery-linkedlist",
            "submodules": {},
            "elements": {},
            "classes": {
                "LinkedList": 1,
                "LinkedListItem": 1,
                "LinkedListIterator": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 5,
            "description": "<p>Doubly linked list for storing items.  Supports iteration via\nLinkedListIterator (returned by this.iterator()) or Y.each().  Also\nsupports all the other operations defined in gallery-funcprog.</p>\n\n<p>Direct indexing into the list is not supported, as a reminder that it\nis an expensive operation.  Instead, use find() with a function that\nchecks the index.</p>",
            "itemtype": "main"
        },
        "gallery-log-filter": {
            "name": "gallery-log-filter",
            "submodules": {},
            "elements": {},
            "classes": {
                "LogFilter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-log-filter/js/log-filter.js",
            "line": 7,
            "description": "<p>Appends filters to the log output.</p>",
            "itemtype": "main"
        },
        "gallery-math": {
            "name": "gallery-math",
            "submodules": {},
            "elements": {},
            "classes": {
                "Math": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-math/js/Math.js",
            "line": 7,
            "description": "<p>Augments built-in JavaScript Math namespace with additional\nmathematical functions.</p>",
            "itemtype": "main"
        },
        "gallery-mathcanvas": {
            "name": "gallery-mathcanvas",
            "submodules": {},
            "elements": {},
            "classes": {
                "MathFunction.Arccosine": 1,
                "MathFunction.Arcsine": 1,
                "MathFunction.Arctangent": 1,
                "MathFunction.Arctangent2": 1,
                "MathFunction.Conjugate": 1,
                "MathFunction.Cosine": 1,
                "MathFunction.E": 1,
                "MathFunction.Exponential": 1,
                "MathFunction.FunctionWithArgs": 1,
                "MathFunction.HyperbolicCosine": 1,
                "MathFunction.HyperbolicSine": 1,
                "MathFunction.HyperbolicTangent": 1,
                "MathFunction.I": 1,
                "MathFunction.ImaginaryPart": 1,
                "MathFunction.InverseHyperbolicCosine": 1,
                "MathFunction.InverseHyperbolicSine": 1,
                "MathFunction.InverseHyperbolicTangent": 1,
                "MathFunction.Logarithm": 1,
                "MathFunction.Magnitude": 1,
                "MathCanvas": 1,
                "MathCanvas.Parser": 1,
                "MathFunction": 1,
                "MathFunction.Max": 1,
                "MathFunction.Min": 1,
                "MathFunction.NaturalLog": 1,
                "MathFunction.Negate": 1,
                "MathFunction.Phase": 1,
                "MathFunction.Pi": 1,
                "MathFunction.Product": 1,
                "MathFunction.Quotient": 1,
                "MathFunction.RealPart": 1,
                "MathCanvas.RectList": 1,
                "MathFunction.Rotate": 1,
                "MathFunction.Sine": 1,
                "MathFunction.SquareRoot": 1,
                "MathFunction.Sum": 1,
                "MathFunction.Tangent": 1,
                "MathFunction.Value": 1,
                "MathFunction.Variable": 1
            },
            "fors": {},
            "namespaces": {
                "MathFunction": 1,
                "MathCanvas": 1
            },
            "tag": "main",
            "file": "src/gallery-mathcanvas/js/Variable.js",
            "line": 5,
            "description": "Displays an arithmetical expression the way you would write it on paper.",
            "itemtype": "main"
        },
        "gallery-matrix-background": {
            "name": "gallery-matrix-background",
            "submodules": {},
            "elements": {},
            "classes": {
                "MatrixBackground": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 9,
            "description": "Node plugin to display falling text similar to what was used in the\ncredits for The Matrix.  If you plug into the body element, then it will\nfill the viewport.  Otherwise, you must set a width and height for the\nnode.",
            "itemtype": "main"
        },
        "gallery-matrix-credits": {
            "name": "gallery-matrix-credits",
            "submodules": {},
            "elements": {},
            "classes": {
                "MatrixCredits": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 9,
            "description": "Widget to display text similar to what was used in the credits for The\nMatrix.  If you render the widget into the body, then it will fill the\nviewport.  Otherwise, you must specify a width and height for the\nwidget.",
            "itemtype": "main"
        },
        "gallery-mojito-rpc": {
            "name": "gallery-mojito-rpc",
            "submodules": {},
            "elements": {},
            "classes": {
                "RPC.Mojito": 1
            },
            "fors": {},
            "namespaces": {
                "RPC": 1
            },
            "tag": "main",
            "file": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "line": 7,
            "description": "<p>RPC wrapper for Mojit proxy.  This allows you to use either\nY.RPC.JSON or Y.RPC.Mojito interchangeably.  The method in the Mojit\nproxy receives the parameters as an array in <code>body.params</code>.\nYou can pass this to the model as follows:\n<code>model.getItems.apply(model,\nac.params.getFromBody().params)</code></p>",
            "itemtype": "main"
        },
        "gallery-mru-cache": {
            "name": "gallery-mru-cache",
            "submodules": {},
            "elements": {},
            "classes": {
                "MRUCache": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 5,
            "description": "<p>Cache which drops items based on \"most recently used.\"  Items are\ndropped when a user-defined criterion is exceeded, e.g., total size or\nnumber of items.</p>\n\n<p>The items are stored in a map of {data,mru_item_ref}.  The MRU items\nare stored in a doubly linked list (which stores the map keys) to allow\neasy re-ordering and dropping of items.  Every cache hit moves the\nassociated MRU item to the front of the list.</p>",
            "itemtype": "main"
        },
        "gallery-multiobject": {
            "name": "gallery-multiobject",
            "submodules": {},
            "elements": {},
            "classes": {
                "MultiObject": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 7,
            "description": "<p>MultiObject exposes exactly the same API as each individual object,\nboth functions and events, and the state of all the objects is kept in\nsync.  The objects must maintain all state via\nY.Attribute.<p>\n\n<p>MultiObject is similar to Y.ArrayList, except:</p>\n<ul>\n<li>All objects must be of the same type, since MultiObject is supposed\n\t\tto behave exactly like any single object.</li>\n<li>MultiObject automatically delegates all methods.</li>\n<li>By default, MultiObject returns the result from the first object\n\t\tin the list, not an array of results.</li>\n<li>MultiObject propagates all events.</li>\n</ul>\n\n<p>Internally, MultiObject delegates all methods by name, so it supports\nY.Do.before, Y.Do.after, etc.</p>\n\n<p>To avoid shadowing potential function names, we inherit from\nY.EventTarget and use multi_ as the prefix for our own functions.</p>",
            "itemtype": "main"
        },
        "gallery-neon": {
            "name": "gallery-neon",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.Neon": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-neon/js/Neon.js",
            "line": 7,
            "description": "Overrides Y.Node.show() to make it look like a flickering neon sign.",
            "itemtype": "main"
        },
        "gallery-node-event-set": {
            "name": "gallery-node-event-set",
            "submodules": {},
            "elements": {},
            "classes": {
                "Node~event-set": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-node-event-set/js/node-event-set.js",
            "line": 7,
            "description": "Patches Y.Node to provide \"set\" events for attributes and styles similar\nto the \"change\" events provided by `Y.Attribute`.  Simply subscribe to\n_attr_Set or _style_Set, e.g., valueSet, z-indexSet, or classSet.\n\nIMPORTANT: \"set\" events will ONLY fire if changes are made through\n`Y.Node`, NOT when directly operating on the DOM element.  Also NOT when a\ndifferent sandbox operates on a separate `Y.Node` instance for the same\nelement.\n\nIMPORTANT: \"set\" events must be subscribed directly on the `Y.Node`, not\nvia `Y.on(...)`.\n\nNote: The valuechange event provided by YUI captures all changes to the\nelement's value attribute, but only when the element has focus.\n\nTo minimize the performance impact, this module initially overrides only\nY.Node.on().  Patches are then applied to the appropriate functions on\nindividual instances when a \"set\" event is requested.\n\n<dl>\n<dt>set, setAttrs, setAttribute, setStyle, setStyles</dt>\n<dd>Fires _attr_Set or _style_Set event with prevVal, newVal.</dd>\n<dt>setData,clearData</dt>\n<dd>Fires dataSet event with dataKey, prevVal, newVal.</dd>\n<dt>addClass, removeClass, replaceClass</dt>\n<dd>Fires classNameSet event with prevVal, newVal -- consistent with set('className', ...).  Also includes addedClass or removedClass, as appropriate.</dd>\n<dt>setX, setY, setXY</dt>\n<dd>Fires xySet event with prevVal and newVal defining x, y, or both.</dd>",
            "itemtype": "main"
        },
        "gallery-node-optimizations": {
            "name": "gallery-node-optimizations",
            "submodules": {},
            "elements": {},
            "classes": {
                "Node~optimizations": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 7,
            "description": "Optimizations for searching DOM tree.",
            "itemtype": "main"
        },
        "gallery-node-utils": {
            "name": "gallery-node-utils",
            "submodules": {},
            "elements": {},
            "classes": {
                "Node~utils": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 7,
            "description": "<p>Augments Y.Node with useful functions.</p>",
            "itemtype": "main"
        },
        "gallery-nodelist-extras2": {
            "name": "gallery-nodelist-extras2",
            "submodules": {},
            "elements": {},
            "classes": {
                "NodeList~extras2": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 7,
            "description": "<p>Augments Y.NodeList with the same higher-order functions that\narray-extras adds to Y.Array.</p>",
            "itemtype": "main"
        },
        "gallery-object-extras": {
            "name": "gallery-object-extras",
            "submodules": {},
            "elements": {},
            "classes": {
                "Array~object-extras": 1,
                "Object~extras": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 7,
            "description": "<p>Augments Y.Object with the same higher-order functions that\narray-extras adds to Y.Array.  Note that, unlike Y.Array, iteration\norder for objects is arbitrary, so be careful when applying\nnon-commutative operations!</p>",
            "itemtype": "main"
        },
        "gallery-paginator": {
            "name": "gallery-paginator",
            "submodules": {},
            "elements": {},
            "classes": {
                "Paginator.ui.CurrentPageInput": 1,
                "Paginator.ui.CurrentPageReport": 1,
                "Paginator.ui.FirstPageLink": 1,
                "Paginator.ui.ItemRangeDropdown": 1,
                "Paginator.ui.LastPageLink": 1,
                "Paginator.ui.NextPageLink": 1,
                "Paginator.ui.PageLinks": 1,
                "Paginator": 1,
                "Paginator.ui.PreviousPageLink": 1,
                "Paginator.ui.RowsPerPageDropdown": 1,
                "Paginator.ui.ValidationPageLinks": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/gallery-paginator/js/ValidationPageLinks.js",
            "line": 5
        },
        "gallery-popup": {
            "name": "gallery-popup",
            "submodules": {},
            "elements": {},
            "classes": {
                "InputPopup": 1,
                "Popup": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-popup/js/popup.js",
            "line": 10,
            "description": "Widgets for showing a temporary, \"popup\" overlay.",
            "itemtype": "main"
        },
        "gallery-querybuilder": {
            "name": "gallery-querybuilder",
            "submodules": {
                "gallery-querybuilder-daterange": 1,
                "gallery-querybuilder-multiselect-input": 1
            },
            "elements": {},
            "classes": {
                "QueryBuilder": 1,
                "QueryBuilder.Select": 1,
                "QueryBuilder.String": 1,
                "QueryBuilder.DateRange": 1,
                "QueryBuilder.MultiselectInput": 1
            },
            "fors": {},
            "namespaces": {
                "QueryBuilder": 1
            },
            "tag": "module",
            "file": "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js",
            "line": 6,
            "description": "Widget which allows user to build a list of query criteria, e.g., for\nsearching.  All the conditions are either AND'ed or OR'ed.  For a more\ngeneral query builder, see gallery-exprbuilder.",
            "itemtype": "main"
        },
        "gallery-querybuilder-daterange": {
            "name": "gallery-querybuilder-daterange",
            "submodules": {},
            "elements": {},
            "classes": {
                "QueryBuilder.DateRange": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "QueryBuilder": 1
            },
            "module": "gallery-querybuilder",
            "namespace": "",
            "file": "src/gallery-querybuilder-daterange/js/daterange.js",
            "line": 6,
            "description": "Plugin for accepting date/time range.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` must be an\narray with two elements: `[ start_date, end_date ]`.\n\n`var_config` accepts `show_time`, `start_config`, `end_config`.  The\nconfigs must define objects: `Calendar`, `InputCalendarSync`,\n`DateTime`, `date_InputPopup`, `time_InputPopup`.\n\n`op_list` must be an array: `[ greater_than, less_than ]`."
        },
        "gallery-querybuilder-multiselect-input": {
            "name": "gallery-querybuilder-multiselect-input",
            "submodules": {},
            "elements": {},
            "classes": {
                "QueryBuilder.MultiselectInput": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {
                "QueryBuilder": 1
            },
            "module": "gallery-querybuilder",
            "namespace": "",
            "file": "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js",
            "line": 6,
            "description": "Plugin for accepting multiple strings from a specified list.  In the\n`var_list` configuration, specify `value_list` as a list of strings.  If\nthere is more than one operator specified for this plugin, then they are\ndisplayed on a menu.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` must be an\narray with two elements: `[ operator_name, value_list ]`, where\n`value_list` is an array of strings.\n\nIf you specify `autocomplete.containerClassName` in the `var_list`\nconfiguration, this CSS class will be added to the container generated\nby the autocomplete plugin."
        },
        "gallery-quickedit": {
            "name": "gallery-quickedit",
            "submodules": {},
            "elements": {},
            "classes": {
                "Plugin.DataTableQuickEdit": 1
            },
            "fors": {},
            "namespaces": {
                "Plugin": 1
            },
            "tag": "main",
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 7,
            "description": "<p>The QuickEdit plugin provides a new mode for DataTable where all\nvalues in the table can be edited simultaneously, controlled by the\ncolumn configuration.  Each editable cell contains an input field.  If\nthe user decides to save the changes, then you can extract the changed\nvalues by calling <code><i>dt</i>.qe.getChanges()</code>.</p>\n\n<p>For a column to be editable in QuickEdit mode, the column\nconfiguration must include <code>quickEdit</code>.  The contents of\nthis object define the column's behavior in QuickEdit mode.</p>\n\n<p>To move up or down within a column while in QuickEdit mode, hold down\nthe Ctrl key and press the up or down arrow.</p>\n\n<p>If a column should not be editable, but needs to be formatted\ndifferently in QuickEdit mode, then you must define qeFormatter in\nthe column configuration. This is simply a normal cell formatter\nfunction that will be used in QuickEdit mode.  The static functions\n<code>readonly*Formatter</code> provide examples.</p>\n\n<p>The following configuration can be provided as part of\nquickEdit:</p>\n\n<dl>\n\n<dt>changed</dt><dd>Optional.  The function to call with the old and new\nvalue.  Should return true if the values are different.</dd>\n\n<dt>formatter</dt><dd>The cell formatter which will render an\nappropriate form field: &lt;input type=\"text\"&gt;, &lt;textarea&gt;,\nor &lt;select&gt;.</dd>\n\n<dt>validation</dt><dd>Validation configuration for every field in\nthe column.</dd>\n\n<dt>copyDown</dt><dd>If true, the top cell in the column will have a\nbutton to copy the value down to the rest of the rows.</dd>\n\n</dl>\n\n<p>The following configuration can be provided as part of\nquickEdit.validation:</p>\n\n<dl>\n\n<dt>css</dt><dd>CSS classes encoding basic validation rules:\n <dl>\n <dt><code>yiv-required</code></dt>\n     <dd>Value must not be empty.</dd>\n\n <dt><code>yiv-length:[x,y]</code></dt>\n     <dd>String must be at least x characters and at most y characters.\n     At least one of x and y must be specified.</dd>\n\n <dt><code>yiv-integer:[x,y]</code></dt>\n     <dd>The integer value must be at least x and at most y.\n     x and y are both optional.</dd>\n\n <dt><code>yiv-decimal:[x,y]</code></dt>\n     <dd>The decimal value must be at least x and at most y.  Exponents are\n     not allowed.  x and y are both optional.</dd>\n </dl>\n</dd>\n\n<dt>fn</dt><dd>A function that will be called with the DataTable as its\nscope and the cell's form element as the argument. Return true if the\nvalue is valid. Otherwise, call this.qe.displayMessage(...) to display\nan error and return false.</dd>\n\n<dt>msg</dt><dd>A map of types to messages that will be displayed\nwhen a basic or regex validation rule fails. The valid types are:\nrequired, min_length, max_length, integer, decimal, and regex.\nThere is no default for type regex, so you must specify a message if\nyou configure a regex validation.</dd>\n\n<dt>regex</dt><dd>Regular expression that the value must satisfy in\norder to be considered valid.</dd>\n\n</dl>\n\n<p>Custom QuickEdit Formatters</p>\n\n<p>To write a custom cell formatter for QuickEdit mode, you must\nstructure the function as follows:</p>\n\n<pre>\nfunction myQuickEditFormatter(o) {\n&nbsp;&nbsp;var markup =\n&nbsp;&nbsp;&nbsp;&nbsp;'&lt;input type=\"text\" class=\"{yiv} quickedit-field quickedit-key:{key}\" value=\"{value}\"/&gt;' +\n&nbsp;&nbsp;&nbsp;&nbsp;'{cd}' + Y.Plugin.DataTableQuickEdit.error_display_markup;\n\n&nbsp;&nbsp;var qe = o.column.quickEdit;\n&nbsp;&nbsp;return Y.Lang.sub(markup, {\n&nbsp;&nbsp;&nbsp;&nbsp;key: o.column.key,\n&nbsp;&nbsp;&nbsp;&nbsp;value: o.value.toString().replace(/\"/g, '&quot;'),\n&nbsp;&nbsp;&nbsp;&nbsp;yiv: qe.validation ? (qe.validation.css || '') : '',\n&nbsp;&nbsp;&nbsp;&nbsp;cd: QuickEdit.copyDownFormatter.call(this, o)\n&nbsp;&nbsp;});\n};\n</pre>\n\n<p>You can use textarea or select instead of input, but you can only\ncreate a single field.</p>\n\n<p><code>extractMyEditableValue</code> does not have to be a separate\nfunction. The work should normally be done inline in the formatter\nfunction, but the name of the sample function makes the point clear.</p>",
            "itemtype": "main"
        },
        "gallery-scrollintoview": {
            "name": "gallery-scrollintoview",
            "submodules": {},
            "elements": {},
            "classes": {
                "Node~scrollIntoView": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-scrollintoview/js/ScrollIntoView.js",
            "line": 9,
            "description": "Only scrolls if the object is not currently visible.\n\nThis requires that all scrollable elements have position:relative.\nOtherwise, this algorithm will skip over them with unpredictable\nresults.",
            "itemtype": "main"
        },
        "gallery-sort-extras": {
            "name": "gallery-sort-extras",
            "submodules": {},
            "elements": {},
            "classes": {
                "Sort": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 7,
            "description": "<p>Utilities for sorting.</p>",
            "itemtype": "main"
        },
        "gallery-table-utils": {
            "name": "gallery-table-utils",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-table-utils/js/utils.js",
            "line": 7,
            "description": "<p>Utilities for tables.</p>",
            "itemtype": "main"
        },
        "gallery-test-extras": {
            "name": "gallery-test-extras",
            "submodules": {},
            "elements": {},
            "classes": {
                "Assert": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/gallery-test-extras/js/Assert.js",
            "line": 7,
            "description": "<p>Additional assertions for unit tests.</p>",
            "itemtype": "main"
        },
        "gallery-treeble": {
            "name": "gallery-treeble",
            "submodules": {},
            "elements": {},
            "classes": {
                "Treeble": 1,
                "DataSource.Treeble": 1,
                "Parsers": 1
            },
            "fors": {},
            "namespaces": {
                "DataSource": 1
            },
            "tag": "main",
            "file": "src/gallery-treeble/js/TreebleParser.js",
            "line": 5,
            "description": "Treeble displays a tree of data in a table.",
            "itemtype": "main"
        }
    },
    "classes": {
        "Accordion": {
            "name": "Accordion",
            "shortname": "Accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-accordion-horiz-vert",
            "namespace": "",
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 16,
            "description": "<p>An accordion can be constructed from existing markup or from strings\ncontaining HTML.  Existing markup can be provided either by setting\n`contentBox` or by specifying CSS selectors.  See the `titles` and\n`sections` attributes.</p>\n\n<p>When constructing from existing markup via `contentBox`, use an\nunordered list (&lt;ul&gt;).  Each item must contain two &lt;div&gt;'s.\nThe first one is used as the section title, and the second one is used\nas the section content.</p>\n\n<p>Animation is optional.  If the anim module is not available,\nanimation is automatically turned off.</p>\n\n<p>When using a horizontal accordion:</p>\n<ul>\n<li>The widget's container must have a height.</li>\n<li>Each title must have both a width and height.</li>\n<li>Each section must have a width.</li>\n</ul>\n\n<p>IE doesn't accept zero height divs, so we use 1px height and zero\nopacity.  IE6 doesn't always render correctly with opacity set, so if\nanimation is turned off, we don't use opacity at all.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Widget configuration",
                    "type": "Object"
                }
            ]
        },
        "Plugin.FixedSizeAccordion": {
            "name": "Plugin.FixedSizeAccordion",
            "shortname": "Plugin.FixedSizeAccordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-accordion-horiz-vert",
            "namespace": "Plugin",
            "file": "src/gallery-accordion-horiz-vert/js/FixedSizePlugin.js",
            "line": 5,
            "description": "<p>Plugin for Y.Accordion that detects that the widget has a fixed size\nin the relevant dimension (width or height) and adjusts the open\nsections to fit.</p>\n\n<p>If/when the widget is given a fixed size, all animations are turned\noff.</p>",
            "is_constructor": 1
        },
        "Array~algorithms": {
            "name": "Array~algorithms",
            "shortname": "Array~algorithms",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-algorithms",
            "namespace": "",
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 7,
            "description": "<p>Useful algorithms not provided by browsers.</p>",
            "mainName": "gallery-algorithms",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "ArrayList~extras": {
            "name": "ArrayList~extras",
            "shortname": "ArrayList~extras",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-algorithms",
            "namespace": "",
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 7,
            "description": "Useful algorithms that are not provided by browsers.  Available if\nY.ArrayList (collection) is loaded."
        },
        "Plugin.NodeFXSequence": {
            "name": "Plugin.NodeFXSequence",
            "shortname": "Plugin.NodeFXSequence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-anim-sequence",
            "namespace": "",
            "file": "src/gallery-anim-sequence/js/anim-seq-plugin.js",
            "line": 5,
            "description": "Binds an AnimSequence instance to a Node instance.  The API and\nnamespace is the same as NodeFX, so you can plug NodeFXSequence into\nany node that just needs to run/pause/stop an animation.\n\nPass `sequence` in the configuration to set the initial animation\nsequence.",
            "extends": "AnimSequence",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "AnimSequence": {
            "name": "AnimSequence",
            "shortname": "AnimSequence",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-anim-sequence",
            "namespace": "",
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 7,
            "description": "Manages a sequence of animations, so you don't have to chain them\nmanually. Each item in the sequence can be a single animation, an array\nof animations to perform in parallel, a function which performs an\nimmediate action, or a delay in milliseconds.\n\nPass `sequence` in the configuration to set the initial animation\nsequence.\n\nThis class exposes the same basic API as Y.Anim, so you can pass\nY.AnimSequence to anything that just needs to run/pause/stop an\nanimation.",
            "mainName": "gallery-anim-sequence",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "DataSource.BulkEdit": {
            "name": "DataSource.BulkEdit",
            "shortname": "DataSource.BulkEdit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-bulkedit",
            "namespace": "DataSource",
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 7,
            "description": "<p>BulkEditDataSource manages a YUI DataSource + diffs (insertions,\nremovals, changes to values).</p>\n\n<p>The YUI DataSource must be immutable, e.g., if it is an XHR\ndatasource, the data must not change.</p>\n\n<p>By using a DataSource, we can support both client-side pagination\n(all data pre-loaded, best-effort save allowed) and server-side\npagination (load data when needed, only all-or-nothing save allowed).\nServer-side pagination is useful when editing a large amount of existing\nrecords or after uploading a large number of new records. (Store the new\nrecords in a scratch space, so everything does not have to be sent back\nto the client after parsing.)  In the case of bulk upload, server-side\nvalidation will catch errors in unviewed records.</p>\n\n<p>The responseSchema passed to the YUI DataSource must include a\ncomparator for each field that should not be treated like a string.\nThis comparator can either be 'string' (the default), 'integer',\n'decimal', 'boolean', or a function which takes two arguments.</p>",
            "extends": "DataSource.Local",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "BulkEditor": {
            "name": "BulkEditor",
            "shortname": "BulkEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-bulkedit",
            "namespace": "",
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 8,
            "description": "<p>BulkEditor provides the basic structure for editing all the records\nin a BulkEditDataSource.  The fields for editing a record are rendered\ninto a \"row\".  This could be a div, a tbody, or something else.</p>\n\n<p>All event handlers must be placed on the container, not individual\nDOM elements.</p>\n\n<p>Errors must be returned from the server in the order in which records\nare displayed.  Because of this, when data is sent to the server:</p>\n<ul>\n<li>If the server knows the ordering, you can send the diffs.  (Diffs are an unordered map, keyed on the record id.)</li>\n<li>If the server doesn't know the ordering, you must send all the data.</li>\n</ul>",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "HTMLTableBulkEditor": {
            "name": "HTMLTableBulkEditor",
            "shortname": "HTMLTableBulkEditor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-bulkedit",
            "namespace": "",
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 5,
            "description": "<p>HTMLTableBulkEditor builds an HTML table with one tbody for each\nrecord.</p>",
            "extends": "BulkEditor",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Plugin.BusyOverlay": {
            "name": "Plugin.BusyOverlay",
            "shortname": "Plugin.BusyOverlay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-busyoverlay",
            "namespace": "Plugin",
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 7,
            "description": "A plugin for Y.Node or Y.Widget that creates an overlaying div.\nEspecially useful for a widget that is waiting for an AJAX response.",
            "mainName": "gallery-busyoverlay",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Canvas.Context2d": {
            "name": "Canvas.Context2d",
            "shortname": "Canvas.Context2d",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-canvas",
            "namespace": "Canvas",
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 15,
            "description": "<p>Wrapper for a canvas 2d context.  It exposes the exact same api as\nthe native 2d context, plus some extras, documented below.  Just like\nY.Node, use get() and set() to modify attributes.</p>",
            "mainName": "gallery-canvas",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "node",
                    "description": "the canvas element",
                    "type": "Y.Node"
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "pixelAlign=true",
                            "description": "Pass true to get thinner, cleaner strokes. Pass false to get the default rendering.",
                            "type": "Boolean"
                        }
                    ]
                }
            ]
        },
        "AtLeastOneCheckboxGroup": {
            "name": "AtLeastOneCheckboxGroup",
            "shortname": "AtLeastOneCheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-checkboxgroups",
            "namespace": "",
            "file": "src/gallery-checkboxgroups/js/AtLeastOneCheckboxGroup.js",
            "line": 5,
            "description": "At least one checkbox must be selected.  If the last one is turned off,\nthe active, adjacent one is turned on.  The exact algorithm is explained\nin \"Tog on Interface\".  The checkboxes are assumed to be ordered in the\norder they were added.",
            "extends": "CheckboxGroup",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to manage",
                    "type": "String|Node|NodeList"
                }
            ]
        },
        "AtMostOneCheckboxGroup": {
            "name": "AtMostOneCheckboxGroup",
            "shortname": "AtMostOneCheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-checkboxgroups",
            "namespace": "",
            "file": "src/gallery-checkboxgroups/js/AtMostOneCheckboxGroup.js",
            "line": 5,
            "description": "At most one checkbox can be selected.  If one is turned on, the active\none is turned off.",
            "extends": "CheckboxGroup",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to manage",
                    "type": "String|Node|NodeList"
                }
            ]
        },
        "CheckboxGroup": {
            "name": "CheckboxGroup",
            "shortname": "CheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-checkboxgroups",
            "namespace": "",
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 10,
            "description": "<p>Base class for enforcing constraints on groups of checkboxes.</p>\n\n<p>Derived classes must override <code>enforceConstraints()</code>.</p>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to manage",
                    "type": "String|Node|NodeList"
                }
            ]
        },
        "EnableIfAnyCheckboxGroup": {
            "name": "EnableIfAnyCheckboxGroup",
            "shortname": "EnableIfAnyCheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-checkboxgroups",
            "namespace": "",
            "file": "src/gallery-checkboxgroups/js/EnableIfAnyCheckboxGroup.js",
            "line": 5,
            "description": "Enables the given list of nodes if any checkboxes are checked.",
            "extends": "CheckboxGroup",
            "is_constructor": 1,
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to manage",
                    "type": "String|Node|NodeList"
                },
                {
                    "name": "nodes",
                    "description": "The nodes to enable/disable",
                    "type": "String|NodeList"
                }
            ]
        },
        "SelectAllCheckboxGroup": {
            "name": "SelectAllCheckboxGroup",
            "shortname": "SelectAllCheckboxGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-checkboxgroups",
            "namespace": "",
            "file": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "line": 5,
            "description": "All checkboxes can be selected and a select-all checkbox is available\nto check all. This check-all box is automatically changed if any other\ncheckbox changes state.",
            "extends": "CheckboxGroup",
            "is_constructor": 1,
            "params": [
                {
                    "name": "select_all_cb",
                    "description": "The checkbox that triggers \"select all\"",
                    "type": "String|Object"
                },
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to manage",
                    "type": "String|Node|NodeList"
                }
            ]
        },
        "Chipper": {
            "name": "Chipper",
            "shortname": "Chipper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-chipper",
            "namespace": "",
            "file": "src/gallery-chipper/js/Chipper.js",
            "line": 7,
            "description": "<p>Destroys objects asynchronously.</p>",
            "mainName": "gallery-chipper",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "CollapseToggle": {
            "name": "CollapseToggle",
            "shortname": "CollapseToggle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-collapse-toggle",
            "namespace": "",
            "file": "src/gallery-collapse-toggle/js/CollapseToggle.js",
            "line": 10,
            "description": "Overrides Y.Node.show() to make it look like a flickering neon sign.",
            "mainName": "gallery-collapse-toggle",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "ComplexMath": {
            "name": "ComplexMath",
            "shortname": "ComplexMath",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-complexnumber",
            "namespace": "",
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 8,
            "description": "This collection of functions provides the complex number equivalent of\nthe built-in JavaScript Math namespace, along with the basic arithmetic\noperations (since JavaScript does not support operator overloading)."
        },
        "ComplexNumber": {
            "name": "ComplexNumber",
            "shortname": "ComplexNumber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-complexnumber",
            "namespace": "",
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 7,
            "description": "Class for representing a complex number.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "real=0",
                    "description": "the real component",
                    "type": "Number"
                },
                {
                    "name": "imag=0",
                    "description": "the imaginary component",
                    "type": "Number"
                }
            ]
        },
        "Plugin.ConsoleTest": {
            "name": "Plugin.ConsoleTest",
            "shortname": "Plugin.ConsoleTest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-console-test",
            "namespace": "Plugin",
            "file": "src/gallery-console-test/js/console-test.js",
            "line": 7,
            "description": "<p>Adds a menu of registered unit test suites to the YUI 3 Console.</p>",
            "mainName": "gallery-console-test",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base"
        },
        "DataSource.AsyncFunction": {
            "name": "DataSource.AsyncFunction",
            "shortname": "DataSource.AsyncFunction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datasource-async-function",
            "namespace": "DataSource",
            "file": "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js",
            "line": 7,
            "description": "<p>Data source that calls an asynchronous function.</p>",
            "mainName": "gallery-datasource-async-function",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "DataSource.Local",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Plugin.DataTableDataSourceBusy": {
            "name": "Plugin.DataTableDataSourceBusy",
            "shortname": "Plugin.DataTableDataSourceBusy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datatable-datasource-busy",
            "namespace": "Plugin",
            "file": "src/gallery-datatable-datasource-busy/js/datasource-busy.js",
            "line": 7,
            "description": "<p>Extension to datatable-datasource to show that the datasource is busy\nloading.</p>",
            "mainName": "gallery-datatable-datasource-busy",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.DataTableDataSource",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Plugin.DataTablePaginator": {
            "name": "Plugin.DataTablePaginator",
            "shortname": "Plugin.DataTablePaginator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin",
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 7,
            "description": "Plugin for DataTable to connect a paginator.",
            "mainName": "gallery-datatable-paginator",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Plugin.DataTableRowExpansion": {
            "name": "Plugin.DataTableRowExpansion",
            "shortname": "Plugin.DataTableRowExpansion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin",
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 7,
            "description": "<p>Plugin for DataTable to show additional information for each row via\na twistdown.  The result of the template is displayed spanning all the\ncolumns beyond the twistdown column.</p>\n\n<p>This class patches `getCell` and `getRow` to ignore the additional\nrows created by this plugin.</p>",
            "mainName": "gallery-datatable-row-expansion",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Plugin.DataTableState": {
            "name": "Plugin.DataTableState",
            "shortname": "Plugin.DataTableState",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datatable-state",
            "namespace": "Plugin",
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 7,
            "description": "<p>Plugin for DataTable to preserve state, either on a single page or\nacross pages.</p>",
            "mainName": "gallery-datatable-state",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "DateTime": {
            "name": "DateTime",
            "shortname": "DateTime",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datetime",
            "namespace": "",
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 11,
            "description": "Manages a date input field and an optional time field.  Calendars and\ntime selection widgets can be attached to these fields, but will not be\nmanaged by this class.\n\nDate/time values can be specified as either a Date object or an object\nspecifying year,month,day (all 1-based) or date_str and optionally\nhour,minute or time_str.  Individual values take precedence over string\nvalues.  Time resolution is in minutes.",
            "mainName": "gallery-datetime",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "DateTimeRange": {
            "name": "DateTimeRange",
            "shortname": "DateTimeRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datetime-range",
            "namespace": "",
            "file": "src/gallery-datetime-range/js/DateTimeRange.js",
            "line": 7,
            "description": "Manages a pair of Y.DateTime instances.  The ending date is constrained\nby the min, max, and blackout ranges configured on the startDateTime\ninstance.  The range is not allowed to span a blackout, so if the start\ndate is between two blackout ranges, then the end date must be after the\nstart date and before the start of the next blackout range.",
            "mainName": "gallery-datetime-range",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "DateTimeUtils": {
            "name": "DateTimeUtils",
            "shortname": "DateTimeUtils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-datetime-utils",
            "namespace": "",
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 7,
            "description": "Utility functions work working with dates and times.",
            "mainName": "gallery-datetime-utils",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Node~dimensions": {
            "name": "Node~dimensions",
            "shortname": "Node~dimensions",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-dimensions",
            "namespace": "",
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 7,
            "description": "Functions for measuring the size of a node.",
            "mainName": "gallery-dimensions",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "ExpirationCache": {
            "name": "ExpirationCache",
            "shortname": "ExpirationCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-expiration-cache",
            "namespace": "",
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 5,
            "description": "<p>Cache which drops items based on a user-defined expiration criterion,\ne.g., age.  By default, expired items are only removed when they are\nrequested.  If you want to \"stop the world\" and clean out the cache,\ncall clean().</p>",
            "mainName": "gallery-expiration-cache",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "store",
                            "description": "Data store which implements get,put,remove,clear,keys.  If not specified, a new instance of `Y.InstanceManager` is created.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "meta",
                            "description": "Attaches meta data to an item when it is added to the cache.  It receives the value as an argument.  If not specified, the default is to timestamp the item.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "expire",
                            "description": "Returns true if the item has expired.  It receives the meta data and the value as arguments.  If a number is specified, it is assumed to be a duration in milliseconds.",
                            "type": "Function"
                        },
                        {
                            "name": "stats",
                            "description": "Pass true if you want to collect basic statistics.  Pass a function if you want to control what information is stored for each key.  The function receives the key, the value, and the stat object.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "ExpressionBuilder": {
            "name": "ExpressionBuilder",
            "shortname": "ExpressionBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-exprbuilder",
            "namespace": "",
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 7,
            "description": "Widget which helps user to build a query expression.",
            "mainName": "gallery-exprbuilder",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Widget configuration",
                    "type": "Object"
                }
            ]
        },
        "FormManager": {
            "name": "FormManager",
            "shortname": "FormManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-formmgr",
            "namespace": "",
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 33,
            "description": "<p><strong>Required Markup Structure</strong></p>\n\n<p>Each element (or tighly coupled set of elements) must be contained by\nan element that has the CSS class <code>formmgr-row</code>.  Within each\nrow, validation messages are displayed inside the container with CSS\nclass <code>formmgr-message-text</code>.\n\n<p>When a message is displayed inside a row, the CSS class\n<code>formmgr-has{type}</code> is placed on the row container and the\ncontaining fieldset (if any), where <code>{type}</code> is the message\ntype passed to <code>displayMessage()</code>.</p>\n\n<p><strong>Initializing the Form</strong></p>\n\n<p>Default values can be either encoded in the markup or passed to the\nFormManager constructor via <code>config.default_value_map</code>.  (The\nformer method is obviously better for progressive enhancement.)  The\nvalues passed to the constructor override the values encoded in the\nmarkup.</p>\n\n<p><code>prepareForm()</code> must be called before the form is\ndisplayed.  To initialize focus to the first element in a form, call\n<code>initFocus()</code>.  If the form is in an overlay, you can delay\nthese calls until just before showing the overlay.</p>\n\n<p>The default values passed to the constructor are inserted by\n<code>populateForm()</code>.  (This is automatically called by\n<code>prepareForm()</code>.)</p>\n\n<p>Hidden fields are ignored.  If you want `FormManager` to process a\nvalue that is invisible to the user, use a normal input with\n`display:none;`.</p>\n\n<p><strong>Displaying Messages</strong></p>\n\n<p>To display a message for a single form row, call\n<code>displayMessage()</code>.  To display a message for the form in\ngeneral, call <code>displayFormMessage()</code>.  These functions can be\nused for initializing the error display when the page loads, for\ndisplaying the results of pre-validation, and for displaying the results\nof submitting a form via XHR.</p>\n\n<p><strong>Specifying Validations</strong></p>\n\n<p>The following classes can be applied to a form element for\npre-validation:</p>\n\n<dl>\n<dt><code>yiv-required</code></dt>\n<dd>Value must not be empty.</dd>\n\n<dt><code>yiv-length:[x,y]</code></dt>\n<dd>String must be at least x characters and at most y characters.\nAt least one of x and y must be specified.</dd>\n\n<dt><code>yiv-integer:[x,y]</code></dt>\n<dd>The integer value must be at least x and at most y.\nx and y are both optional.</dd>\n\n<dt><code>yiv-decimal:[x,y]</code></dt>\n<dd>The decimal value must be at least x and at most y.  Exponents are\nnot allowed.  x and y are both optional.</dd>\n</dl>\n\n<p>If we ever need to allow exponents, we can use yiv-float.</p>\n\n<p>The following functions allow additional pre-validation to be\nattached to individual form elements:</p>\n\n<dl>\n<dt><code>setRegex()</code></dt>\n<dd>Sets the regular expression that must match in order for the value\nto be acceptable.</dd>\n\n<dt><code>setFunction()</code></dt>\n<dd>Sets the function that must return true in order for the value to\nbe acceptable.  The function is called in the scope of the Form\nobject with the arguments:  the form and the element.</dd>\n</dl>\n\n<p><code>setErrorMessages()</code> specifies the error message to be\ndisplayed when a pre-validation check fails.</p>\n\n<p>Functions are expected to call <code>displayMessage()</code>\ndirectly.</p>\n\n<p>More complex pre-validations can be added by overriding\n<code>postValidateForm()</code>, described below.</p>\n\n<p>Validation normally strips leading and trailing whitespace from every\nvalue.  If you have a special case where this should not be done, add\nthe CSS class <code>yiv-no-trim</code> to the input field.</p>\n\n<p>Derived classes may also override the following functions:</p>\n\n<dl>\n<dt><code>prePrepareForm</code>(arguments passed to prepareForm)</dt>\n<dd>Called before filling in default values for the form elements.\nReturn false to cancel dialog.</dd>\n\n<dt><code>postPrepareForm</code>(arguments passed to prepareForm)</dt>\n<dd>Called after filling in default values for the form elements.</dd>\n\n<dt><code>postValidateForm</code>(form)</dt>\n<dd>Called after performing the basic pre-validations.  Returns\ntrue if the form contents are acceptable.  Reports error if there\nis a problem.</dd>\n</dl>",
            "is_constructor": 1,
            "params": [
                {
                    "name": "form_name",
                    "description": "The name attribute of the HTML form.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Configuration.\n\t\t<code>status_node</code> is an optional element in which to display\n\t\toverall status.  <code>default_value_map</code> is an optional\n\t\tmapping of form element names to default values.  Default values\n\t\tencoded in the markup will be merged into this map, but values\n\t\tpassed to the constructor will take precedence.",
                    "type": "Object"
                }
            ],
            "submodule": "gallery-formmgr-css-validation"
        },
        "Plugin.OverlayForm": {
            "name": "Plugin.OverlayForm",
            "shortname": "Plugin.OverlayForm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-formmgr-overlay-plugin",
            "namespace": "Plugin",
            "file": "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js",
            "line": 7,
            "description": "A simple plugin for Y.Overlay which attaches a Y.FormManager to the\n&lt;form&gt; inside the overlay.  Before the overlay is shown,\nprepareForm() is called to insert the default values.  (If this returns\nfalse, the overlay is not shown.)  After the overlay is shown, focus is\nset to the first field.",
            "mainName": "gallery-formmgr-overlay-plugin",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base"
        },
        "Array~funcprog-extras": {
            "name": "Array~funcprog-extras",
            "shortname": "Array~funcprog-extras",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-funcprog",
            "namespace": "",
            "file": "src/gallery-funcprog/js/array-extras.js",
            "line": 5
        },
        "YUI~funcprog": {
            "name": "YUI~funcprog",
            "shortname": "YUI~funcprog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-funcprog",
            "namespace": "",
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 7,
            "description": "<p>Augments global Y object with the same higher-order functions that\narray-extras adds to Y.Array.  Note that, unlike arrays and NodeLists,\niteration order for an object is arbitrary, so be careful when applying\nnon-commutative operations!</p>",
            "mainName": "gallery-funcprog",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Plugin.InputCalendarSync": {
            "name": "Plugin.InputCalendarSync",
            "shortname": "Plugin.InputCalendarSync",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-input-calendar-sync",
            "namespace": "Plugin",
            "file": "src/gallery-input-calendar-sync/js/sync.js",
            "line": 7,
            "description": "Plugin for an input field which syncs the value with a calendar.",
            "mainName": "gallery-input-calendar-sync",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "InstanceManager": {
            "name": "InstanceManager",
            "shortname": "InstanceManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-instancemanager",
            "namespace": "",
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 7,
            "description": "<p>Stores instances of JavaScript components.  Allows a constructor or\nfactory method to be passed in place of an instance.  This enables lazy\nconstruction on demand.</p>\n\n<p>One use is to create a global repository of JavaScript components\nattached to DOM id's, e.g., YUI Buttons built on top of HTML\nbuttons.</p>",
            "mainName": "gallery-instancemanager",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1
        },
        "IO": {
            "name": "IO",
            "shortname": "IO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-io-adobe-air",
            "namespace": ""
        },
        "io~multiresponse": {
            "name": "io~multiresponse",
            "shortname": "io~multiresponse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-io-multiresponse",
            "namespace": "",
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 8,
            "description": "<p>Extends the IO base class to enable multiple responses using an\niframe as the transport medium.  Each response fires the response event.\nThe only events that are fired are the start and end events.</p>\n\n<p>All the YUI 3 IO features are supported, so the request can be sent\nas either GET (for simple query args) or POST (for anything, even file\nuploads).  The module uses an iframe to send the request and includes a\ncallback parameter.  (So you cannot include a parameter named\n<q>callback</q>.)  For each response, the server must send a script\nblock invoking the callback, similar to JSONP.  Unlike JSONP, however,\nrequests can only be made to your own server because the callback will\nreference <code>window.parent</code>.  In order to trigger script\nparsing in all browsers, the first chunk of data that the server writes\nto the connection must be at least 1024 bytes, and it must be part of\nthe body, so you will need to explicitly send an empty head.</p>\n\n<p>Due to the way that the request data is parsed, it is not safe to\nsend JSON-encoded data using the standard YUI 3 IO methods.  However, if\nyou define <code>json</code> in the configuration passed to\n<code>Y.io()</code>, then the data will be passed to the server under\nthe <code>json</code> parameter.  (If you pass an object, it will be\nserialized with <code>Y.JSON.stringify()</code>.)\n\n<p>To keep the iframe after it has finished loading, set\n<code>debug:true</code> in the configuration passed to\n<code>Y.io()</code>.</p>"
        },
        "ArrayIterator": {
            "name": "ArrayIterator",
            "shortname": "ArrayIterator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-iterable-extras",
            "namespace": "",
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 5,
            "description": "Iterator for an array.  Useful for any class that manages an array and\nwants to mix in `Y.Iterable`.  Safe, but not stable, when the array is\nmodified during iteration.",
            "itemtype": "method",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "Array"
                }
            ]
        },
        "Iterable": {
            "name": "Iterable",
            "shortname": "Iterable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-iterable-extras",
            "namespace": "",
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 7,
            "description": "<p>Functional programming support for iterable classes.  The class must\nimplement the `iterator` and `newInstance` methods.</p>\n\n<p>For most methods, the iterator only needs to implement `next` and\n`atEnd`.  Backwards iterators like `reduceRight` require `prev` and\n`atBeginning`.</p>\n\n<p>Iterable classes must mix these functions:  `Y.mix(SomeClass,\nY.Iterable, false, null, 4);`  Passing false as the third argument\nallows your class to provide optimized implementations of individual\nfunctions.</p>",
            "mainName": "gallery-iterable-extras",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "PageLayout": {
            "name": "PageLayout",
            "shortname": "PageLayout",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-layout",
            "namespace": "",
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 9,
            "description": "Manages header (layout-hd), body (layout-bd), footer (layout-ft) stacked\nvertically to either fit inside the viewport (fit-to-viewport) or adjust\nto the size of the body content (fit-to-content).\n\nThe body content is sub-divided into modules, arranged either in rows or\ncolumns.  The layout is automatically detected based on the marker\nclasses attached to the two layers of divs inside layout-bd:  either\nlayout-module-row > layout-module or layout-module-col > layout-module\n\nEach module has an optional header (layout-m-hd), a body (layout-m-bd),\nand an optional footer (layout-m-ft).  You can have multiple\nlayout-m-bd's, but only one can be visible at a time.  If you change the\nDOM in any way that affects the height of any module header, body, or\nfooter, or if you switch bodies, you must call `elementResized()` to\nreflow the layout.  (Technically, you do not have to call\n`elementResized()` if you modify a module body in fit-to-viewport mode,\nbut if you later decide to switch to fit-to-content, your optimization\nwill cause trouble.)\n\nIf you want a row, column, or module to have a fixed size, add the class\nlayout-not-managed to the layout-module-row, layout-module-column, or\nlayout-module.  Then use CSS to set the width of layout-module (for a\nrow) or layout-module-col (for a col), or the height of layout-m-bd.\n\nIf the body content is a single module, it expands as the content\nexpands (fit-to-content) until it would push the footer below the fold.\nThen it switches to fit-to-viewport so the scrollbar appears on the\nmodule instead of the entire viewport.  (If you do not want this\nbehavior in a particular case, add the class FORCE_FIT to layout-bd.)\n\nNote that a non-zero margin-top on the top element or a non-zero\nmargin-bottom on the bottom element inside any container will break the\nlayout because browsers lie about the total height of the container in\nthis case.  Use padding instead of margin on elements inside headers and\nfooters.\n\nIf you wish to display a loading message that automatically disappears\nafter the first time the layout is calculated, add the class\n`layout-loading` to the div containing the message.  (To be visible,\nthis div must not be inside the div with class `layout-bd`, since that\nhas `visibility:hidden`.)",
            "extends": "Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Plugin.PageLayoutAnyWidgetModule": {
            "name": "Plugin.PageLayoutAnyWidgetModule",
            "shortname": "Plugin.PageLayoutAnyWidgetModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-layout-anywidget",
            "namespace": "Plugin",
            "file": "src/gallery-layout-anywidget/js/layout-anywidget.js",
            "line": 7,
            "description": "<p>Plugin for any Y.Widget to make it fit inside a PageLayout module.\nAfter you plug it in, it automatically detects the PageLayout module, so\nyou don't have to do anything.</p>",
            "mainName": "gallery-layout-anywidget",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Plugin.PageLayoutDataTableModule": {
            "name": "Plugin.PageLayoutDataTableModule",
            "shortname": "Plugin.PageLayoutDataTableModule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-layout-datatable",
            "namespace": "Plugin",
            "file": "src/gallery-layout-datatable/js/layout-datatable.js",
            "line": 7,
            "description": "<p>Plugin for scrolling DataTable to make it fit inside a PageLayout\nmodule.  After you plug it in, it automatically detects the PageLayout\nmodule, so you don't have to do anything.</p>",
            "mainName": "gallery-layout-datatable",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "LinkedList": {
            "name": "LinkedList",
            "shortname": "LinkedList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-linkedlist",
            "namespace": "",
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 5,
            "description": "<p>Doubly linked list for storing items.  Supports iteration via\nLinkedListIterator (returned by this.iterator()) or Y.each().  Also\nsupports all the other operations defined in gallery-funcprog.</p>\n\n<p>Direct indexing into the list is not supported, as a reminder that it\nis an expensive operation.  Instead, use find() with a function that\nchecks the index.</p>",
            "mainName": "gallery-linkedlist",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "list",
                    "description": "any scalar or iterable list",
                    "type": "Mixed",
                    "optional": true
                }
            ]
        },
        "LinkedListItem": {
            "name": "LinkedListItem",
            "shortname": "LinkedListItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-linkedlist",
            "namespace": "",
            "file": "src/gallery-linkedlist/js/LinkedListItem.js",
            "line": 7,
            "description": "Item stored by LinkedList.",
            "itemtype": "method",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "value to store",
                    "type": "Mixed"
                }
            ]
        },
        "LinkedListIterator": {
            "name": "LinkedListIterator",
            "shortname": "LinkedListIterator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-linkedlist",
            "namespace": "",
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 5,
            "description": "Iterator for LinkedList.  Stable except when the next item is removed by\ncalling list.remove() instead of iter.removeNext().  When items are\ninserted into an empty list, the pointer remains at the end, not the\nbeginning.",
            "itemtype": "method",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "LinkedList"
                }
            ]
        },
        "LogFilter": {
            "name": "LogFilter",
            "shortname": "LogFilter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-log-filter",
            "namespace": "",
            "file": "src/gallery-log-filter/js/log-filter.js",
            "line": 7,
            "description": "<p>Appends filters to the log output.</p>",
            "mainName": "gallery-log-filter",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Math": {
            "name": "Math",
            "shortname": "Math",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-math",
            "namespace": "",
            "file": "src/gallery-math/js/Math.js",
            "line": 7,
            "description": "<p>Augments built-in JavaScript Math namespace with additional\nmathematical functions.</p>",
            "mainName": "gallery-math",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "MathFunction.Arccosine": {
            "name": "MathFunction.Arccosine",
            "shortname": "MathFunction.Arccosine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Arccosine.js",
            "line": 5,
            "description": "<p>Inverse trigonometric cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Arcsine": {
            "name": "MathFunction.Arcsine",
            "shortname": "MathFunction.Arcsine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Arcsine.js",
            "line": 5,
            "description": "<p>Inverse trigonometric sine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Arctangent": {
            "name": "MathFunction.Arctangent",
            "shortname": "MathFunction.Arctangent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Arctangent.js",
            "line": 5,
            "description": "<p>Inverse trigonometric cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Arctangent2": {
            "name": "MathFunction.Arctangent2",
            "shortname": "MathFunction.Arctangent2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Arctangent2.js",
            "line": 5,
            "description": "<p>Inverse trigonometric cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "MathFunction"
                },
                {
                    "name": "x",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Conjugate": {
            "name": "MathFunction.Conjugate",
            "shortname": "MathFunction.Conjugate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Conjugate.js",
            "line": 5,
            "description": "<p>Conjugate of a complex number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Cosine": {
            "name": "MathFunction.Cosine",
            "shortname": "MathFunction.Cosine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Cosine.js",
            "line": 5,
            "description": "<p>Trigonometric cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.E": {
            "name": "MathFunction.E",
            "shortname": "MathFunction.E",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/E.js",
            "line": 5,
            "description": "<p>e</p>",
            "extends": "MathFunction",
            "is_constructor": 1
        },
        "MathFunction.Exponential": {
            "name": "MathFunction.Exponential",
            "shortname": "MathFunction.Exponential",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Exponential.js",
            "line": 5,
            "description": "<p>Exponential.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "b",
                    "description": "base",
                    "type": "MathFunction"
                },
                {
                    "name": "e",
                    "description": "exponent",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.FunctionWithArgs": {
            "name": "MathFunction.FunctionWithArgs",
            "shortname": "MathFunction.FunctionWithArgs",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 5,
            "description": "<p>Function that takes one or more arguments.</p>",
            "extends": "MathFunction",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "the name of the function",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "the arguments",
                    "type": "MathFunction|Array"
                }
            ]
        },
        "MathFunction.HyperbolicCosine": {
            "name": "MathFunction.HyperbolicCosine",
            "shortname": "MathFunction.HyperbolicCosine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/HyperbolicCosine.js",
            "line": 5,
            "description": "<p>Hyperbolic cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.HyperbolicSine": {
            "name": "MathFunction.HyperbolicSine",
            "shortname": "MathFunction.HyperbolicSine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/HyperbolicSine.js",
            "line": 5,
            "description": "<p>Hyperbolic sine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.HyperbolicTangent": {
            "name": "MathFunction.HyperbolicTangent",
            "shortname": "MathFunction.HyperbolicTangent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/HyperbolicTangent.js",
            "line": 5,
            "description": "<p>Hyperbolic tangent.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.I": {
            "name": "MathFunction.I",
            "shortname": "MathFunction.I",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/I.js",
            "line": 5,
            "description": "<p>i (square root of -1)</p>",
            "extends": "MathFunction",
            "is_constructor": 1
        },
        "MathFunction.ImaginaryPart": {
            "name": "MathFunction.ImaginaryPart",
            "shortname": "MathFunction.ImaginaryPart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/ImaginaryPart.js",
            "line": 5,
            "description": "<p>Imaginary part of a complex number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.InverseHyperbolicCosine": {
            "name": "MathFunction.InverseHyperbolicCosine",
            "shortname": "MathFunction.InverseHyperbolicCosine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicCosine.js",
            "line": 5,
            "description": "<p>Inverse hyperbolic cosine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.InverseHyperbolicSine": {
            "name": "MathFunction.InverseHyperbolicSine",
            "shortname": "MathFunction.InverseHyperbolicSine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicSine.js",
            "line": 5,
            "description": "<p>Inverse hyperbolic sine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.InverseHyperbolicTangent": {
            "name": "MathFunction.InverseHyperbolicTangent",
            "shortname": "MathFunction.InverseHyperbolicTangent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicTangent.js",
            "line": 5,
            "description": "<p>Inverse hyperbolic tangent.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Logarithm": {
            "name": "MathFunction.Logarithm",
            "shortname": "MathFunction.Logarithm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Logarithm.js",
            "line": 5,
            "description": "<p>Logarithm.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "b",
                    "description": "base",
                    "type": "MathFunction"
                },
                {
                    "name": "v",
                    "description": "value",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Magnitude": {
            "name": "MathFunction.Magnitude",
            "shortname": "MathFunction.Magnitude",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Magnitude.js",
            "line": 5,
            "description": "<p>Magnitude (absolute value) of a number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathCanvas": {
            "name": "MathCanvas",
            "shortname": "MathCanvas",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "",
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 5,
            "description": "Displays an arithmetical expression the way you would write it on paper.",
            "mainName": "gallery-mathcanvas",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Widget configuration",
                    "type": "Object"
                }
            ]
        },
        "MathCanvas.Parser": {
            "name": "MathCanvas.Parser",
            "shortname": "MathCanvas.Parser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas",
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 681,
            "description": "Parser used to convert a string expression into Y.MathFunction"
        },
        "MathFunction": {
            "name": "MathFunction",
            "shortname": "MathFunction",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "",
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 5,
            "description": "<p>Base class for all functions rendered by MathCanvas.</p>\n\n<p>Derived classes must implement toString() and evaluate().  To override\nthe default rendering which displays the output from toString(), implement\nprepareToRender() and render().</p>",
            "is_constructor": 1
        },
        "MathFunction.Max": {
            "name": "MathFunction.Max",
            "shortname": "MathFunction.Max",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Max.js",
            "line": 5,
            "description": "<p>Maximum.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1
        },
        "MathFunction.Min": {
            "name": "MathFunction.Min",
            "shortname": "MathFunction.Min",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Min.js",
            "line": 5,
            "description": "<p>Minimum.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1
        },
        "MathFunction.NaturalLog": {
            "name": "MathFunction.NaturalLog",
            "shortname": "MathFunction.NaturalLog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/NaturalLog.js",
            "line": 5,
            "description": "<p>Natural logarithm.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Negate": {
            "name": "MathFunction.Negate",
            "shortname": "MathFunction.Negate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Negate.js",
            "line": 5,
            "description": "<p>Negate a number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Phase": {
            "name": "MathFunction.Phase",
            "shortname": "MathFunction.Phase",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Phase.js",
            "line": 5,
            "description": "<p>Phase of a complex number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Pi": {
            "name": "MathFunction.Pi",
            "shortname": "MathFunction.Pi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Pi.js",
            "line": 5,
            "description": "<p>Pi</p>",
            "extends": "MathFunction",
            "is_constructor": 1
        },
        "MathFunction.Product": {
            "name": "MathFunction.Product",
            "shortname": "MathFunction.Product",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Product.js",
            "line": 5,
            "description": "<p>Product of values.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1
        },
        "MathFunction.Quotient": {
            "name": "MathFunction.Quotient",
            "shortname": "MathFunction.Quotient",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Quotient.js",
            "line": 5,
            "description": "<p>Quotient of values.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "n",
                    "description": "numerator",
                    "type": "MathFunction"
                },
                {
                    "name": "d",
                    "description": "denominator",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.RealPart": {
            "name": "MathFunction.RealPart",
            "shortname": "MathFunction.RealPart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/RealPart.js",
            "line": 5,
            "description": "<p>Real part of a complex number.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathCanvas.RectList": {
            "name": "MathCanvas.RectList",
            "shortname": "MathCanvas.RectList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas",
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 7,
            "description": "<p>Manages all the bounding rectangles for an expression.</p>\n\n<p>Each item contains rect (top,left,bottom,right), midline,\nfont_size(%), func.</p>",
            "is_constructor": 1
        },
        "MathFunction.Rotate": {
            "name": "MathFunction.Rotate",
            "shortname": "MathFunction.Rotate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Rotate.js",
            "line": 5,
            "description": "<p>Rotate a complex number around the origin.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Sine": {
            "name": "MathFunction.Sine",
            "shortname": "MathFunction.Sine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Sine.js",
            "line": 5,
            "description": "<p>Trigonometric sine.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.SquareRoot": {
            "name": "MathFunction.SquareRoot",
            "shortname": "MathFunction.SquareRoot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/SquareRoot.js",
            "line": 5,
            "description": "<p>Square root.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Sum": {
            "name": "MathFunction.Sum",
            "shortname": "MathFunction.Sum",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Sum.js",
            "line": 5,
            "description": "<p>Sum of values.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1
        },
        "MathFunction.Tangent": {
            "name": "MathFunction.Tangent",
            "shortname": "MathFunction.Tangent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Tangent.js",
            "line": 5,
            "description": "<p>Trigonometric tangent.</p>",
            "extends": "MathFunction.FunctionWithArgs",
            "is_constructor": 1,
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ]
        },
        "MathFunction.Value": {
            "name": "MathFunction.Value",
            "shortname": "MathFunction.Value",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Value.js",
            "line": 5,
            "description": "<p>Constant value</p>",
            "extends": "MathFunction",
            "is_constructor": 1,
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Number"
                }
            ]
        },
        "MathFunction.Variable": {
            "name": "MathFunction.Variable",
            "shortname": "MathFunction.Variable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction",
            "file": "src/gallery-mathcanvas/js/Variable.js",
            "line": 5,
            "description": "<p>Variable value</p>",
            "extends": "MathFunction",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ]
        },
        "MatrixBackground": {
            "name": "MatrixBackground",
            "shortname": "MatrixBackground",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-matrix-background",
            "namespace": "",
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 9,
            "description": "Node plugin to display falling text similar to what was used in the\ncredits for The Matrix.  If you plug into the body element, then it will\nfill the viewport.  Otherwise, you must set a width and height for the\nnode.",
            "mainName": "gallery-matrix-background",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Plugin configuration",
                    "type": "Object"
                }
            ]
        },
        "MatrixCredits": {
            "name": "MatrixCredits",
            "shortname": "MatrixCredits",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-matrix-credits",
            "namespace": "",
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 9,
            "description": "Widget to display text similar to what was used in the credits for The\nMatrix.  If you render the widget into the body, then it will fill the\nviewport.  Otherwise, you must specify a width and height for the\nwidget.",
            "mainName": "gallery-matrix-credits",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Widget configuration",
                    "type": "Object"
                }
            ]
        },
        "RPC.Mojito": {
            "name": "RPC.Mojito",
            "shortname": "RPC.Mojito",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mojito-rpc",
            "namespace": "RPC",
            "file": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "line": 7,
            "description": "<p>RPC wrapper for Mojit proxy.  This allows you to use either\nY.RPC.JSON or Y.RPC.Mojito interchangeably.  The method in the Mojit\nproxy receives the parameters as an array in <code>body.params</code>.\nYou can pass this to the model as follows:\n<code>model.getItems.apply(model,\nac.params.getFromBody().params)</code></p>",
            "mainName": "gallery-mojito-rpc",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "the mojit proxy (parameter named to match Y.jsonrpc)",
                            "type": "Object"
                        },
                        {
                            "name": "methods",
                            "description": "(optional) method names, so you don't have to use `exec`",
                            "type": "Array"
                        }
                    ]
                }
            ]
        },
        "MRUCache": {
            "name": "MRUCache",
            "shortname": "MRUCache",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-mru-cache",
            "namespace": "",
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 5,
            "description": "<p>Cache which drops items based on \"most recently used.\"  Items are\ndropped when a user-defined criterion is exceeded, e.g., total size or\nnumber of items.</p>\n\n<p>The items are stored in a map of {data,mru_item_ref}.  The MRU items\nare stored in a doubly linked list (which stores the map keys) to allow\neasy re-ordering and dropping of items.  Every cache hit moves the\nassociated MRU item to the front of the list.</p>",
            "mainName": "gallery-mru-cache",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "metric",
                            "description": "Computes the metric for an item.  It receives the value as an argument and must return a positive number.",
                            "type": "Function"
                        },
                        {
                            "name": "limit",
                            "description": "Maximum allowed value of the metric.  Items are dropped off the end of the MRU list until the metric is less than or equal to the limit.",
                            "type": "Number"
                        },
                        {
                            "name": "meta",
                            "description": "Attaches meta data to an item when it is added to the cache.  It receives the value as an argument.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "stats",
                            "description": "Pass true if you want to collect basic statistics.  Pass a function if you want to control what information is stored for each key.  The function receives the key, the value, and the stat object.",
                            "type": "Boolean",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "MultiObject": {
            "name": "MultiObject",
            "shortname": "MultiObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-multiobject",
            "namespace": "",
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 7,
            "description": "<p>MultiObject exposes exactly the same API as each individual object,\nboth functions and events, and the state of all the objects is kept in\nsync.  The objects must maintain all state via\nY.Attribute.<p>\n\n<p>MultiObject is similar to Y.ArrayList, except:</p>\n<ul>\n<li>All objects must be of the same type, since MultiObject is supposed\n\t\tto behave exactly like any single object.</li>\n<li>MultiObject automatically delegates all methods.</li>\n<li>By default, MultiObject returns the result from the first object\n\t\tin the list, not an array of results.</li>\n<li>MultiObject propagates all events.</li>\n</ul>\n\n<p>Internally, MultiObject delegates all methods by name, so it supports\nY.Do.before, Y.Do.after, etc.</p>\n\n<p>To avoid shadowing potential function names, we inherit from\nY.EventTarget and use multi_ as the prefix for our own functions.</p>",
            "mainName": "gallery-multiobject",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "EventTarget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "items",
                    "description": "initial set of items",
                    "type": "Array"
                },
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object",
                    "props": [
                        {
                            "name": "return_all_results=false",
                            "description": "\nIf this is true, then all delegated functions\nwill return an array of results instead of the result from the\nprimary item.  Note that functions which return `undefined` or\nthe item itself always cause the MultiObject to be returned,\nto support chaining.",
                            "type": "Boolean"
                        },
                        {
                            "name": "primary_item_index=0",
                            "description": "\nWhen `return_all_results=false`, this is the index of\nthe item which generates the return result for all delegated\nfunctions.",
                            "type": "Number"
                        }
                    ]
                }
            ]
        },
        "Plugin.Neon": {
            "name": "Plugin.Neon",
            "shortname": "Plugin.Neon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-neon",
            "namespace": "Plugin",
            "file": "src/gallery-neon/js/Neon.js",
            "line": 7,
            "description": "Overrides Y.Node.show() to make it look like a flickering neon sign.",
            "mainName": "gallery-neon",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "type": "Object"
                }
            ]
        },
        "Node~event-set": {
            "name": "Node~event-set",
            "shortname": "Node~event-set",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-node-event-set",
            "namespace": "",
            "file": "src/gallery-node-event-set/js/node-event-set.js",
            "line": 7,
            "description": "Patches Y.Node to provide \"set\" events for attributes and styles similar\nto the \"change\" events provided by `Y.Attribute`.  Simply subscribe to\n_attr_Set or _style_Set, e.g., valueSet, z-indexSet, or classSet.\n\nIMPORTANT: \"set\" events will ONLY fire if changes are made through\n`Y.Node`, NOT when directly operating on the DOM element.  Also NOT when a\ndifferent sandbox operates on a separate `Y.Node` instance for the same\nelement.\n\nIMPORTANT: \"set\" events must be subscribed directly on the `Y.Node`, not\nvia `Y.on(...)`.\n\nNote: The valuechange event provided by YUI captures all changes to the\nelement's value attribute, but only when the element has focus.\n\nTo minimize the performance impact, this module initially overrides only\nY.Node.on().  Patches are then applied to the appropriate functions on\nindividual instances when a \"set\" event is requested.\n\n<dl>\n<dt>set, setAttrs, setAttribute, setStyle, setStyles</dt>\n<dd>Fires _attr_Set or _style_Set event with prevVal, newVal.</dd>\n<dt>setData,clearData</dt>\n<dd>Fires dataSet event with dataKey, prevVal, newVal.</dd>\n<dt>addClass, removeClass, replaceClass</dt>\n<dd>Fires classNameSet event with prevVal, newVal -- consistent with set('className', ...).  Also includes addedClass or removedClass, as appropriate.</dd>\n<dt>setX, setY, setXY</dt>\n<dd>Fires xySet event with prevVal and newVal defining x, y, or both.</dd>",
            "mainName": "gallery-node-event-set",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Node~optimizations": {
            "name": "Node~optimizations",
            "shortname": "Node~optimizations",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-node-optimizations",
            "namespace": "",
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 7,
            "description": "Optimizations for searching DOM tree.",
            "mainName": "gallery-node-optimizations",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Node~utils": {
            "name": "Node~utils",
            "shortname": "Node~utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-node-utils",
            "namespace": "",
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 7,
            "description": "<p>Augments Y.Node with useful functions.</p>",
            "mainName": "gallery-node-utils",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "NodeList~extras2": {
            "name": "NodeList~extras2",
            "shortname": "NodeList~extras2",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-nodelist-extras2",
            "namespace": "",
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 7,
            "description": "<p>Augments Y.NodeList with the same higher-order functions that\narray-extras adds to Y.Array.</p>",
            "mainName": "gallery-nodelist-extras2",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Array~object-extras": {
            "name": "Array~object-extras",
            "shortname": "Array~object-extras",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-object-extras",
            "namespace": "",
            "file": "src/gallery-object-extras/js/array-extras.js",
            "line": 5
        },
        "Object~extras": {
            "name": "Object~extras",
            "shortname": "Object~extras",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-object-extras",
            "namespace": "",
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 7,
            "description": "<p>Augments Y.Object with the same higher-order functions that\narray-extras adds to Y.Array.  Note that, unlike Y.Array, iteration\norder for objects is arbitrary, so be careful when applying\nnon-commutative operations!</p>",
            "mainName": "gallery-object-extras",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Paginator.ui.CurrentPageInput": {
            "name": "Paginator.ui.CurrentPageInput",
            "shortname": "Paginator.ui.CurrentPageInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 11,
            "description": "Generates an input field for setting the current page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.CurrentPageReport": {
            "name": "Paginator.ui.CurrentPageReport",
            "shortname": "Paginator.ui.CurrentPageReport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 11,
            "description": "ui Component to generate the textual report of current pagination status.\nE.g. \"Now viewing page 1 of 13\".",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.FirstPageLink": {
            "name": "Paginator.ui.FirstPageLink",
            "shortname": "Paginator.ui.FirstPageLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 11,
            "description": "ui Component to generate the link to jump to the first page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.ItemRangeDropdown": {
            "name": "Paginator.ui.ItemRangeDropdown",
            "shortname": "Paginator.ui.ItemRangeDropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 11,
            "description": "ui Component to display a menu for selecting the range of items to display.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.LastPageLink": {
            "name": "Paginator.ui.LastPageLink",
            "shortname": "Paginator.ui.LastPageLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 11,
            "description": "ui Component to generate the link to jump to the last page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.NextPageLink": {
            "name": "Paginator.ui.NextPageLink",
            "shortname": "Paginator.ui.NextPageLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 11,
            "description": "ui Component to generate the link to jump to the next page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.PageLinks": {
            "name": "Paginator.ui.PageLinks",
            "shortname": "Paginator.ui.PageLinks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 11,
            "description": "ui Component to generate the page links",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator": {
            "name": "Paginator",
            "shortname": "Paginator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 15,
            "description": "To instantiate a Paginator, pass a configuration object to the contructor.\nThe configuration object should contain the following properties:\n<ul>\n  <li>rowsPerPage : <em>n</em> (int)</li>\n  <li>totalRecords : <em>n</em> (int or Paginator.VALUE_UNLIMITED)</li>\n</ul>",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal to set instance and ui component\nconfiguration.",
                    "type": "Object"
                }
            ]
        },
        "Paginator.ui.PreviousPageLink": {
            "name": "Paginator.ui.PreviousPageLink",
            "shortname": "Paginator.ui.PreviousPageLink",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 11,
            "description": "ui Component to generate the link to jump to the previous page.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.RowsPerPageDropdown": {
            "name": "Paginator.ui.RowsPerPageDropdown",
            "shortname": "Paginator.ui.RowsPerPageDropdown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 11,
            "description": "ui Component to generate the rows-per-page dropdown",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "Paginator.ui.ValidationPageLinks": {
            "name": "Paginator.ui.ValidationPageLinks",
            "shortname": "Paginator.ui.ValidationPageLinks",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-paginator",
            "namespace": "",
            "file": "src/gallery-paginator/js/ValidationPageLinks.js",
            "line": 5,
            "description": "Adds per-page error notification to Paginator.ui.PageLinks.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "p",
                    "description": "Paginator instance to attach to",
                    "type": "Pagintor"
                }
            ]
        },
        "InputPopup": {
            "name": "InputPopup",
            "shortname": "InputPopup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-popup",
            "namespace": "",
            "file": "src/gallery-popup/js/input-popup.js",
            "line": 5,
            "description": "<p>A popup tuned to attach to an input field and contain a clickable\nvalue selector, e.g., `Y.Calendar` or `Y.Saw.Timepicker`.</p>",
            "extends": "Popup",
            "is_constructor": 1
        },
        "Popup": {
            "name": "Popup",
            "shortname": "Popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-popup",
            "namespace": "",
            "file": "src/gallery-popup/js/popup.js",
            "line": 10,
            "description": "<p>Popup provides an overlay which opens on a definable set of events,\ncloses on ESC or clicks outside the popup, and which can block the\noverlay from closing based on a definable set of events which take\nprecendence over the default close events.</p>",
            "extends": "Overlay",
            "uses": [
                "WidgetAutohide"
            ],
            "is_constructor": 1
        },
        "QueryBuilder": {
            "name": "QueryBuilder",
            "shortname": "QueryBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-querybuilder",
            "namespace": "",
            "file": "src/gallery-querybuilder/js/Types.js",
            "line": 5,
            "description": "<p>The default package provides two data types:  String (which can also\nbe used for numbers) and Select (which provides a menu of options).  The\nplugin API allows defining additional data types, e.g., date range or\nmulti-select.  Every plugin must be registered in\n`Y.QueryBuilder.plugin_mapping`.  Plugins must implement the following\nfunctions:</p>\n\n<dl>\n<dt>`constructor(qb, config)`</dt>\n<dd>The arguments passed to the constructor are the QueryBuilder instance\n\t\tand the `pluginConfig` set on the QueryBuilder instance.\n\t\tAt the minimum, this function should initalize form field name patterns\n\t\tusing `config.field_prefix`.</dd>\n<dt>`create(query_index, var_config, op_list, value)`<dt>\n<dd>This function must create the additional cells for the query row and\n\t\tpopulate these cells appropriately.  (The QueryBuilder widget will\n\t\tinsert the cells into the table.)  `var_config` is the\n\t\titem from the QueryBuilder's `var_list` that the user\n\t\tselected.  `op_list` is the item from the QueryBuilder's\n\t\t`operators` which matches the variable selected by the\n\t\tuser.  `value` is optional.  If specified, it is the\n\t\tinitial value(s) to be displayed by the plugin.</dd>\n<dt>`postCreate(query_index, var_config, op_list, value)`</dt>\n<dd>Optional.  If it exists, it will be called after the cells returned by\n\t\t`create()` have been inserted into the table.  The arguments\n\t\tare the same as `create()`.</dd>\n<dt>`destroy()`</dt>\n<dd>Destroy the plugin.  (The QueryBuilder widget will remove the cells\n\t\tand purge all events.)</dd>\n<dt>`updateName(new_index)`</dt>\n<dd>Update the names of the form fields managed by the plugin.</dd>\n<dt>`toDatabaseQuery()`</dt>\n<dd>Return an array of arrays.  Each inner array contains an operation\n\t\tand a value.  The default String and Select plugins each return\n\t\ta single inner array.  A date range plugin would return two inner\n\t\tarrays, one for the start date and one for the end date.</dd>\n<dt>`validate()`</dt>\n<dd>Optional.  If additional validations are required beyond the basic\n\t\tvalidations encoded in CSS, this function should check them.  If\n\t\tthe input is not valid, call `displayFieldMessage()`\n\t\ton the QueryBuilder object and return false.  Otherwise, return\n\t\ttrue.</dd>\n</dl>",
            "extends": "Widget",
            "is_constructor": 1,
            "params": [
                {
                    "name": "var_list",
                    "description": "List of variables that be included in the query.",
                    "type": "Array",
                    "props": [
                        {
                            "name": "name",
                            "description": "The name of the variable.  Set as the `value` for the select option.",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "The variable type.  Used to determine which plugin to instantiate. Must match a key in `Y.QueryBuilder.plugin_mapping`. (You can add new plugins to this global mapping.)",
                            "type": "String"
                        },
                        {
                            "name": "text",
                            "description": "The text displayed when the variable is selected.",
                            "type": "String"
                        },
                        {
                            "name": "*",
                            "description": "plugin-specific configuration",
                            "type": "Mixed",
                            "multiple": true
                        }
                    ]
                },
                {
                    "name": "operators",
                    "description": "Map of variable types to list of operators. Each operator is an object defining `value` and `text`.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "Widget configuration",
                    "type": "Object"
                }
            ]
        },
        "QueryBuilder.Select": {
            "name": "QueryBuilder.Select",
            "shortname": "QueryBuilder.Select",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-querybuilder",
            "namespace": "QueryBuilder",
            "file": "src/gallery-querybuilder/js/Select.js",
            "line": 5,
            "description": "Plugin for choosing from a list of values.  In the `var_list`\nconfiguration, specify `value_list` as a list of objects, each defining\n`value` and `text`.\n\nThere must be exactly one operator specified for this plugin.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` can be a\nstring (the value of the menu item to select) or an array with two\nelements (`[ operator, value ]`)."
        },
        "QueryBuilder.String": {
            "name": "QueryBuilder.String",
            "shortname": "QueryBuilder.String",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-querybuilder",
            "namespace": "QueryBuilder",
            "file": "src/gallery-querybuilder/js/String.js",
            "line": 5,
            "description": "Plugin for accepting a string or number.  All the operators specified\nfor this plugin are displayed on a menu.\n\nIn the `var_list` configuration, specify `validation` to provide CSS\nclasses that will be interpreted by `Y.FormManager`.\n\nTo enable autocomplete, define `autocomplete` in the `var_list`\nconfiguration.  The object will be used as the configuration for\n`Y.Plugin.AutoComplete`.  If you specify\n`autocomplete.containerClassName`, this CSS class will be added to the\ncontainer generated by the autocomplete plugin.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` must be an\narray with two elements: `[ operator_name, value ]`."
        },
        "QueryBuilder.DateRange": {
            "name": "QueryBuilder.DateRange",
            "shortname": "QueryBuilder.DateRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-querybuilder",
            "submodule": "gallery-querybuilder-daterange",
            "namespace": "QueryBuilder",
            "file": "src/gallery-querybuilder-daterange/js/daterange.js",
            "line": 6,
            "description": "Plugin for accepting date/time range.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` must be an\narray with two elements: `[ start_date, end_date ]`.\n\n`var_config` accepts `show_time`, `start_config`, `end_config`.  The\nconfigs must define objects: `Calendar`, `InputCalendarSync`,\n`DateTime`, `date_InputPopup`, `time_InputPopup`.\n\n`op_list` must be an array: `[ greater_than, less_than ]`."
        },
        "QueryBuilder.MultiselectInput": {
            "name": "QueryBuilder.MultiselectInput",
            "shortname": "QueryBuilder.MultiselectInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-querybuilder",
            "submodule": "gallery-querybuilder-multiselect-input",
            "namespace": "QueryBuilder",
            "file": "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js",
            "line": 6,
            "description": "Plugin for accepting multiple strings from a specified list.  In the\n`var_list` configuration, specify `value_list` as a list of strings.  If\nthere is more than one operator specified for this plugin, then they are\ndisplayed on a menu.\n\nThe `value` argument passed to `QueryBuilder.appendNew()` must be an\narray with two elements: `[ operator_name, value_list ]`, where\n`value_list` is an array of strings.\n\nIf you specify `autocomplete.containerClassName` in the `var_list`\nconfiguration, this CSS class will be added to the container generated\nby the autocomplete plugin."
        },
        "Plugin.DataTableQuickEdit": {
            "name": "Plugin.DataTableQuickEdit",
            "shortname": "Plugin.DataTableQuickEdit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-quickedit",
            "namespace": "Plugin",
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 7,
            "description": "<p>The QuickEdit plugin provides a new mode for DataTable where all\nvalues in the table can be edited simultaneously, controlled by the\ncolumn configuration.  Each editable cell contains an input field.  If\nthe user decides to save the changes, then you can extract the changed\nvalues by calling <code><i>dt</i>.qe.getChanges()</code>.</p>\n\n<p>For a column to be editable in QuickEdit mode, the column\nconfiguration must include <code>quickEdit</code>.  The contents of\nthis object define the column's behavior in QuickEdit mode.</p>\n\n<p>To move up or down within a column while in QuickEdit mode, hold down\nthe Ctrl key and press the up or down arrow.</p>\n\n<p>If a column should not be editable, but needs to be formatted\ndifferently in QuickEdit mode, then you must define qeFormatter in\nthe column configuration. This is simply a normal cell formatter\nfunction that will be used in QuickEdit mode.  The static functions\n<code>readonly*Formatter</code> provide examples.</p>\n\n<p>The following configuration can be provided as part of\nquickEdit:</p>\n\n<dl>\n\n<dt>changed</dt><dd>Optional.  The function to call with the old and new\nvalue.  Should return true if the values are different.</dd>\n\n<dt>formatter</dt><dd>The cell formatter which will render an\nappropriate form field: &lt;input type=\"text\"&gt;, &lt;textarea&gt;,\nor &lt;select&gt;.</dd>\n\n<dt>validation</dt><dd>Validation configuration for every field in\nthe column.</dd>\n\n<dt>copyDown</dt><dd>If true, the top cell in the column will have a\nbutton to copy the value down to the rest of the rows.</dd>\n\n</dl>\n\n<p>The following configuration can be provided as part of\nquickEdit.validation:</p>\n\n<dl>\n\n<dt>css</dt><dd>CSS classes encoding basic validation rules:\n <dl>\n <dt><code>yiv-required</code></dt>\n     <dd>Value must not be empty.</dd>\n\n <dt><code>yiv-length:[x,y]</code></dt>\n     <dd>String must be at least x characters and at most y characters.\n     At least one of x and y must be specified.</dd>\n\n <dt><code>yiv-integer:[x,y]</code></dt>\n     <dd>The integer value must be at least x and at most y.\n     x and y are both optional.</dd>\n\n <dt><code>yiv-decimal:[x,y]</code></dt>\n     <dd>The decimal value must be at least x and at most y.  Exponents are\n     not allowed.  x and y are both optional.</dd>\n </dl>\n</dd>\n\n<dt>fn</dt><dd>A function that will be called with the DataTable as its\nscope and the cell's form element as the argument. Return true if the\nvalue is valid. Otherwise, call this.qe.displayMessage(...) to display\nan error and return false.</dd>\n\n<dt>msg</dt><dd>A map of types to messages that will be displayed\nwhen a basic or regex validation rule fails. The valid types are:\nrequired, min_length, max_length, integer, decimal, and regex.\nThere is no default for type regex, so you must specify a message if\nyou configure a regex validation.</dd>\n\n<dt>regex</dt><dd>Regular expression that the value must satisfy in\norder to be considered valid.</dd>\n\n</dl>\n\n<p>Custom QuickEdit Formatters</p>\n\n<p>To write a custom cell formatter for QuickEdit mode, you must\nstructure the function as follows:</p>\n\n<pre>\nfunction myQuickEditFormatter(o) {\n&nbsp;&nbsp;var markup =\n&nbsp;&nbsp;&nbsp;&nbsp;'&lt;input type=\"text\" class=\"{yiv} quickedit-field quickedit-key:{key}\" value=\"{value}\"/&gt;' +\n&nbsp;&nbsp;&nbsp;&nbsp;'{cd}' + Y.Plugin.DataTableQuickEdit.error_display_markup;\n\n&nbsp;&nbsp;var qe = o.column.quickEdit;\n&nbsp;&nbsp;return Y.Lang.sub(markup, {\n&nbsp;&nbsp;&nbsp;&nbsp;key: o.column.key,\n&nbsp;&nbsp;&nbsp;&nbsp;value: o.value.toString().replace(/\"/g, '&quot;'),\n&nbsp;&nbsp;&nbsp;&nbsp;yiv: qe.validation ? (qe.validation.css || '') : '',\n&nbsp;&nbsp;&nbsp;&nbsp;cd: QuickEdit.copyDownFormatter.call(this, o)\n&nbsp;&nbsp;});\n};\n</pre>\n\n<p>You can use textarea or select instead of input, but you can only\ncreate a single field.</p>\n\n<p><code>extractMyEditableValue</code> does not have to be a separate\nfunction. The work should normally be done inline in the formatter\nfunction, but the name of the sample function makes the point clear.</p>",
            "mainName": "gallery-quickedit",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "extends": "Plugin.Base",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "Object literal to set component configuration.",
                    "type": "Object"
                }
            ]
        },
        "Node~scrollIntoView": {
            "name": "Node~scrollIntoView",
            "shortname": "Node~scrollIntoView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-scrollintoview",
            "namespace": "",
            "file": "src/gallery-scrollintoview/js/ScrollIntoView.js",
            "line": 9,
            "description": "Only scrolls if the object is not currently visible.\n\nThis requires that all scrollable elements have position:relative.\nOtherwise, this algorithm will skip over them with unpredictable\nresults.",
            "mainName": "gallery-scrollintoview",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Sort": {
            "name": "Sort",
            "shortname": "Sort",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-sort-extras",
            "namespace": "",
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 7,
            "description": "<p>Utilities for sorting.</p>",
            "mainName": "gallery-sort-extras",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Assert": {
            "name": "Assert",
            "shortname": "Assert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-test-extras",
            "namespace": "",
            "file": "src/gallery-test-extras/js/Assert.js",
            "line": 7,
            "description": "<p>Additional assertions for unit tests.</p>",
            "mainName": "gallery-test-extras",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        },
        "Treeble": {
            "name": "Treeble",
            "shortname": "Treeble",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-treeble",
            "namespace": "",
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 8,
            "description": "Extension to DataTable for displaying tree data.",
            "extends": "DataTable",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "DataSource.Treeble": {
            "name": "DataSource.Treeble",
            "shortname": "DataSource.Treeble",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-treeble",
            "namespace": "DataSource",
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 7,
            "description": "<p>Hierarchical data source.</p>\n\n<p>TreebleDataSource converts a tree of DataSources into a flat list of\nvisible items.  The merged list must be paginated if the number of child\nnodes might be very large.  To turn on this feature, set\npaginateChildren:true.</p>\n\n<p>The tree must be immutable.  The total number of items available from\neach DataSource must remain constant.  (The one exception to this rule\nis that filtering and sorting are allowed.  This is done by detecting\nthat the request parameters have changed.)</p>",
            "extends": "DataSource.Local",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                }
            ]
        },
        "Parsers": {
            "name": "Parsers",
            "shortname": "Parsers",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "gallery-treeble",
            "namespace": "",
            "file": "src/gallery-treeble/js/TreebleParser.js",
            "line": 5,
            "description": "<p>Converts data to a DataSource.  Data can be an object containing both\n`dataType` and `liveData`, or it can be <q>free form</q>, e.g., an array\nof records or an XHR URL.</p>"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 74,
            "description": "Whether or not the accordion is horizontal.",
            "itemtype": "attribute",
            "name": "horizontal",
            "type": "{boolean}",
            "default": "false",
            "writeonce": "",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 88,
            "description": "A CSS selector for locating nodes, an array of nodes, or an array\nof strings containing markup.  This is used to define the initial\nset of section titles.",
            "itemtype": "attribute",
            "name": "titles",
            "type": "{String|Array}",
            "writeonce": "",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 102,
            "description": "Whether or not to replace the default title container node, when the\nsupplied title is a node.  (If the supplied title is markup, it is\nalways inserted inside the default title container.)",
            "itemtype": "attribute",
            "name": "replaceTitleContainer",
            "type": "{boolean}",
            "default": "true",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 117,
            "description": "A CSS selector for locating nodes, an array of nodes, or an array\nof strings containing markup.  This is used to define the initial\nset of section contents.",
            "itemtype": "attribute",
            "name": "sections",
            "type": "{String|Array}",
            "writeonce": "",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 131,
            "description": "Whether or not to replace the default section container node, when\nthe supplied title is a node.  (If the supplied content is markup,\nit is always inserted inside the default section container.)",
            "itemtype": "attribute",
            "name": "replaceSectionContainer",
            "type": "{boolean}",
            "default": "true",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 146,
            "description": "Whether or not to allow all sections to be closed at the same time.\nIf not, at least one section will always be open.",
            "itemtype": "attribute",
            "name": "allowAllClosed",
            "type": "{boolean}",
            "default": "false",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 166,
            "description": "Whether or not to allow multiple sections to be open at the same\ntime.  If not, at most one section at a time will be open.",
            "itemtype": "attribute",
            "name": "allowMultipleOpen",
            "type": "{boolean}",
            "default": "false",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 180,
            "description": "Whether or not to animate the initial rendering of the widget.",
            "itemtype": "attribute",
            "name": "animateRender",
            "type": "{boolean}",
            "default": "false",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 195,
            "description": "Whether or not to animate insertion and removal of sections.",
            "itemtype": "attribute",
            "name": "animateInsertRemove",
            "type": "{boolean}",
            "default": "true",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 209,
            "description": "Whether or not to animate opening and closing of sections.",
            "itemtype": "attribute",
            "name": "animateOpenClose",
            "type": "{boolean}",
            "default": "true",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 223,
            "description": "Duration of all animations.",
            "itemtype": "attribute",
            "name": "animateDuration",
            "type": "{int}",
            "default": "whatever Y.Anim default is",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 239,
            "description": "Easing applied to all animations.",
            "itemtype": "attribute",
            "name": "animateEasing",
            "type": "{function}",
            "default": "whatever Y.Anim default is",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 269,
            "itemtype": "event",
            "name": "beforeInsert",
            "description": "Fires before a section is inserted.",
            "params": [
                {
                    "name": "index",
                    "description": "the insertion index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 274,
            "itemtype": "event",
            "name": "insert",
            "description": "Fires after a section is inserted.",
            "params": [
                {
                    "name": "index",
                    "description": "the insertion index",
                    "type": "Int"
                },
                {
                    "name": "size",
                    "description": "the final size of the section title, after animation (if any)",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 281,
            "itemtype": "event",
            "name": "beforeRemove",
            "description": "Fires before a section is removed.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 286,
            "itemtype": "event",
            "name": "remove",
            "description": "Fires after a section is removed.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 292,
            "itemtype": "event",
            "name": "beforeOpen",
            "description": "Fires before a section is opened.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 297,
            "itemtype": "event",
            "name": "open",
            "description": "Fires after a section is opened.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 303,
            "itemtype": "event",
            "name": "beforeClose",
            "description": "Fires before a section is closed.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 308,
            "itemtype": "event",
            "name": "close",
            "description": "Fires after a section is closed.",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 423,
            "itemtype": "method",
            "name": "getSectionCount",
            "return": {
                "description": "total number of sections",
                "type": "Int"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 432,
            "itemtype": "method",
            "name": "getTitle",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "the container for the section title",
                "type": "Node"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 443,
            "description": "Sets the contents of the specified section title.",
            "itemtype": "method",
            "name": "setTitle",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                },
                {
                    "name": "title",
                    "description": "the title content",
                    "type": "String|Node"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 511,
            "itemtype": "method",
            "name": "getSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "the container for the section content",
                "type": "Node"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 522,
            "description": "Sets the contents of the specified section.",
            "itemtype": "method",
            "name": "setSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                },
                {
                    "name": "content",
                    "description": "the section content",
                    "type": "String|Node"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 578,
            "itemtype": "method",
            "name": "_getClip",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "the clipping container for the section content",
                "type": "Node"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 590,
            "description": "Prepends the section to the accordion.",
            "itemtype": "method",
            "name": "prependSection",
            "params": [
                {
                    "name": "title",
                    "description": "the section title content",
                    "type": "String|Node"
                },
                {
                    "name": "content",
                    "description": "the section content",
                    "type": "String|Node"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 604,
            "description": "Appends the section to the accordion.",
            "itemtype": "method",
            "name": "appendSection",
            "params": [
                {
                    "name": "title",
                    "description": "the section title content",
                    "type": "String|Node"
                },
                {
                    "name": "content",
                    "description": "the section content",
                    "type": "String|Node"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 618,
            "description": "Inserts the section into the accordion at the specified location.",
            "itemtype": "method",
            "name": "insertSection",
            "params": [
                {
                    "name": "index",
                    "description": "the insertion index",
                    "type": "Int"
                },
                {
                    "name": "title",
                    "description": "the section title content",
                    "type": "String|Node"
                },
                {
                    "name": "content",
                    "description": "the section content",
                    "type": "String|Node"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 745,
            "description": "Removes the specified section.",
            "itemtype": "method",
            "name": "removeSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 821,
            "itemtype": "method",
            "name": "findSection",
            "params": [
                {
                    "name": "any",
                    "description": "element inside the section or title",
                    "type": "String|Node"
                }
            ],
            "return": {
                "description": "the index of the containing section, or -1 if not found",
                "type": "Int"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 846,
            "itemtype": "method",
            "name": "isSectionOpen",
            "return": {
                "description": "<code>true</code> if the section is open",
                "type": "Boolean"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 856,
            "description": "Open the specified section.",
            "itemtype": "method",
            "name": "openSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 871,
            "description": "Close the specified section.",
            "itemtype": "method",
            "name": "closeSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 886,
            "itemtype": "method",
            "name": "allSectionsOpen",
            "return": {
                "description": "<code>true</code> if all sections are open",
                "type": "Boolean"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 904,
            "itemtype": "method",
            "name": "allSectionsClosed",
            "return": {
                "description": "<code>true</code> if all sections are closed",
                "type": "Boolean"
            },
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 922,
            "description": "Show/hide the section content.",
            "itemtype": "method",
            "name": "toggleSection",
            "params": [
                {
                    "name": "index",
                    "description": "the section index",
                    "type": "Int"
                }
            ],
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 1041,
            "description": "Open all sections, if possible.",
            "itemtype": "method",
            "name": "openAllSections",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-accordion-horiz-vert/js/Accordion.js",
            "line": 1061,
            "description": "Close all sections, if possible.",
            "itemtype": "method",
            "name": "closeAllSections",
            "class": "Accordion",
            "module": "gallery-accordion-horiz-vert"
        },
        {
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 14,
            "description": "<p>Swaps two elements.</p>",
            "itemtype": "method",
            "name": "swap",
            "static": 1,
            "params": [
                {
                    "name": "list",
                    "description": "the list on which to operate",
                    "type": "Array"
                },
                {
                    "name": "i",
                    "description": "first index",
                    "type": "Int"
                },
                {
                    "name": "j",
                    "description": "second index",
                    "type": "Int"
                }
            ],
            "class": "Array~algorithms",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 30,
            "description": "<p>A -1,0,+1 comparator for case-sensitive string comparison.</p>",
            "itemtype": "method",
            "name": "compareStringsCaseSensitive",
            "static": 1,
            "params": [
                {
                    "name": "s1",
                    "description": "first string",
                    "type": "String"
                },
                {
                    "name": "s2",
                    "description": "second string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "-1 if s1&lt;s2, 0 if s1==s2, +1 if s1&gt;s2"
            },
            "class": "Array~algorithms",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 51,
            "description": "<p>A -1,0,+1 comparator for case-insensitive string comparison.</p>",
            "itemtype": "method",
            "name": "compareStringsCaseInsensitive",
            "static": 1,
            "params": [
                {
                    "name": "s1",
                    "description": "first string",
                    "type": "String"
                },
                {
                    "name": "s2",
                    "description": "second string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "-1 if s1&lt;s2, 0 if s1==s2, +1 if s1&gt;s2"
            },
            "class": "Array~algorithms",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 145,
            "description": "<p>Quick sort the given list.</p>",
            "itemtype": "method",
            "name": "quickSort",
            "static": 1,
            "params": [
                {
                    "name": "list",
                    "description": "the list to search (sorted on the compare function)",
                    "type": "Array"
                },
                {
                    "name": "compare=Y.Array.compareStringsCaseSensitive",
                    "description": "the comparison function",
                    "type": "Function"
                }
            ],
            "class": "Array~algorithms",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/Array.js",
            "line": 165,
            "description": "<p>Binary search.</p>",
            "itemtype": "method",
            "name": "binarySearch",
            "static": 1,
            "params": [
                {
                    "name": "list",
                    "description": "the list to search (sorted on the compare function)",
                    "type": "Array"
                },
                {
                    "name": "target",
                    "description": "the object to search for",
                    "type": "Mixed"
                },
                {
                    "name": "compare",
                    "description": "the comparison function",
                    "type": "Function",
                    "optional": true,
                    "optdefault": "Y.Array.compareStringsCaseSensitive"
                }
            ],
            "return": {
                "description": "index of matched item or -1 if no match",
                "type": "Int"
            },
            "class": "Array~algorithms",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 16,
            "description": "<p>Swap two elements.</p>",
            "itemtype": "method",
            "name": "swap",
            "params": [
                {
                    "name": "i",
                    "description": "first index",
                    "type": "Int"
                },
                {
                    "name": "j",
                    "description": "second index",
                    "type": "Int"
                }
            ],
            "class": "ArrayList~extras",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 28,
            "description": "<p>Set comparison function.</p>",
            "itemtype": "method",
            "name": "setComparator",
            "params": [
                {
                    "name": "compare",
                    "description": "the -1,0,+1 comparison function to use when sorting and searching",
                    "type": "Function"
                }
            ],
            "class": "ArrayList~extras",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 39,
            "description": "<p>Quick sort the given list, using the function passed to setComparator().</p>",
            "itemtype": "method",
            "name": "quickSort",
            "class": "ArrayList~extras",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-algorithms/js/ArrayList.js",
            "line": 49,
            "description": "<p>Binary search, using the function passed to setComparator().</p>",
            "itemtype": "method",
            "name": "binarySearch",
            "params": [
                {
                    "name": "target",
                    "description": "the object to search for",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "index of matched item or -1 if no match",
                "type": "Int"
            },
            "class": "ArrayList~extras",
            "module": "gallery-algorithms"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 35,
            "description": "If true, the animation runs backwards.  Immediate actions receive\nthe value of reverse as the only argument.",
            "itemtype": "attribute",
            "name": "reverse",
            "type": "{Boolean}",
            "default": "false",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 49,
            "description": "The number of times the animation should run.  Can be \"infinite\"",
            "itemtype": "attribute",
            "name": "iterations",
            "type": "{Number|String}",
            "default": "1",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 65,
            "description": "The number of times the animation has run.  Resets to zero when\nthe animation finishes or is stopped.",
            "itemtype": "attribute",
            "name": "iterationCount",
            "type": "{Number}",
            "readonly": "",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 79,
            "description": "The behavior of the animation when \"iterations\" > 1:\nIf \"normal\", the animation will repeat in the same direction.\nIf \"alternate\", the animation will flip \"reverse\" at the end of the sequence.",
            "itemtype": "attribute",
            "name": "direction",
            "type": "{String}",
            "default": "\"normal\"",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 97,
            "description": "Whether or not the animation is currently running.",
            "itemtype": "attribute",
            "name": "running",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 112,
            "description": "Whether or not the animation is currently paused.",
            "itemtype": "attribute",
            "name": "paused",
            "type": "{Boolean}",
            "default": "false",
            "readonly": "",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 128,
            "itemtype": "event",
            "name": "start",
            "description": "Fires when the sequence begins.",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 132,
            "itemtype": "event",
            "name": "item",
            "description": "Fires when an item in the sequence begins.",
            "params": [
                {
                    "name": "index",
                    "description": "the item index",
                    "type": "Int"
                }
            ],
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 137,
            "itemtype": "event",
            "name": "end",
            "description": "Fires after the sequence finishes.",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 142,
            "itemtype": "event",
            "name": "pause",
            "description": "Fires when the sequence is paused.",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 146,
            "itemtype": "event",
            "name": "resume",
            "description": "Fires when the sequence resumes (after being paused).",
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 233,
            "description": "Append items to the sequence.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "item",
                    "description": "animation, function, list of animations and functions, or delay in milliseconds",
                    "type": "Anim|Function|Array|Number",
                    "multiple": true
                }
            ],
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 255,
            "description": "Prepend items to the sequence.",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "item",
                    "description": "animation, function, list of animations and functions, or delay in milliseconds",
                    "type": "Anim|Function|Array|Number",
                    "multiple": true
                }
            ],
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 277,
            "description": "Starts or resumes the sequence.",
            "itemtype": "method",
            "name": "run",
            "chainable": 1,
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 302,
            "description": "Stops and resets the sequence.",
            "itemtype": "method",
            "name": "stop",
            "chainable": 1,
            "params": [
                {
                    "name": "finish",
                    "description": "If true, the animation will move to the last frame.",
                    "type": "Boolean"
                }
            ],
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-anim-sequence/js/anim-seq.js",
            "line": 342,
            "description": "Pauses the sequence.  If the current item is a delay, the sequence will\npause after the delay interval finishes.",
            "itemtype": "method",
            "name": "pause",
            "chainable": 1,
            "class": "AnimSequence",
            "module": "gallery-anim-sequence"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 43,
            "description": "The original data.  This must be immutable, i.e., the values must\nnot change.",
            "itemtype": "attribute",
            "name": "ds",
            "type": "{DataSource}",
            "required": 1,
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 57,
            "description": "The function to convert the initial request into a request usable by\nthe underlying DataSource.  This function takes one argument: state\n(startIndex,resultCount,...).",
            "itemtype": "attribute",
            "name": "generateRequest",
            "type": "{Function}",
            "required": 1,
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 73,
            "description": "The name of the key in each record that stores an identifier which\nis unique across the entire data set.",
            "itemtype": "attribute",
            "name": "uniqueIdKey",
            "type": "{String}",
            "required": 1,
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 88,
            "description": "The function to call to generate a unique id for a new record.  The\ndefault generates \"bulk-edit-new-id-#\".",
            "itemtype": "attribute",
            "name": "generateUniqueId",
            "type": "{Function}",
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 107,
            "description": "OGNL expression telling how to extract the startIndex from the\nreceived data, e.g., <code>.meta.startIndex</code>.  If it is not\nprovided, startIndex is always assumed to be zero.",
            "itemtype": "attribute",
            "name": "startIndexExpr",
            "type": "{String}",
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 122,
            "description": "OGNL expression telling where in the response to store the total\nnumber of records, e.g., <code>.meta.totalRecords</code>.  This is\nonly appropriate for DataSources that always return the entire data\nset.",
            "itemtype": "attribute",
            "name": "totalRecordsReturnExpr",
            "type": "{String}",
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 138,
            "description": "The function to call to extract the total number of\nrecords from the response.",
            "itemtype": "attribute",
            "name": "extractTotalRecords",
            "type": "{Function}",
            "required": 1,
            "writeonce": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 438,
            "itemtype": "method",
            "name": "_dataIsLocal",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "true if the raw data is stored locally",
                "type": "Boolean"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 448,
            "description": "Flush the underlying datasource's cache.",
            "itemtype": "method",
            "name": "_flushCache",
            "access": "protected",
            "tagname": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 463,
            "description": "Use this instead of any meta information in response.",
            "itemtype": "method",
            "name": "getRecordCount",
            "return": {
                "description": "the total number of visible records",
                "type": "Number"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 474,
            "itemtype": "method",
            "name": "getCurrentRecords",
            "return": {
                "description": "the records returned by the latest request",
                "type": "Number"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 483,
            "itemtype": "method",
            "name": "getCurrentRecordMap",
            "return": {
                "description": "the records returned by the latest request, keyed by record id",
                "type": "Object"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 492,
            "itemtype": "method",
            "name": "getValue",
            "params": [
                {
                    "name": "record_index",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value of the specified field in the specified record",
                "type": "Mixed"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 536,
            "description": "When using a remote datasource, this will include changes made to\ndeleted records.",
            "itemtype": "method",
            "name": "getChanges",
            "return": {
                "description": "map of all changed values, keyed by record id",
                "type": "Object"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 548,
            "itemtype": "method",
            "name": "getRemovedRecordIndexes",
            "return": {
                "description": "list of removed record indices, based on initial ordering",
                "type": "Array"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 566,
            "itemtype": "method",
            "name": "getHiddenRecordIndexes",
            "return": {
                "description": "list of hidden record indices, based on initial ordering",
                "type": "Array"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 584,
            "description": "You must `reload` the widget after calling this function!",
            "itemtype": "method",
            "name": "insertRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "insertion index",
                    "type": "Number"
                },
                {
                    "name": "record",
                    "description": "record to insert or id of record to clone",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "id of newly inserted record",
                "type": "String"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 638,
            "description": "You must `reload` the widget after calling this function!",
            "itemtype": "method",
            "name": "removeRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "index of record to remove",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if record was removed",
                "type": "Boolean"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 681,
            "description": "Inverse of `removeRecord`, but only for pre-existing records and\nonly with `DataSource.Local`.  Changes made before the record was\nremoved are not restored.\n\nYou must `reload` the widget after calling this function!",
            "itemtype": "method",
            "name": "restoreRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the restored record's index or -1 if record id is not found",
                "type": "Int"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 699,
            "description": "Update a value in a record.",
            "itemtype": "method",
            "name": "updateValue",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "new item value",
                    "type": "String"
                },
                {
                    "name": "set_as_default",
                    "description": "pass `true` to make this the new default value - must call editor.reload() afterwards!",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 769,
            "itemtype": "method",
            "name": "_getComparator",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "comparator function for the given field",
                "type": "Function"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 793,
            "description": "Merge changes into the underlying data, to flush diffs for a record.\nOnly usable with DataSource.Local.  When using best-effort save on\nthe server, call this for each record that was successfully saved.",
            "itemtype": "method",
            "name": "mergeChanges",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 853,
            "description": "<p>Completely remove a record, from both the display and the\nunderlying data.  Only usable with DataSource.Local.  When using\nbest-effort save on the server, call this for each record that was\nsuccessfully deleted.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "killRecord",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 942,
            "description": "<p>Change the id of a record.  Only usable with DataSource.Local.\nWhen using best-effort save on the server, call this for each newly\ncreated record that was successfully saved.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "updateRecordId",
            "params": [
                {
                    "name": "orig_record_id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "new_record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 1017,
            "description": "Only usable with `DataSource.Local`.\n\nYou must `reload` the widget after calling this function!",
            "itemtype": "method",
            "name": "showRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the newly visible record's index or -1 if record id is not found",
                "type": "Int"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 1033,
            "description": "Only usable with `DataSource.Local`.\n\nYou must `reload` the widget after calling this function!\n\nYou can only hide pre-existing, unmodified records.  Otherwise, you\nmight get a validation error on a hidden record.",
            "itemtype": "method",
            "name": "hideRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "index of record to hide",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if record is now hidden",
                "type": "Boolean"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 1071,
            "description": "Only usable with `DataSource.Local`.\n\nYou must `reload` the widget after calling this function!",
            "itemtype": "method",
            "name": "_restoreRecord",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the newly visible record's index or -1 if record id is not found",
                "type": "Int"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 1120,
            "description": "Find the index of the given record id.  Only usable with\n`DataSource.Local`.",
            "itemtype": "method",
            "name": "recordIdToIndex",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "index of record or -1 if not found",
                "type": "Number"
            },
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditDataSource.js",
            "line": 1168,
            "description": "Merges edits into data and returns result.",
            "itemtype": "method",
            "name": "_defRequestFn",
            "access": "protected",
            "tagname": "",
            "class": "DataSource.BulkEdit",
            "module": "gallery-bulkedit",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 37,
            "itemtype": "attribute",
            "name": "ds",
            "type": "{DataSource.BulkEdit}",
            "required": 1,
            "writeonce": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 52,
            "description": "Configuration for each field: type (input|select|textarea), label,\nvalidation (css, regex, msg, fn; see\ngallery-formmgr-css-validation).  Derived classes can require\nadditional keys.",
            "itemtype": "attribute",
            "name": "fields",
            "type": "{Object}",
            "required": 1,
            "writeonce": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 69,
            "description": "Paginator for switching between pages of records.  BulkEditor\nexpects it to be configured to display ValidationPageLinks, so the\nuser can see which pages have errors that need to be fixed.",
            "itemtype": "attribute",
            "name": "paginator",
            "type": "{Paginator}",
            "writeonce": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 87,
            "description": "Extra key/value pairs to pass in the DataSource request.",
            "itemtype": "attribute",
            "name": "requestExtra",
            "type": "{Object}",
            "writeonce": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 101,
            "description": "CSS class used to temporarily highlight a record.",
            "itemtype": "attribute",
            "name": "pingClass",
            "type": "{String}",
            "default": "\"yui3-bulkedit-ping\"",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 114,
            "description": "Duration in seconds that pingClass is applied to a record.",
            "itemtype": "attribute",
            "name": "pingTimeout",
            "type": "{Number}",
            "default": "2",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 128,
            "description": "The number of checkboxes in each column of a checkboxMultiselect field.",
            "itemtype": "property",
            "name": "checkbox_multiselect_column_height",
            "type": "{Number}",
            "static": 1,
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 137,
            "itemtype": "event",
            "name": "notifyErrors",
            "description": "Fired when widget-level validation messages need to be displayed.",
            "params": [
                {
                    "name": "msgs",
                    "description": "the messages to display",
                    "type": "Array"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 142,
            "itemtype": "event",
            "name": "clearErrorNotification",
            "description": "Fired when widget-level validation messages should be cleared.",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 146,
            "itemtype": "event",
            "name": "pageRendered",
            "description": "Fired after the editor has rendered a page.",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 150,
            "itemtype": "event",
            "name": "recordVisible",
            "description": "Fired after showRecord*() succeeds, including switching pages.",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 228,
            "description": "Attaches events to the container.",
            "itemtype": "method",
            "name": "_attachEvents",
            "params": [
                {
                    "name": "container",
                    "description": "node to which events should be attached",
                    "type": "Node"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 241,
            "itemtype": "method",
            "name": "_destroyOnRender",
            "params": [
                {
                    "name": "o",
                    "description": "object to destroy when BulkEditor is re-rendered",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 251,
            "description": "Reloads the current page of records.  This will erase any changes\nunsaved changes!",
            "itemtype": "method",
            "name": "reload",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 308,
            "description": "Save the modified values from the current page of records.",
            "itemtype": "method",
            "name": "saveChanges",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 356,
            "description": "Retrieve *all* the data.  Do not call this if you use server-side\npagination.",
            "itemtype": "method",
            "name": "getAllValues",
            "params": [
                {
                    "name": "callback",
                    "description": "callback object which will be invoked by DataSource",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 380,
            "itemtype": "method",
            "name": "getChanges",
            "return": {
                "description": "map of all changed values, keyed by record id",
                "type": "Object"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 389,
            "description": "<p>Insert a new record.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "insertRecord",
            "params": [
                {
                    "name": "index",
                    "description": "insertion index",
                    "type": "Number"
                },
                {
                    "name": "record",
                    "description": "record to insert or id of record to clone",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "the new record's id",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 413,
            "description": "<p>Remove a record.  There is no simple way to un-remove a record,\nso if you need that functionality, you may want to use highlighting\nto indicate removed records instead.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "removeRecord",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if the record was successfully removed",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 444,
            "description": "<p>Restore a removed record.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "restoreRecord",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the restored record's index or -1 if record id is not found",
                "type": "Int"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 465,
            "description": "<p>Show a record.  Do not call this if you use server-side\npagination.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "showRecord",
            "params": [
                {
                    "name": "record_id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the newly visible record's index or -1 if record id is not found",
                "type": "Int"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 487,
            "description": "<p>Hide a record.  Do not call this if you use server-side\npagination.</p>\n\n<p>You must `reload` the widget after calling this function!</p>",
            "itemtype": "method",
            "name": "hideRecord",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "true if record is now hidden",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 517,
            "itemtype": "method",
            "name": "getFieldConfig",
            "params": [
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "field configuration",
                "type": "Object"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 528,
            "itemtype": "method",
            "name": "getRecordContainerId",
            "params": [
                {
                    "name": "record",
                    "description": "record id or record object",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "id of DOM element containing the record's input elements",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 546,
            "itemtype": "method",
            "name": "getFieldId",
            "params": [
                {
                    "name": "record",
                    "description": "record id or record object",
                    "type": "String|Object"
                },
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "id of DOM element containing the field's input element",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 559,
            "itemtype": "method",
            "name": "getRecordAndFieldKey",
            "params": [
                {
                    "name": "key",
                    "description": "field key or field input element",
                    "type": "String|Node"
                }
            ],
            "return": {
                "description": "object containing record and field_key",
                "type": "Object"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 574,
            "itemtype": "method",
            "name": "getRecordId",
            "params": [
                {
                    "name": "obj",
                    "description": "record object, record container, or any node inside record container",
                    "type": "Object|Node"
                }
            ],
            "return": {
                "description": "record id",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 598,
            "itemtype": "method",
            "name": "getRecordContainer",
            "params": [
                {
                    "name": "record",
                    "description": "record id, record object, record container, or any node inside record container",
                    "type": "String|Object|Node"
                }
            ],
            "return": {
                "description": "node containing rendered record",
                "type": "Node"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 622,
            "itemtype": "method",
            "name": "getFieldContainer",
            "params": [
                {
                    "name": "record",
                    "description": "record id, record object, record container, or any node inside record container",
                    "type": "String|Object|Node"
                },
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "node containing rendered field",
                "type": "Node"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 636,
            "itemtype": "method",
            "name": "getFieldElement",
            "params": [
                {
                    "name": "record",
                    "description": "record id, record object, record container, or any node inside record container",
                    "type": "String|Object|Node"
                },
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "field's input element",
                "type": "Node"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 653,
            "description": "Paginate and/or scroll to make the specified record visible.  Record\nis pinged to help the user find it.",
            "itemtype": "method",
            "name": "showRecordIndex",
            "params": [
                {
                    "name": "index",
                    "description": "record index",
                    "type": "Number"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 686,
            "description": "Paginate and/or scroll to make the specified record visible.  Record\nis pinged to help the user find it.",
            "itemtype": "method",
            "name": "showRecordId",
            "params": [
                {
                    "name": "id",
                    "description": "record id",
                    "type": "Number"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 703,
            "description": "Apply a class to the DOM element containing the record for a short\nwhile.  Your CSS can use this class to highlight the record in some\nway.",
            "itemtype": "method",
            "name": "pingRecord",
            "params": [
                {
                    "name": "record",
                    "description": "record id, record object, record container, or any node inside record container",
                    "type": "String|Object|Node"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 729,
            "description": "Render the current page of records.",
            "itemtype": "method",
            "name": "_render",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "response",
                    "description": "response from data source",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 769,
            "description": "Derived class should override to create a structure for the records.",
            "itemtype": "method",
            "name": "_renderContainer",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "",
                    "type": "Node"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 782,
            "description": "Derived class must override to create a container for the record.",
            "itemtype": "method",
            "name": "_renderRecordContainer",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "record",
                    "description": "record data",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 797,
            "description": "Derived class can override if it needs to do more than just call\n_renderField() for each field.",
            "itemtype": "method",
            "name": "_renderRecord",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "record container",
                    "type": "Node"
                },
                {
                    "name": "record",
                    "description": "record data",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 824,
            "description": "If _renderRecord is not overridden, derived class must override this\nfunction to render the field.",
            "itemtype": "method",
            "name": "_renderField",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "\n\tcontainer {Node} record container,\n\tkey {String} field key,\n\tvalue {Mixed} field value,\n\tfield {Object} field configuration,\n\trecord {Object} record data",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 842,
            "description": "Update the paginator to match the data source meta information.",
            "itemtype": "method",
            "name": "_updatePaginator",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "response",
                    "description": "response from DataSource",
                    "type": "Object"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 858,
            "description": "Clear errors received from the server.  This clears all displayed\nmessages.",
            "itemtype": "method",
            "name": "clearServerErrors",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 889,
            "description": "Set page level, record level, and field level errors received from\nthe server.  A message can be either a string (assumed to be an\nerror) or an object providing msg and type, where type can be\n'error', 'warn', 'info', or 'success'.",
            "itemtype": "method",
            "name": "setServerErrors",
            "params": [
                {
                    "name": "page_errors",
                    "description": "list of page-level error messages",
                    "type": "Array"
                },
                {
                    "name": "record_field_errors",
                    "description": "list of objects *in record display order*,\n\t\teach of which defines id (String), recordError (message),\n\t\tand fieldErrors (map of field keys to error messages)",
                    "type": "Array"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 932,
            "description": "Update paginator to show which pages have errors.",
            "itemtype": "method",
            "name": "_updatePageStatus",
            "access": "protected",
            "tagname": "",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 996,
            "description": "Validate the visible values (if using server-side pagination) or all\nthe values (if using client-side pagination or no pagination).",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "true if all checked values are acceptable",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1043,
            "description": "Validate the visible values.",
            "itemtype": "method",
            "name": "_validateVisibleFields",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "container",
                    "description": "if null, uses contentBox",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "true if all checked values are acceptable",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1102,
            "description": "Validate the given elements.",
            "itemtype": "method",
            "name": "_validateElements",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "nodes",
                    "description": "",
                    "type": "NodeList"
                }
            ],
            "return": {
                "description": "true if all checked values are acceptable",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1192,
            "description": "If the data is stored locally and we paginate, validate all of it\nand mark the pages that have invalid values.",
            "itemtype": "method",
            "name": "_validateAllPages",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "true if all checked values are acceptable",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1273,
            "description": "Clear all displayed messages.",
            "itemtype": "method",
            "name": "_clearValidationMessages",
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1293,
            "description": "Display a message for the specified field.",
            "itemtype": "method",
            "name": "displayFieldMessage",
            "params": [
                {
                    "name": "e",
                    "description": "field input element",
                    "type": "Node"
                },
                {
                    "name": "msg",
                    "description": "message to display",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "message type:  error, warn, info, success",
                    "type": "String"
                },
                {
                    "name": "scroll",
                    "description": "whether or not to scroll to the field",
                    "type": "Boolean"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1338,
            "description": "Display a message for the specified record.",
            "itemtype": "method",
            "name": "displayRecordMessage",
            "params": [
                {
                    "name": "id",
                    "description": "record id",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "message to display",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "message type:  error, warn, info, success",
                    "type": "String"
                },
                {
                    "name": "scroll",
                    "description": "whether or not to scroll to the field",
                    "type": "Boolean"
                }
            ],
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1380,
            "itemtype": "method",
            "name": "_getElementStatus",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "n",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "r",
                    "description": "",
                    "type": "RegExp"
                }
            ],
            "return": {
                "description": "status or false",
                "type": "Mixed"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1395,
            "description": "Update the status of the node, if the new status has higher precedence.",
            "itemtype": "method",
            "name": "_updateRecordStatus",
            "params": [
                {
                    "name": "bd",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "type",
                    "description": "new status",
                    "type": "String"
                },
                {
                    "name": "p",
                    "description": "pattern for extracting status",
                    "type": "String"
                },
                {
                    "name": "r",
                    "description": "regex for extracting status",
                    "type": "RegExpr"
                },
                {
                    "name": "prefix",
                    "description": "status prefix",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if status was modified",
                "type": "Boolean"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1433,
            "itemtype": "property",
            "name": "Y.BulkEditor.error_msg_markup",
            "type": "{String}",
            "static": 1,
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1443,
            "itemtype": "method",
            "name": "labelMarkup",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "\n\tkey {String} field key,\n\tvalue {Mixed} field value,\n\tfield {Object} field configuration,\n\trecord {Object} record data",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "markup for the label of the specified field",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1464,
            "description": "Map of field type (input,select,textarea) to function that generates the\nrequired markup.  You can add additional entries.  Each function takes a\nsingle argument: an object defining\n\tkey {String} field key,\n\tvalue {Mixed} field value,\n\tfield {Object} field configuration,\n\trecord {Object} record data",
            "itemtype": "property",
            "name": "Y.BulkEditor.markup",
            "type": "{Object}",
            "static": 1,
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/BulkEditor.js",
            "line": 1600,
            "itemtype": "method",
            "name": "fieldMarkup",
            "static": 1,
            "params": [
                {
                    "name": "key",
                    "description": "field key",
                    "type": "String"
                },
                {
                    "name": "record",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "markup for the specified field",
                "type": "String"
            },
            "class": "BulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 23,
            "description": "Configuration for each column: key, label, formatter.",
            "itemtype": "attribute",
            "name": "columns",
            "type": "{Array}",
            "required": 1,
            "writeonce": "",
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 37,
            "description": "<p>Array of event delegations that will be attached to the container\nvia Y.delegate().  Each item is an object defining type, nodes, fn.\nThe function will be called in the context of the BulkEditor\ninstance.</p>\n\n<p>Attaching events to the container before the table is created does\nnot work in all browsers.</p>",
            "itemtype": "attribute",
            "name": "events",
            "type": "{Array}",
            "writeonce": "",
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 71,
            "description": "Renders an input element in the cell.",
            "itemtype": "method",
            "name": "inputFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 84,
            "description": "Renders a textarea element in the cell.",
            "itemtype": "method",
            "name": "textareaFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 97,
            "description": "Renders a select element in the cell.",
            "itemtype": "method",
            "name": "selectFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 110,
            "description": "Renders a checkbox element in the cell.",
            "itemtype": "method",
            "name": "checkboxFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 123,
            "description": "Renders a set of checkboxes for multiselect in the cell.",
            "itemtype": "method",
            "name": "checkboxMultiselectFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 136,
            "description": "Renders a multi-value input for multiselect in the cell.",
            "itemtype": "method",
            "name": "autocompleteInputMultiselectFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell, key, value, field, column, record",
                    "type": "Object"
                }
            ],
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-bulkedit/js/HTMLTableBulkEditor.js",
            "line": 149,
            "description": "Map of field type to cell `formatter` and container `css`.",
            "itemtype": "property",
            "name": "Y.HTMLTableBulkEditor.defaults",
            "type": "{Object}",
            "static": 1,
            "class": "HTMLTableBulkEditor",
            "module": "gallery-bulkedit"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 28,
            "description": "CSS class to apply to the overlay.",
            "itemtype": "attribute",
            "name": "css",
            "type": "{String}",
            "default": "\"yui3-component-busy\"",
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 79,
            "itemtype": "method",
            "name": "isVisible",
            "return": {
                "description": "true if the overlay is visible",
                "type": "Boolean"
            },
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 88,
            "description": "Show the overlay.",
            "itemtype": "method",
            "name": "show",
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 98,
            "description": "Hide the overlay.",
            "itemtype": "method",
            "name": "hide",
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 108,
            "description": "Toggle the visibility of the overlay.",
            "itemtype": "method",
            "name": "toggleVisible",
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 118,
            "description": "Set the visibility of the overlay.",
            "itemtype": "method",
            "name": "setVisible",
            "params": [
                {
                    "name": "visible",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-busyoverlay/js/BusyOverlay.js",
            "line": 154,
            "itemtype": "method",
            "name": "getTargetNode",
            "return": {
                "description": "node to overlay",
                "type": "Node"
            },
            "class": "Plugin.BusyOverlay",
            "module": "gallery-busyoverlay",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 54,
            "description": "Get an attribute.  This accepts all attributes of the context and\nthe special name \"pixelAlign\".",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "name",
                    "description": "the attribute name",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the attribute value",
                "type": "Mixed"
            },
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 75,
            "description": "Set an attribute.  This accepts all attributes of the context and\nthe special name \"pixelAlign\".",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "name",
                    "description": "the attribute name",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the attribute value",
                    "type": "Mixed"
                }
            ],
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 105,
            "description": "Move relative to the current pen location (set via moveTo or move).\nThis only works when the transformation matrix is constant!",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "dx",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "dy",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 125,
            "description": "Move relative to the current pen location.\nThis only works when the transformation matrix is constant!",
            "itemtype": "method",
            "name": "line",
            "params": [
                {
                    "name": "dx",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "dy",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 164,
            "description": "Define a rectangle with rounded corners.  You must call stroke(),\nfill(), etc. afterwards.",
            "itemtype": "method",
            "name": "roundedRect",
            "params": [
                {
                    "name": "top",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "radius",
                    "description": "radius of rounded corners",
                    "type": "Int"
                }
            ],
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-canvas/js/Context2d.js",
            "line": 202,
            "description": "Draw a polygon from a set of deltas.",
            "itemtype": "method",
            "name": "poly",
            "params": [
                {
                    "name": "list",
                    "description": "List of deltas (dx,dy).  You can omit values that are zero.",
                    "type": "Array"
                }
            ],
            "class": "Canvas.Context2d",
            "module": "gallery-canvas",
            "namespace": "Canvas"
        },
        {
            "file": "src/gallery-checkboxgroups/js/AtLeastOneCheckboxGroup.js",
            "line": 79,
            "itemtype": "method",
            "name": "enforceConstraints",
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes",
                    "type": "String|Object|Array"
                },
                {
                    "name": "index",
                    "description": "The index of the checkbox that changed",
                    "type": "Int"
                }
            ],
            "class": "AtLeastOneCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/AtMostOneCheckboxGroup.js",
            "line": 23,
            "itemtype": "method",
            "name": "enforceConstraints",
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes",
                    "type": "String|Object|Array"
                },
                {
                    "name": "index",
                    "description": "The index of the checkbox that changed",
                    "type": "Int"
                }
            ],
            "class": "AtMostOneCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 39,
            "itemtype": "method",
            "name": "getCheckboxList",
            "return": {
                "description": "List of managed checkboxes",
                "type": "NodeList"
            },
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 48,
            "description": "Same functionality as <code>Array.splice()</code>.  Operates on the\nlist of managed checkboxes.",
            "itemtype": "method",
            "name": "splice",
            "params": [
                {
                    "name": "start",
                    "description": "Insertion index",
                    "type": "Int"
                },
                {
                    "name": "delete_count",
                    "description": "Number of items to remove, starting from <code>start</code>",
                    "type": "Int"
                },
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes to insert at <code>start</code>",
                    "type": "String|Node|NodeList"
                }
            ],
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 94,
            "description": "Call this if you modify the checkbox programmatically, since that\nwill not fire a click event.",
            "itemtype": "method",
            "name": "checkboxChanged",
            "params": [
                {
                    "name": "cb",
                    "description": "checkbox that was modified",
                    "type": "Node|String"
                }
            ],
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 121,
            "description": "Derived classes must override this function to implement the desired behavior.",
            "itemtype": "method",
            "name": "enforceConstraints",
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes",
                    "type": "String|Object|Array"
                },
                {
                    "name": "index",
                    "description": "The index of the checkbox that changed",
                    "type": "Int"
                }
            ],
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 134,
            "itemtype": "method",
            "name": "allChecked",
            "return": {
                "description": "<code>true</code> if all checkboxes are checked",
                "type": "Boolean"
            },
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 153,
            "itemtype": "method",
            "name": "allUnchecked",
            "return": {
                "description": "<code>true</code> if all checkboxes are unchecked",
                "type": "Boolean"
            },
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/CheckboxGroup.js",
            "line": 171,
            "itemtype": "method",
            "name": "allDisabled",
            "return": {
                "description": "<code>true</code> if all checkboxes are disabled",
                "type": "Boolean"
            },
            "class": "CheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/EnableIfAnyCheckboxGroup.js",
            "line": 26,
            "itemtype": "method",
            "name": "enforceConstraints",
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes",
                    "type": "String|Object|Array"
                },
                {
                    "name": "index",
                    "description": "The index of the checkbox that changed",
                    "type": "Int"
                }
            ],
            "class": "EnableIfAnyCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "line": 44,
            "itemtype": "method",
            "name": "getSelectAllCheckbox",
            "return": {
                "description": "checkbox that controls \"select all\"",
                "type": "Node"
            },
            "class": "SelectAllCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "line": 53,
            "description": "Toggle the setting of the \"select all\" checkbox.",
            "itemtype": "method",
            "name": "toggleSelectAll",
            "class": "SelectAllCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-checkboxgroups/js/SelectAllCheckboxGroup.js",
            "line": 64,
            "itemtype": "method",
            "name": "enforceConstraints",
            "params": [
                {
                    "name": "cb_list",
                    "description": "The list of checkboxes",
                    "type": "String|Object|Array"
                },
                {
                    "name": "index",
                    "description": "The index of the checkbox that changed",
                    "type": "Int"
                }
            ],
            "class": "SelectAllCheckboxGroup",
            "module": "gallery-checkboxgroups"
        },
        {
            "file": "src/gallery-chipper/js/Chipper.js",
            "line": 43,
            "description": "Throw objects into the chipper.  If an object does not implement\ndestroy(), it is ignored.",
            "itemtype": "method",
            "name": "destroy",
            "static": 1,
            "params": [
                {
                    "name": "objs",
                    "description": "The object(s) to destroy.",
                    "type": "Object/Array"
                }
            ],
            "class": "Chipper",
            "module": "gallery-chipper"
        },
        {
            "file": "src/gallery-collapse-toggle/js/CollapseToggle.js",
            "line": 29,
            "description": "State of the widget.",
            "itemtype": "attribute",
            "name": "collapsed",
            "type": "{Boolean}",
            "class": "CollapseToggle",
            "module": "gallery-collapse-toggle"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 26,
            "description": "Zero.",
            "itemtype": "property",
            "name": "ZERO",
            "type": "{ComplexNumber}",
            "static": 1,
            "final": 1,
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 36,
            "description": "Square root of -1.",
            "itemtype": "property",
            "name": "I",
            "type": "{ComplexNumber}",
            "static": 1,
            "final": 1,
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 46,
            "itemtype": "method",
            "name": "isComplexNumber",
            "static": 1,
            "return": {
                "description": "true if the argument is a ComplexNumber",
                "type": "Boolean"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 57,
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "return": {
                "description": "sum of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 78,
            "itemtype": "method",
            "name": "addReciprocals",
            "static": 1,
            "return": {
                "description": "sum of the reciprocals of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 101,
            "itemtype": "method",
            "name": "parallel",
            "static": 1,
            "return": {
                "description": "net value of N impedances in parallel (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 111,
            "itemtype": "method",
            "name": "subtract",
            "static": 1,
            "params": [
                {
                    "name": "v1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "v1-v2",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 140,
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "return": {
                "description": "product of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 161,
            "itemtype": "method",
            "name": "divide",
            "static": 1,
            "params": [
                {
                    "name": "v1",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "v1/v2",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 194,
            "itemtype": "method",
            "name": "negative",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "negative of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 212,
            "itemtype": "method",
            "name": "abs",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "absolute value (magnitude) of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 230,
            "itemtype": "method",
            "name": "phase",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "phase of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 248,
            "itemtype": "method",
            "name": "conjugate",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "complex conjugate of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 266,
            "itemtype": "method",
            "name": "rotate",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "a",
                    "description": "angle in radians",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "phase of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 278,
            "itemtype": "method",
            "name": "acosh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic cosine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 300,
            "itemtype": "method",
            "name": "asinh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic sine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 321,
            "itemtype": "method",
            "name": "atanh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic tangent of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 342,
            "itemtype": "method",
            "name": "cos",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "cosine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 362,
            "itemtype": "method",
            "name": "cosh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic cosine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 383,
            "itemtype": "method",
            "name": "exp",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "e raised to the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 403,
            "itemtype": "method",
            "name": "log",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "natural logarithm of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 421,
            "itemtype": "method",
            "name": "pow",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "value",
                    "type": "Number"
                },
                {
                    "name": "e",
                    "description": "exponent",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "value raised to the exponent",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 449,
            "itemtype": "method",
            "name": "sin",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "sine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 469,
            "itemtype": "method",
            "name": "sinh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic sine of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 490,
            "itemtype": "method",
            "name": "sqrt",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "square root of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 504,
            "itemtype": "method",
            "name": "tan",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "tangent of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexMath.js",
            "line": 522,
            "itemtype": "method",
            "name": "tanh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic tangent of the argument",
                "type": "Number"
            },
            "class": "ComplexMath",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 21,
            "description": "Construct a ComplexNumber from polar coordinates.",
            "itemtype": "method",
            "name": "fromPolar",
            "static": 1,
            "params": [
                {
                    "name": "magnitude",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "phase",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "ComplexNumber"
            },
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 39,
            "itemtype": "method",
            "name": "real",
            "return": {
                "description": "real component",
                "type": "Number"
            },
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 48,
            "itemtype": "method",
            "name": "imag",
            "return": {
                "description": "imaginary component",
                "type": "Number"
            },
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 57,
            "itemtype": "method",
            "name": "magnitude",
            "return": {
                "description": "length of the vector in the complex plane",
                "type": "Number"
            },
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 66,
            "itemtype": "method",
            "name": "phase",
            "return": {
                "description": "angle of the vector (in radians) in the complex plane relative to the positive real axis",
                "type": "Number"
            },
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 75,
            "description": "Equivalent of += operator.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 99,
            "description": "Equivalent of -= operator.",
            "itemtype": "method",
            "name": "subtract",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 123,
            "description": "Equivalent of *= operator.",
            "itemtype": "method",
            "name": "multiply",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 151,
            "description": "Equivalent of /= operator.",
            "itemtype": "method",
            "name": "divide",
            "chainable": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 177,
            "description": "Equivalent of unary minus operator.",
            "itemtype": "method",
            "name": "negate",
            "chainable": 1,
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 193,
            "description": "Negates the imaginary part.",
            "itemtype": "method",
            "name": "conjugate",
            "chainable": 1,
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-complexnumber/js/ComplexNumber.js",
            "line": 208,
            "description": "Rotates the number around the origin by the specified angle in radians.",
            "itemtype": "method",
            "name": "rotate",
            "chainable": 1,
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "ComplexNumber",
            "module": "gallery-complexnumber"
        },
        {
            "file": "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js",
            "line": 26,
            "description": "<p>The function that will be called to retrieve the data.  This\nfunction is called with the DataSource as the scope and arguments\n(callback,request,ds,e).  The function must invoke callback, passing\n(error,response).</p>",
            "itemtype": "attribute",
            "name": "source",
            "type": "{Function}",
            "class": "DataSource.AsyncFunction",
            "module": "gallery-datasource-async-function",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-datasource-async-function/js/AsyncFunctionDataSource.js",
            "line": 43,
            "description": "Passes request to source. Fires <code>data</code> event when\nresponse is received asynchronously.",
            "itemtype": "method",
            "name": "_defRequestFn",
            "params": [
                {
                    "name": "e",
                    "description": "Event Facade",
                    "type": "Event.Facade",
                    "props": [
                        {
                            "name": "tId",
                            "description": "Unique transaction ID",
                            "type": "Number"
                        },
                        {
                            "name": "request",
                            "description": "The request",
                            "type": "Object"
                        },
                        {
                            "name": "callback",
                            "description": "The callback object",
                            "type": "Object",
                            "props": [
                                {
                                    "name": "success",
                                    "description": "Success handler",
                                    "type": "Function"
                                },
                                {
                                    "name": "failure",
                                    "description": "Failure handler",
                                    "type": "Function"
                                }
                            ]
                        },
                        {
                            "name": "cfg",
                            "description": "Configuration object",
                            "type": "Object"
                        }
                    ]
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "DataSource.AsyncFunction",
            "module": "gallery-datasource-async-function",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-datatable-datasource-busy/js/datasource-busy.js",
            "line": 29,
            "description": "Number of milliseconds to wait before showing the busy indicator.",
            "itemtype": "attribute",
            "name": "showDelay",
            "type": "{Number}",
            "class": "Plugin.DataTableDataSourceBusy",
            "module": "gallery-datatable-datasource-busy",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 28,
            "itemtype": "attribute",
            "name": "paginator",
            "type": "{Paginator}",
            "required": 1,
            "class": "Plugin.DataTablePaginator",
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 41,
            "description": "Function that builds the `request` data for\n`table.datasource.load()`.  If this is not provided, `sendRequest`\nis required.",
            "itemtype": "attribute",
            "name": "buildRequest",
            "type": "{Function}",
            "class": "Plugin.DataTablePaginator",
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 54,
            "description": "Function that invokes `table.datasource.load()`.  If this is not\nprovided, `buildRequest` is required.",
            "itemtype": "attribute",
            "name": "sendRequest",
            "type": "{Function}",
            "class": "Plugin.DataTablePaginator",
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 66,
            "description": "OGNL expression telling how to extract the total number of records\nfrom the received data, e.g., `.meta.totalRecords`.",
            "itemtype": "attribute",
            "name": "totalRecordsExpr",
            "type": "{String}",
            "class": "Plugin.DataTablePaginator",
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-paginator/js/paginator.js",
            "line": 212,
            "description": "Sends a request to the datatable to load the current page.",
            "itemtype": "method",
            "name": "sendRequest",
            "class": "Plugin.DataTablePaginator",
            "module": "gallery-datatable-paginator",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 33,
            "description": "String template or function that returns a string.",
            "itemtype": "attribute",
            "name": "template",
            "type": "{String|Function}",
            "required": 1,
            "class": "Plugin.DataTableRowExpansion",
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 49,
            "description": "Id of a column (usually not displayed) that yields a\nunique value for each record.  Used to maintain the twistdown state\nwhen paginating.",
            "itemtype": "attribute",
            "name": "uniqueIdKey",
            "type": "{String}",
            "required": 1,
            "class": "Plugin.DataTableRowExpansion",
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 65,
            "description": "The key used to indicate which column contains the twistdown.",
            "itemtype": "property",
            "name": "Y.Plugin.DataTableRowExpansion.column_key",
            "type": "{String}",
            "value": "\"row-expander\"",
            "class": "Plugin.DataTableRowExpansion",
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 74,
            "description": "The class added to rows created by this plugin.",
            "itemtype": "property",
            "name": "Y.Plugin.DataTableRowExpansion.row_class",
            "type": "{String}",
            "value": "\"row-expansion\"",
            "class": "Plugin.DataTableRowExpansion",
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-row-expansion/js/row-expansion.js",
            "line": 83,
            "description": "The key used to deactivate row expansion for individual rows.",
            "itemtype": "property",
            "name": "Y.RowExpansion.do_not_open_key",
            "type": "{boolean}",
            "value": "\"_row_expansion_do_not_open\"",
            "class": "Plugin.DataTableRowExpansion",
            "module": "gallery-datatable-row-expansion",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 29,
            "description": "Id of a column (usually not displayed) that yields a unique value\nfor each record.  The saved state is indexed by the value of this\ncolumn.",
            "itemtype": "attribute",
            "name": "uniqueIdKey",
            "type": "{String}",
            "required": 1,
            "class": "Plugin.DataTableState",
            "module": "gallery-datatable-state",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 43,
            "description": "List of objects specifying the values to be saved before\nthe table is re-rendered.  Each object must define:\n<dl>\n<dt>column</dt>\n<dd>the column key</dd>\n<dt>node or widget</dt>\n<dd>CSS selector to find either the node or the widget container inside a cell</dd>\n<dt>key</dt>\n<dd>the value to pass to get/set</dd>\n<dt>temp</dt>\n<dd>true if the state should be cleared when paginating</dd>\n</dl>\nIf a value should not be maintained when paginating, specify temp:true.",
            "itemtype": "attribute",
            "name": "save",
            "type": "{Array}",
            "required": 1,
            "class": "Plugin.DataTableState",
            "module": "gallery-datatable-state",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 68,
            "description": "Paginator that triggers clearing of temporary state.  If\nthis is not specified, temp:true will have no effect in the \"save\"\nconfiguration.",
            "itemtype": "attribute",
            "name": "paginator",
            "type": "{Paginator}",
            "class": "Plugin.DataTableState",
            "module": "gallery-datatable-state",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datatable-state/js/state.js",
            "line": 285,
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "state for each row, indexed by uniqueIdKey and column key",
                "type": "Object"
            },
            "class": "Plugin.DataTableState",
            "module": "gallery-datatable-state",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 47,
            "description": "Date input field to use.  Can be augmented with a Calendar via\ngallery-input-calendar-sync.",
            "itemtype": "attribute",
            "name": "dateInput",
            "type": "{Node|String}",
            "required": 1,
            "writeonce": "",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 62,
            "description": "Time input field to use.  Can be enhanced with gallery-timepicker.",
            "itemtype": "attribute",
            "name": "timeInput",
            "type": "{Node|String}",
            "writeonce": "",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 75,
            "description": "Set to false to require a date to be entered.  If dateInput is\nconfigured with Y.InputCalendarSync, allowBlank will be copied from\nthere.",
            "itemtype": "attribute",
            "name": "allowBlank",
            "type": "{Boolean}",
            "default": "true",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 90,
            "description": "Default date and time, used during initialization and by resetDateTime().",
            "itemtype": "attribute",
            "name": "defaultDateTime",
            "type": "{Object}",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 101,
            "description": "Minimum date and time.",
            "itemtype": "attribute",
            "name": "minDateTime",
            "type": "{Object}",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 112,
            "description": "Maximum date and time.",
            "itemtype": "attribute",
            "name": "minDateTime",
            "type": "{Object}",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 123,
            "description": "Time value to use when no time is specified as part of a date.",
            "itemtype": "attribute",
            "name": "blankTime",
            "type": "{Object}",
            "default": "{ hour:0, minute:0 }",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 141,
            "description": "Blackout ranges, specified as a list of objects, each defining start\nand end.  The data is overwritten, so this is a write-only value.",
            "itemtype": "attribute",
            "name": "blackout",
            "type": "{Array}",
            "default": "[]",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 241,
            "description": "The direction to push the selected date and time when the user\nselects a day with partial blackout.  The default value of zero\nmeans go to the nearest available time.",
            "itemtype": "attribute",
            "name": "blackoutSnapDirection",
            "type": "{-1,0,+1}",
            "default": "0",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 259,
            "description": "Duration of visual ping in milliseconds when the value of an input\nfield is modified because of a min/max or blackout restriction.  Set\nto zero to disable.",
            "itemtype": "attribute",
            "name": "pingDuration",
            "type": "{Number}",
            "default": "2000",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 274,
            "description": "CSS class applied to input field when it is pinged.",
            "itemtype": "attribute",
            "name": "pingClass",
            "type": "{String}",
            "default": "\"yui3-datetime-ping\"",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 288,
            "itemtype": "event",
            "name": "limitsEnforced",
            "description": "Fires after min/max and blackouts have been enforced.",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 779,
            "description": "Get the currently selected date and time.",
            "itemtype": "method",
            "name": "getDateTime",
            "return": {
                "description": "year,month,day,hour,minute,date,date_str,time_str",
                "type": "Object"
            },
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 819,
            "description": "Set the date and time.",
            "itemtype": "method",
            "name": "setDateTime",
            "params": [
                {
                    "name": "date_time",
                    "description": "date and time",
                    "type": "Object"
                }
            ],
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 840,
            "description": "Reset the date and time to the values in `defaultDateTime`.",
            "itemtype": "method",
            "name": "resetDateTime",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime/js/DateTime.js",
            "line": 864,
            "description": "Clear the date and time.",
            "itemtype": "method",
            "name": "clearDateTime",
            "class": "DateTime",
            "module": "gallery-datetime"
        },
        {
            "file": "src/gallery-datetime-range/js/DateTimeRange.js",
            "line": 35,
            "description": "Instance of `Y.DateTime` that stores the start time.  The min and\nmax dates and any blackout ranges must be configured on this object.",
            "itemtype": "attribute",
            "name": "startDateTime",
            "type": "{DateTime}",
            "required": 1,
            "writeonce": "",
            "class": "DateTimeRange",
            "module": "gallery-datetime-range"
        },
        {
            "file": "src/gallery-datetime-range/js/DateTimeRange.js",
            "line": 50,
            "description": "Instance of `Y.DateTime` that stores the end time.",
            "itemtype": "attribute",
            "name": "endDateTime",
            "type": "{DateTime}",
            "required": 1,
            "writeonce": "",
            "class": "DateTimeRange",
            "module": "gallery-datetime-range"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 31,
            "description": "Position of the year in a string representation of a date: 1,2,3",
            "itemtype": "property",
            "name": "YEAR_POSITION",
            "type": "{Number}",
            "default": "1",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 41,
            "description": "Position of the month in a string representation of a date: 1,2,3",
            "itemtype": "property",
            "name": "MONTH_POSITION",
            "type": "{Number}",
            "default": "2",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 51,
            "description": "Position of the day in a string representation of a date: 1,2,3",
            "itemtype": "property",
            "name": "DAY_POSITION",
            "type": "{Number}",
            "default": "3",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 61,
            "description": "Delimiter of fields in a string representation of a date.",
            "itemtype": "property",
            "name": "DATE_FIELD_DELIMITER",
            "type": "{String}",
            "default": "\"-\"",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 71,
            "description": "Delimiter of fields in a string representation of a time.",
            "itemtype": "property",
            "name": "TIME_FIELD_DELIMITER",
            "type": "{String}",
            "default": "\":\"",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 81,
            "description": "Antemeridian string.",
            "itemtype": "property",
            "name": "AM_STRING",
            "type": "{String}",
            "default": "\"AM\"",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 91,
            "description": "Postmeridian string.",
            "itemtype": "property",
            "name": "PM_STRING",
            "type": "{String}",
            "default": "\"PM\"",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 101,
            "description": "How hours should be displayed to the user by classes in the DateTime\nfamily: 12hr or 24hr.  (Internal values are always 24hr.)  This is\nglobal because your app should be consistent about how it displays\ntimes.",
            "itemtype": "property",
            "name": "CLOCK_DISPLAY_TYPE",
            "type": "{Number} 12 or 24",
            "default": "24",
            "static": 1,
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 114,
            "description": "Normalizes the given object by converting date\\_str into\nyear,month,day, converting time\\_str into hour,minute (or adding in\nhour,minute from default\\_time), and adding date (instanceof Date).\nIndividual fields take precedence over strings.\n\nIf input is a Date object, then the result contains a breakdown of\nthe values.",
            "itemtype": "method",
            "name": "normalize",
            "static": 1,
            "params": [
                {
                    "name": "input",
                    "description": "\n\tCan be specified either as instance of Date, a number specifying\n\tmilliseconds since midnight Jan 1, 1970, or as an object defining\n\tdate_str or year,month,day and (optional) either time_str or\n\thour,minute.",
                    "type": "Date|Number|Object"
                },
                {
                    "name": "default_time",
                    "description": "Default hour and minute to use if input only has date.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "normalized object defining date and time",
                "type": "Object"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 184,
            "description": "Format the date portion of a Date object.",
            "itemtype": "method",
            "name": "formatDate",
            "static": 1,
            "params": [
                {
                    "name": "date",
                    "description": "string (returned as-is), Date, milliseconds, or object specifying day,month,year",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "formatted date, using positions and delimiter",
                "type": "String"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 225,
            "description": "Inverse of formatDate().  Extracts year, month, and day from the\nstring.  The values are normalized to fall inside the default\nranges.",
            "itemtype": "method",
            "name": "parseDate",
            "static": 1,
            "params": [
                {
                    "name": "date",
                    "description": "string from DateTimeUtils.formatDate()",
                    "type": "String"
                }
            ],
            "return": {
                "description": "year,month,day, or null",
                "type": "Object"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 268,
            "description": "Utility for parsing a date string that is not formatted based on the\nY.DateTime configuration.",
            "itemtype": "method",
            "name": "parseDate",
            "static": 1,
            "params": [
                {
                    "name": "date",
                    "description": "string from DateTimeUtils.formatDate()",
                    "type": "String"
                },
                {
                    "name": "delimiater",
                    "description": "delimiter between the date fields",
                    "type": "String"
                },
                {
                    "name": "year_pos",
                    "description": "position of the year in the string representation: 1,2,3",
                    "type": "Number"
                },
                {
                    "name": "month_pos",
                    "description": "position of the month in the string representation: 1,2,3",
                    "type": "Number"
                },
                {
                    "name": "day_pos",
                    "description": "position of the day in the string representation: 1,2,3",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "normalized object defining date",
                "type": "Object"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 299,
            "description": "Format the time portion of a Date object.",
            "itemtype": "method",
            "name": "formatTime",
            "static": 1,
            "params": [
                {
                    "name": "time",
                    "description": "string (returned as-is), Date, milliseconds, or object specifying hour,minute",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "formatted time, using delimiter",
                "type": "String"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-datetime-utils/js/utils.js",
            "line": 358,
            "description": "Inverse of formatTime().  Extracts hour and minute from the string.\nThrows an error if hour is outside [0,23] or minute is outside\n[0,59].",
            "itemtype": "method",
            "name": "parseTime",
            "static": 1,
            "params": [
                {
                    "name": "time",
                    "description": "string from DateTimeUtils.formatTime()",
                    "type": "String"
                }
            ],
            "return": {
                "description": "hour,minute, or null",
                "type": "Object"
            },
            "class": "DateTimeUtils",
            "module": "gallery-datetime-utils"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 36,
            "itemtype": "method",
            "name": "emToPx",
            "static": 1,
            "params": [
                {
                    "name": "em_count",
                    "description": "the number of em's to convert (defaults to 1)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the size of one em in pixels",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 60,
            "itemtype": "method",
            "name": "totalWidth",
            "return": {
                "description": "the total width used by the element, including margin, border, and padding  (Margin is not included in offsetWidth.)",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 72,
            "itemtype": "method",
            "name": "totalHeight",
            "return": {
                "description": "the total height used by the element, including margin, border, and padding  (Margin is not included in offsetHeight.)",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 84,
            "itemtype": "method",
            "name": "insideWidth",
            "return": {
                "description": "the available width inside the widget.  (Padding is included in clientWidth.)",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 96,
            "itemtype": "method",
            "name": "insideHeight",
            "return": {
                "description": "the available height inside the widget.  (Padding is included in clientHeight.)",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 108,
            "itemtype": "method",
            "name": "horizMarginBorderPadding",
            "return": {
                "description": "the width of everything surrounding the element's content",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 122,
            "itemtype": "method",
            "name": "vertMarginBorderPadding",
            "return": {
                "description": "the height of everything surrounding the element's content",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-dimensions/js/Dimensions.js",
            "line": 136,
            "itemtype": "method",
            "name": "parseDimensionStyle",
            "params": [
                {
                    "name": "style",
                    "description": "the style to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the size of the style in pixels",
                "type": "Number"
            },
            "class": "Node~dimensions",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 13,
            "description": "The URL or the server-sent events.",
            "type": "String",
            "itemtype": "property",
            "name": "url",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 20,
            "description": "The current state of the object. Possible values are 0 for connecting,\n1 for connected, and 2 for disconnected.",
            "type": "int",
            "itemtype": "property",
            "name": "readyState",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 28,
            "description": "Object used to communicate with the server. May be an XHR or an\nEventSource.",
            "type": "XMLHttpRequest|EventSource",
            "itemtype": "property",
            "name": "_transport",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 45,
            "description": "Fires the error event. When this happens, the readyState\nmust first be set to 2 so that error handlers querying\nthis value receive the correct value.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "itemtype": "method",
            "name": "_fireErrorEvent",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 60,
            "description": "Fires the open event. When this happens, the readyState\nmust first be set to 1 so that event listeners querying\nthis value receive the correct value.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "itemtype": "method",
            "name": "_fireOpenEvent",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 78,
            "description": "Fires a message event. This might be either an event of\ntype message or a custom event as received from the event\nstream.",
            "params": [
                {
                    "name": "data",
                    "description": "An object containing the keys\n     type, data, lastEventId, and origin.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "itemtype": "method",
            "name": "_fireMessageEvent",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 109,
            "description": "Map the common EventSource events to custom\nYUI events. These are delayed with a timer\nto avoid race conditions and provide consistency\nbetween the native EventSource usage and the\nXHR-based event source events.",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 182,
            "description": "Initializes the EventSource object. Either creates an EventSource\ninstance or an XHR to mimic the functionality.",
            "itemtype": "method",
            "name": "_init",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 191,
            "description": "Keeps track of where in the response buffer to start\nevaluating new data. Only used when native EventSource\nis not available.",
            "type": "int",
            "itemtype": "property",
            "name": "_lastIndex",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 201,
            "description": "Keeps track of the last event ID received from the server.\nOnly used when native EventSource is not available.",
            "type": "variant",
            "itemtype": "property",
            "name": "_lastEventId",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 210,
            "description": "Tracks the last piece of data from the messages stream.",
            "type": "String",
            "itemtype": "property",
            "name": "_data",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 218,
            "description": "Tracks the last event name in the message stream.",
            "type": "String",
            "itemtype": "property",
            "name": "_eventName",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 309,
            "description": "Called when XHR readyState 4 occurs. Processes the response,\nthen reopens the connection to the server unless close()\nhas been called.",
            "itemtype": "method",
            "name": "_validateResponse",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 343,
            "description": "Updates the readyState property to 1 if it's still\nset at 0 and fires the open event.",
            "itemtype": "method",
            "name": "_signalOpen",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 356,
            "description": "Responsible for parsing and interpreting a line of data\nin the event stream source.",
            "params": [
                {
                    "name": "name",
                    "description": "The field name of the line.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The field value of the line.",
                    "type": "Variant"
                },
                {
                    "name": "secondPass",
                    "description": "(Optional) Indicates that this\n     is the second time the function was called for this\n     line. Needed to prevent infinite recursion.",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "_processDataLine",
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 424,
            "description": "Processes the data stream as server-sent events. Goes line by\nline looking for event information and fires the message\nevent where appropriate.",
            "params": [
                {
                    "name": "text",
                    "description": "The text to parse.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_processIncomingData",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 476,
            "description": "Fires the message event with appropriate data, but only if\nthere is actual data to share. This uses the stored\nevent name and data value to fire the appropriate event.",
            "return": {
                "description": "",
                "type": "Void"
            },
            "itemtype": "method",
            "name": "_fireMessageEvent",
            "access": "private",
            "tagname": "",
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-eventsource/js/eventsource.js",
            "line": 516,
            "description": "Permanently close the connection with the server.",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "ExpirationCache",
            "module": "gallery-dimensions"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 59,
            "description": "Retrieve a value.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the object to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the stored object, or undefined if the slot is empty",
                "type": "Mixed"
            },
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 88,
            "description": "Store a value.",
            "itemtype": "method",
            "name": "put",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "false if the key has already been used",
                "type": "Boolean"
            },
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 124,
            "description": "Store a value.",
            "itemtype": "method",
            "name": "replace",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the original value that was in the slot, or undefined if the slot is empty",
                "type": "Mixed"
            },
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 141,
            "description": "Remove an value.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value that was removed, or undefined if the slot was empty",
                "type": "Mixed"
            },
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 158,
            "description": "Remove all values.",
            "itemtype": "method",
            "name": "clear",
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 168,
            "description": "Remove all expired values.",
            "itemtype": "method",
            "name": "clean",
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-expiration-cache/js/ExpirationCache.js",
            "line": 178,
            "description": "This resets all the values.",
            "itemtype": "method",
            "name": "dumpStats",
            "return": {
                "description": "the current stats",
                "type": "Object"
            },
            "class": "ExpirationCache",
            "module": "gallery-expiration-cache"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 25,
            "description": "The id of the textarea form field.",
            "itemtype": "attribute",
            "name": "fieldId",
            "type": "{String}",
            "default": "Y.guid()",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 40,
            "description": "The name of the textarea form field.",
            "itemtype": "attribute",
            "name": "fieldName",
            "type": "{String}",
            "default": "\"\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 55,
            "description": "The FormManager to use when validating the constructed expression.",
            "itemtype": "attribute",
            "name": "formMgr",
            "type": "{Y.FormManager}",
            "default": "null",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 69,
            "description": "The QueryBuilder to help the user construct the expression.  The\nwidget must not be rendered.  For each variable type, the values of\nthe configured operations must be the pattern to be inserted into\nthe expression. {value} will be replaced by the value entered by the\nuser.",
            "itemtype": "attribute",
            "name": "queryBuilder",
            "type": "{Y.QueryBuilder}",
            "default": "null",
            "required": 1,
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 88,
            "description": "A map of QueryBuilder operators to objects defining\n{operator,pattern}.  This is needed if a variable type generates\nmultiple values, and the values must be combined with something\nother than AND.",
            "itemtype": "attribute",
            "name": "combinatorMap",
            "type": "{Object}",
            "default": "null",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 103,
            "description": "The label for the Insert Parentheses button.",
            "itemtype": "attribute",
            "name": "parenLabel",
            "type": "{String}",
            "default": "\"()\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 118,
            "description": "The label for the AND button.",
            "itemtype": "attribute",
            "name": "andLabel",
            "type": "{String}",
            "default": "\"AND\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 133,
            "description": "The label for the OR button.",
            "itemtype": "attribute",
            "name": "orLabel",
            "type": "{String}",
            "default": "\"OR\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 148,
            "description": "The label for the NOT button.",
            "itemtype": "attribute",
            "name": "notLabel",
            "type": "{String}",
            "default": "\"NOT\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 163,
            "description": "The label for the Clear button.",
            "itemtype": "attribute",
            "name": "clearLabel",
            "type": "{String}",
            "default": "\"Clear\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 178,
            "description": "The label for the Insert button.",
            "itemtype": "attribute",
            "name": "insertLabel",
            "type": "{String}",
            "default": "\"Insert\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 193,
            "description": "The label for the Reset button.",
            "itemtype": "attribute",
            "name": "resetLabel",
            "type": "{String}",
            "default": "\"Cancel\"",
            "writeonce": "",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 208,
            "description": "The error message for an unclosed parenthesis. <q>context</q> is\nreplaced by the portion of the expression that generated the error.",
            "itemtype": "attribute",
            "name": "tooManyParensError",
            "type": "{String}",
            "default": "'The expression contains an extra closing parenthesis at \"{context}\".'",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 222,
            "description": "The error message for an unmatched single quote.",
            "itemtype": "attribute",
            "name": "unmatchedSingleQuoteError",
            "type": "{String}",
            "default": "'The expression contains an unmatched single quote.'",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 235,
            "description": "The error message for an unclosed parenthesis.",
            "itemtype": "attribute",
            "name": "unclosedParenError",
            "type": "{String}",
            "default": "'The expression contains an unclosed parenthesis.'",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 248,
            "description": "The error message when the user forgets to select a variable for\ninsertion.",
            "itemtype": "attribute",
            "name": "noVariableSelectedError",
            "type": "{String}",
            "default": "'Please choose a variable.'",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 479,
            "description": "Clears the expression.",
            "itemtype": "method",
            "name": "clear",
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 490,
            "description": "Validate the expression.",
            "itemtype": "method",
            "name": "_validateExpression",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "<code>true</code> if the expression has balanced parens and single quotes",
                "type": "Boolean"
            },
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 564,
            "itemtype": "method",
            "name": "_field",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "markup for the textarea and basic buttons",
                "type": "String"
            },
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-exprbuilder/js/ExpressionBuilder.js",
            "line": 604,
            "itemtype": "method",
            "name": "_query",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "markup for the QueryBuilder",
                "type": "String"
            },
            "class": "ExpressionBuilder",
            "module": "gallery-exprbuilder"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 174,
            "description": "The CSS class which marks each row of the form.  Typically, each field\n(or a very tightly coupled set of fields) is placed in a separate row.",
            "itemtype": "property",
            "name": "row_marker_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 183,
            "description": "The CSS class which marks each field in a row of the form.  This enables\nmessaging when multiple fields are in a single row.",
            "itemtype": "property",
            "name": "field_marker_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 192,
            "description": "The CSS class which marks the container for the status message within a\nrow of the form.",
            "itemtype": "property",
            "name": "status_marker_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 201,
            "description": "The CSS class placed on <code>status_node</code> when it is empty.",
            "itemtype": "property",
            "name": "status_none_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 209,
            "description": "The CSS class placed on <code>status_node</code> when\n<code>displayFormMessage()</code> is called with\n<code>error=false</code>.",
            "itemtype": "property",
            "name": "status_success_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 219,
            "description": "The CSS class placed on <code>status_node</code> when\n<code>displayFormMessage()</code> is called with\n<code>error=true</code>.",
            "itemtype": "property",
            "name": "status_failure_class",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 229,
            "description": "The prefix for all CSS classes placed on a form row when pre-validation\nfails.  The full CSS class is formed by appending the value from\n`Y.FormManager.status_order`.",
            "itemtype": "property",
            "name": "row_status_prefix",
            "type": "{String}",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 273,
            "description": "Get the status of the given fieldset or form row.",
            "itemtype": "method",
            "name": "getElementStatus",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "The descriptor or DOM element.",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "The status (String) or <code>false</code>.",
                "type": "Mixed"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 451,
            "description": "<p>Exposed for use by Y.QueryBuilder</p>\n\n<p>Clear the message for the given field.</p>",
            "itemtype": "method",
            "name": "clearMessage",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "the field",
                    "type": "Element|Node"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 472,
            "description": "<p>Exposed for use by Y.QueryBuilder</p>\n\n<p>Display a message for the form row containing the specified element.\nThe message will only be displayed if no message with a higher\nprecedence is already visible. (see Y.FormManager.status_order)</p>",
            "itemtype": "method",
            "name": "displayMessage",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "msg",
                    "description": "The message",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The message type (see Y.FormManager.status_order)",
                    "type": "String"
                },
                {
                    "name": "had_messages",
                    "description": "`true` if the form already has messages displayed",
                    "type": "Boolean",
                    "optional": true
                },
                {
                    "name": "scroll",
                    "description": "`true` if the form row should be scrolled into view",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if the message was displayed, false if a higher precedence message was already there",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 549,
            "itemtype": "method",
            "name": "getForm",
            "return": {
                "description": "The form DOM element.",
                "type": "DOM"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 562,
            "itemtype": "method",
            "name": "hasFileInputs",
            "return": {
                "description": "<code>true</code> if the form contains file inputs.  These require special treatment when submitting via XHR.",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 571,
            "itemtype": "method",
            "name": "setStatusNode",
            "params": [
                {
                    "name": "node",
                    "description": "the node in which status should be displayed",
                    "type": "String|Y.Node"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 581,
            "description": "Set the default values for all form elements.",
            "itemtype": "method",
            "name": "setDefaultValues",
            "params": [
                {
                    "name": "default_value_map",
                    "description": "Mapping of form element names to values.",
                    "type": "Object|Model"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 598,
            "description": "Set the default values for a single form element.",
            "itemtype": "method",
            "name": "setDefaultValue",
            "params": [
                {
                    "name": "field_name",
                    "description": "The form element name.",
                    "type": "String"
                },
                {
                    "name": "default_value",
                    "description": "The default value.",
                    "type": "String|Int|Float"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 612,
            "description": "Store the current form values in <code>default_value_map</code>.",
            "itemtype": "method",
            "name": "saveCurrentValuesAsDefault",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 628,
            "description": "Set the validation function for a form element.",
            "itemtype": "method",
            "name": "setFunction",
            "params": [
                {
                    "name": "id",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "f",
                    "description": "\n The function to call after basic validations succeed.  If this\n is a String, it is resolved in the scope of the FormManager\n object.  If this is an object, it must be `{fn:,\n scope:}`.  The function will then be invoked in the\n specified scope.",
                    "type": "Function|String|Object"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 647,
            "description": "<p>Set the regular expression used to validate the field value.</p>\n\n<p><strong>Since there is no default message for failed regular\nexpression validation, this function will complain if you have not\nalready called `setErrorMessages()` or\n`addErrorMessage` to specify an error message.</strong></p>",
            "itemtype": "method",
            "name": "setRegex",
            "params": [
                {
                    "name": "id",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "regex",
                    "description": "The regular expression to use",
                    "type": "String|RegExp"
                },
                {
                    "name": "flags",
                    "description": "If regex is a String, these are the flags used to construct a RegExp.",
                    "type": "String"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 682,
            "description": "<p>Set the error messages for a form element.  This can be used to\noverride the default messages for individual elements</p>\n\n<p>The valid error types are:</p>\n<dl>\n<dt><code>required</code></dt>\n<dd>&nbsp;</dd>\n<dt><code>min_length</code></dt>\n<dd><code>{min}</code> and <code>{max}</code> are replaced</dd>\n<dt><code>max_length</code></dt>\n<dd><code>{min}</code> and <code>{max}</code> are replaced</dd>\n<dt><code>integer</code></dt>\n<dd><code>{min}</code> and <code>{max}</code> are replaced</dd>\n<dt><code>decimal</code></dt>\n<dd><code>{min}</code> and <code>{max}</code> are replaced</dd>\n<dt><code>regex</code></dt>\n<dd>This <string>must</strong> be set for elements which validate with regular expressions.</dd>\n</dl>",
            "itemtype": "method",
            "name": "setErrorMessages",
            "params": [
                {
                    "name": "id",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "map",
                    "description": "Map of error types to error messages.",
                    "type": "Object"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 713,
            "description": "Set one particular error message for a form element.",
            "itemtype": "method",
            "name": "addErrorMessage",
            "params": [
                {
                    "name": "id",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "error_type",
                    "description": "The error message type.  Refer to setErrorMessages() for details.",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 734,
            "description": "Reset all values in the form to the defaults specified in the markup.",
            "itemtype": "method",
            "name": "clearForm",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 746,
            "description": "Reset all values in the form to the defaults passed to the\nconstructor or to `setDefaultValues()`.",
            "itemtype": "method",
            "name": "populateForm",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 763,
            "description": "Hook for performing additional actions after `populateForm()`\ncompletes.",
            "itemtype": "method",
            "name": "postPopulateForm",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 773,
            "description": "Check if form values have been modified.",
            "itemtype": "method",
            "name": "isChanged",
            "return": {
                "description": "`false` if all form elements have the default values passed to the constructor",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 792,
            "description": "Return the modified values.",
            "itemtype": "method",
            "name": "getChanges",
            "return": {
                "description": "map of form element names to new values",
                "type": "Object"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 813,
            "description": "Prepare the form for display.",
            "itemtype": "method",
            "name": "prepareForm",
            "return": {
                "description": "<code>true</code> if both pre & post hooks are happy",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 835,
            "description": "Hook called before <code>prepareForm()</code> executes.",
            "itemtype": "method",
            "name": "prePrepareForm",
            "return": {
                "description": "<code>false</code> cancels <code>prepareForm()</code>.",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 846,
            "description": "Hook called after <code>prepareForm()</code> executes.",
            "itemtype": "method",
            "name": "postPrepareForm",
            "return": {
                "description": "Return value from this function is returned by <code>prepareForm()</code>.",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 857,
            "description": "Set focus to first input field.  If a page contains multiple forms,\nonly call this for one of them.",
            "itemtype": "method",
            "name": "initFocus",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 887,
            "itemtype": "method",
            "name": "validateForm",
            "return": {
                "description": "true if all validation checks passed",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 963,
            "description": "Hook called at the end of `validateForm()`.  This is the best place\nto put holistic validations that touch multiple form elements.",
            "itemtype": "method",
            "name": "postValidateForm",
            "return": {
                "description": "`false` if validation fails",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 980,
            "description": "Register an object that can be disabled.  The object must support\nthe set('disabled', ...) API.  (The exception is DOM nodes, since\nthey are automatically wrapped in Y.Node.)  Buttons contained within\nthe form DOM element are automatically registered.",
            "itemtype": "method",
            "name": "registerButton",
            "params": [
                {
                    "name": "el",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1000,
            "itemtype": "method",
            "name": "isFormEnabled",
            "return": {
                "description": "<code>true</code> if form is enabled",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1009,
            "description": "Enable all the registered buttons.",
            "itemtype": "method",
            "name": "enableForm",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1019,
            "description": "Disable all the registered buttons.",
            "itemtype": "method",
            "name": "disableForm",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1029,
            "description": "Set the enabled state all the registered buttons.",
            "itemtype": "method",
            "name": "setFormEnabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "<code>true</code> to enable the form, <code>false</code> to disable the form",
                    "type": "Boolean"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1057,
            "itemtype": "method",
            "name": "hasMessages",
            "return": {
                "description": "<code>true</code> if there are any messages displayed, of any type",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1066,
            "itemtype": "method",
            "name": "hasErrors",
            "return": {
                "description": "<code>true</code> if there are any error messages displayed",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1075,
            "description": "Get the message type displayed for the row containing the specified element.",
            "itemtype": "method",
            "name": "getRowStatus",
            "params": [
                {
                    "name": "e",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "The status (String) or <code>false</code>.",
                "type": "Mixed"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1089,
            "description": "Clear all messages in <code>status_node</code> and the form rows.",
            "itemtype": "method",
            "name": "clearMessages",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1117,
            "description": "Display a message for the form row containing the specified element.\nThe message will only be displayed if no message with a higher\nprecedence is already visible. (see Y.FormManager.status_order)",
            "itemtype": "method",
            "name": "displayMessage",
            "params": [
                {
                    "name": "e",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "msg",
                    "description": "The message",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The message type (see Y.FormManager.status_order)",
                    "type": "String"
                },
                {
                    "name": "scroll",
                    "description": "`true` if the form row should be scrolled into view",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if the message was displayed, false if a higher precedence message was already there",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1151,
            "description": "Displays a generic message in <code>status_node</code> stating that\nthe form data failed to validate.  Override this if you want to get\nfancy.",
            "itemtype": "method",
            "name": "notifyErrors",
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr/js/FormManager.js",
            "line": 1163,
            "description": "Display a message in <code>status_node</code>.",
            "itemtype": "method",
            "name": "displayFormMessage",
            "params": [
                {
                    "name": "msg",
                    "description": "The message",
                    "type": "String"
                },
                {
                    "name": "error",
                    "description": "<code>true</code> if the message is an error",
                    "type": "Boolean"
                },
                {
                    "name": "scroll",
                    "description": "<code>true</code> if <code>status_node</code> should be scrolled into view",
                    "type": "Boolean"
                }
            ],
            "class": "FormManager",
            "module": "gallery-formmgr"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 46,
            "description": "Regular expression used to determine if a value is an integer.\nThis can be localized, e.g., allow for thousands separator.",
            "itemtype": "property",
            "name": "integer_value_re",
            "type": "{RegExp}",
            "static": 1,
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 56,
            "description": "Regular expression used to determine if a value is a decimal number.\nThis can be localized, e.g., use the correct decimal separator.",
            "itemtype": "property",
            "name": "decimal_value_re",
            "type": "{RegExp}",
            "static": 1,
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 66,
            "description": "<p>Map of localizable strings used by pre-validation.</p>\n\n<dl>\n<dt>validation_error</dt>\n<dd>Displayed in `status_node` by `notifyErrors()` when pre-validation fails.</dd>\n<dt>required_string</dt>\n<dd>Displayed when `yiv-required` fails on an input field.</dd>\n<dt>required_menu</dt>\n<dd>Displayed when `yiv-required` fails on a select element.</dd>\n<dt>length_too_short, length_too_long, length_out_of_range</dt>\n<dd>Displayed when `yiv-length` fails on an input field.</dd>\n<dt>integer, integer_too_small, integer_too_large, integer_out_of_range</dt>\n<dd>Displayed when `yiv-integer` fails on an input field.</dd>\n<dt>decimal, decimal_too_small, decimal_too_large, decimal_out_of_range</dt>\n<dd>Displayed when `yiv-decimal` fails on an input field.</dd>\n</dl>",
            "itemtype": "property",
            "name": "Strings",
            "type": "{Object}",
            "static": 1,
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 116,
            "description": "Validate an input based on its CSS data.",
            "itemtype": "method",
            "name": "validateFromCSSData",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "The field to validate.",
                    "type": "Element|Node"
                },
                {
                    "name": "msg_list",
                    "description": "Map of message types to custom messages.",
                    "type": "Map",
                    "optional": true
                }
            ],
            "return": {
                "description": "Status\n<dl>\n<dt>keepGoing</dt>\n<dd>(Boolean) <code>true</code> if further validation should be done.</dd>\n<dt>error</dt>\n<dd>(String) The error message, if any.</dd>\n</dl>",
                "type": "Object"
            },
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 300,
            "description": "Trim leading and trailing whitespace from the specified fields, except\nwhen a field has the CSS class yiv-no-trim.",
            "itemtype": "method",
            "name": "cleanValues",
            "static": 1,
            "params": [
                {
                    "name": "e",
                    "description": "The fields to clean.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "<code>true</code> if there are any file inputs.",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 334,
            "description": "<p>Names of supported status values, highest precedence first.</p>\n\n<p>This is static because it links to CSS rules that define the\nappearance of each status type:  .formmgr-has{status}</p>",
            "itemtype": "property",
            "name": "status_order",
            "type": "{Array}",
            "default": "[ 'error', 'warn', 'success', 'info' ]",
            "static": 1,
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 353,
            "description": "Get the precedence of the given status name.",
            "itemtype": "method",
            "name": "getStatusPrecedence",
            "static": 1,
            "params": [
                {
                    "name": "status",
                    "description": "The name of the status value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The position in the <code>status_order</code> array.",
                "type": "Int"
            },
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-css-validation/js/CSSValidation.js",
            "line": 375,
            "description": "Compare two status values.",
            "itemtype": "method",
            "name": "statusTakesPrecedence",
            "static": 1,
            "params": [
                {
                    "name": "orig_status",
                    "description": "The name of the original status value.",
                    "type": "String"
                },
                {
                    "name": "new_status",
                    "description": "The name of the new status value.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "<code>true</code> if <code>new_status</code> takes precedence over <code>orig_status</code>",
                "type": "Boolean"
            },
            "class": "FormManager",
            "module": "gallery-formmgr",
            "submodule": "gallery-formmgr-css-validation"
        },
        {
            "file": "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js",
            "line": 29,
            "itemtype": "attribute",
            "name": "formmgr",
            "type": "{Y.FormManager}",
            "writeonce": "",
            "class": "Plugin.OverlayForm",
            "module": "gallery-formmgr-overlay-plugin",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-formmgr-overlay-plugin/js/OverlayFormPlugin.js",
            "line": 39,
            "description": "Configuration passed to Y.FormManager ctor.",
            "itemtype": "attribute",
            "name": "formmgrConfig",
            "type": "{Object}",
            "writeonce": "",
            "class": "Plugin.OverlayForm",
            "module": "gallery-formmgr-overlay-plugin",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-funcprog/js/array-extras.js",
            "line": 11,
            "description": "Executes the supplied function on each item in the array, searching\nfor the first item that matches the supplied function.  The function\nreceives the value, the index, and the array itself as parameters\n(in that order).",
            "itemtype": "method",
            "name": "findIndexOf",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "the array to iterate",
                    "type": "Array"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "index of the first item for which the supplied function returns true, or -1 if it never returns true",
                "type": "Number"
            },
            "class": "Array~funcprog-extras",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/array-extras.js",
            "line": 40,
            "description": "Executes the supplied function on each item in the array, starting\nfrom the end and folding the list into a single value.  The function\nreceives the value returned by the previous iteration (or the\ninitial value if this is the first iteration), the value being\niterated, the index, and the list itself as parameters (in that\norder).  The function must return the updated value.",
            "itemtype": "method",
            "name": "reduceRight",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "the array to iterate",
                    "type": "Array"
                },
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the array",
                "type": "Mixed"
            },
            "class": "Array~funcprog-extras",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/array-extras.js",
            "line": 77,
            "description": "Executes the supplied function on each item in the array and returns\nan object with the results.  The function receives the value, the\nkey, and the object itself as parameters (in that order).  The\nfunction must return an array with two elements (key, value), which\nwill be mixed into the result.",
            "itemtype": "method",
            "name": "mapToObject",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "the array to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object of all return values, constructed via Y.mix",
                "type": "Object"
            },
            "class": "Array~funcprog-extras",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 44,
            "description": "Executes the supplied function on each item in the object.\nIteration stops if the supplied function does not return a truthy\nvalue.  The function receives the value, the key, and the object\nitself as parameters (in that order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "every",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "true if every item in the array returns true from the supplied function, false otherwise",
                "type": "Boolean"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 65,
            "description": "Executes the supplied function on each item in the object.  Returns\na new object containing the items for which the supplied function\nreturned a truthy value.  The function receives the value, the key,\nand the object itself as parameters (in that order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "filter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "array or object of items for which the supplied function returned a truthy value (empty if it never returned a truthy value)",
                "type": "Object"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 86,
            "description": "Executes the supplied function on each item in the object, searching\nfor the first item that matches the supplied function.  The function\nreceives the value, the key, and the object itself as parameters (in\nthat order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "find",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the first item for which the supplied function returns true, or null if it never returns true",
                "type": "Mixed"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 107,
            "description": "Executes the supplied function on each item in the object and\nreturns a new object with the results.  The function receives the\nvalue, the key, and the object itself as parameters (in that order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "map",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "array or object of all return values, mapped according to the item key",
                "type": "Object"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 127,
            "description": "Partitions an object into two new objects, one with the items for\nwhich the supplied function returns true, and one with the items\nfor which the function returns false.  The function receives the\nvalue, the key, and the object itself as parameters (in that order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "partition",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "object with two properties: matches and rejects. Each is an array or object containing the items that were selected or rejected by the test function (or an empty object if none).",
                "type": "Object"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 148,
            "description": "Executes the supplied function on each item in the object, folding\nthe object into a single value.  The function receives the value\nreturned by the previous iteration (or the initial value if this is\nthe first iteration), the value being iterated, the key, and the\nobject itself as parameters (in that order).  The function must\nreturn the updated value.\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "reduce",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the object",
                "type": "Mixed"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 172,
            "description": "Executes the supplied function on each item in the object, starting\nfrom the \"end\" and folding the object into a single value.  The\nfunction receives the value returned by the previous iteration (or\nthe initial value if this is the first iteration), the value being\niterated, the key, and the object itself as parameters (in that\norder).  The function must return the updated value.\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "reduceRight",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the object",
                "type": "Mixed"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-funcprog/js/yui-extras.js",
            "line": 196,
            "description": "Executes the supplied function on each item in the object.  Returns\na new object containing the items for which the supplied function\nreturned a falsey value.  The function receives the value, the key,\nand the object itself as parameters (in that order).\n\nSupports arrays, objects, and NodeLists.",
            "itemtype": "method",
            "name": "reject",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "if true, prototype properties are iterated on objects",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "array or object of items for which the supplied function returned a falsey value (empty if it never returned a falsey value)",
                "type": "Object"
            },
            "class": "YUI~funcprog",
            "module": "gallery-funcprog"
        },
        {
            "file": "src/gallery-input-calendar-sync/js/sync.js",
            "line": 28,
            "description": "Calendar with which to sync.",
            "itemtype": "attribute",
            "name": "calendar",
            "type": "{Calendar}",
            "required": 1,
            "class": "Plugin.InputCalendarSync",
            "module": "gallery-input-calendar-sync",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-input-calendar-sync/js/sync.js",
            "line": 43,
            "description": "Set to false to require a date to be entered.",
            "itemtype": "attribute",
            "name": "allowBlank",
            "type": "{Boolean}",
            "default": "true",
            "class": "Plugin.InputCalendarSync",
            "module": "gallery-input-calendar-sync",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 28,
            "description": "Retrieve an object.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the object to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the stored object, or false if the slot is empty",
                "type": "Mixed"
            },
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 49,
            "description": "Retrieve an object only if it has already been constructed.",
            "itemtype": "method",
            "name": "getIfConstructed",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the object to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the stored object, or false if the slot is empty",
                "type": "Mixed"
            },
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 62,
            "description": "Store an object or ctor+args.",
            "itemtype": "method",
            "name": "put",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the object",
                    "type": "String"
                },
                {
                    "name": "objOrCtor",
                    "description": "the object or the object's constructor or a factory method",
                    "type": "Object|Function"
                },
                {
                    "name": "args",
                    "description": "the array of arguments to pass to the constructor",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "false if the id has already been used",
                "type": "Boolean"
            },
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 98,
            "description": "Remove an object.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the object",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the object that was removed, or false if the slot was empty",
                "type": "Mixed"
            },
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 120,
            "description": "Remove all objects.",
            "itemtype": "method",
            "name": "clear",
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 130,
            "description": "Returns list of all stored keys.",
            "itemtype": "method",
            "name": "keys",
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-instancemanager/js/InstanceManager.js",
            "line": 140,
            "description": "Call a function on every object.",
            "itemtype": "method",
            "name": "applyToAll",
            "params": [
                {
                    "name": "behavior",
                    "description": "the function to call or the name of the function or an object {fn:,scope:}",
                    "type": "Function|String|Object"
                },
                {
                    "name": "arguments",
                    "description": "the arguments to pass to the function",
                    "type": "Array"
                },
                {
                    "name": "skip_unconstructed",
                    "description": "Optional.  Pass <code>true</code> to skip unconstructed slots.",
                    "type": "Boolean"
                }
            ],
            "class": "InstanceManager",
            "module": "gallery-instancemanager"
        },
        {
            "file": "src/gallery-io-adobe-air/js/air.js",
            "line": 9,
            "description": "Flatten headers object",
            "itemtype": "method",
            "name": "flatten",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "o",
                    "description": "The headers object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The flattened headers object",
                "type": "String"
            },
            "class": "IO",
            "module": "gallery-io-adobe-air"
        },
        {
            "file": "src/gallery-io-adobe-air/js/air.js",
            "line": 29,
            "description": "Adboe AIR IO transport, uses the URLLoader class under the hood to perform\nall network IO.",
            "itemtype": "method",
            "name": "transports.adobe-air",
            "static": 1,
            "return": {
                "description": "This object contains only a `send` method that accepts a\n`transaction object`, `uri` and the `config object`.",
                "type": "Object"
            },
            "class": "IO",
            "module": "gallery-io-adobe-air"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 45,
            "description": "Creates the iframe used in file upload transactions, and binds the\nresponse event handler.",
            "itemtype": "method",
            "name": "_iframe",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "Transaction object generated by _iframe().",
                    "type": "Object"
                },
                {
                    "name": "c",
                    "description": "Configuration object passed to YUI.io().",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 67,
            "description": "Creates a temporary form, if the caller doesn't provide one.",
            "itemtype": "method",
            "name": "_form",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "c",
                    "description": "Configuration object passed to YUI.io().",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "form id",
                "type": "String"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 88,
            "description": "Adds JSON encoded data to the form.",
            "itemtype": "method",
            "name": "_addJSON",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "f",
                    "description": "HTML form object.",
                    "type": "Object"
                },
                {
                    "name": "s",
                    "description": "The JSON data or object to serialize.",
                    "type": "String|object"
                }
            ],
            "return": {
                "description": "created fields.",
                "type": "Array"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 113,
            "description": "Sets the appropriate attributes and values to the HTML form, in\npreparation of a file upload transaction.",
            "itemtype": "method",
            "name": "_multi_setAttrs",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "f",
                    "description": "HTML form object.",
                    "type": "Object"
                },
                {
                    "name": "id",
                    "description": "The Transaction ID.",
                    "type": "Object"
                },
                {
                    "name": "uri",
                    "description": "Qualified path to transaction resource.",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "POST or GET.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 133,
            "description": "Starts timeout count if the configuration object has a defined\ntimeout property.",
            "itemtype": "method",
            "name": "_multi_startTimeout",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "Transaction object generated by _iframe().",
                    "type": "Object"
                },
                {
                    "name": "c",
                    "description": "Configuration object passed to YUI.io().",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 158,
            "description": "Destroy the iframe and temp form, if any.",
            "itemtype": "method",
            "name": "_multi_destroy",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "id",
                    "description": "Transaction id.",
                    "type": "Number"
                },
                {
                    "name": "c",
                    "description": "Configuration object for the transaction.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 181,
            "description": "Bound to the iframe's Load event and processes the response data.",
            "itemtype": "method",
            "name": "_multi_complete",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The transaction object",
                    "type": "O"
                },
                {
                    "name": "c",
                    "description": "Configuration object for the transaction.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-io-multiresponse/js/multi-response.js",
            "line": 205,
            "description": "Uploads HTML form data, inclusive of files/attachments, using the\niframe created in _iframe to facilitate the transaction.",
            "itemtype": "method",
            "name": "_multi_send",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The transaction object",
                    "type": "O"
                },
                {
                    "name": "uri",
                    "description": "Qualified path to transaction resource.",
                    "type": "Object"
                },
                {
                    "name": "c",
                    "description": "Configuration object for the transaction.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Void"
            },
            "class": "io~multiresponse",
            "module": "gallery-io-multiresponse"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 24,
            "itemtype": "method",
            "name": "atBeginning",
            "return": {
                "description": "true if at the beginning",
                "type": "Boolean"
            },
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 33,
            "itemtype": "method",
            "name": "atEnd",
            "return": {
                "description": "true if at the end",
                "type": "Boolean"
            },
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 42,
            "description": "Move to the beginning of the list.",
            "itemtype": "method",
            "name": "moveToBeginning",
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 52,
            "description": "Move to the end of the list.",
            "itemtype": "method",
            "name": "moveToEnd",
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 62,
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "next value in the list or undefined if at the end",
                "type": "Mixed"
            },
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/array-iterator.js",
            "line": 74,
            "itemtype": "method",
            "name": "prev",
            "return": {
                "description": "previous value in the list or undefined if at the beginning",
                "type": "Mixed"
            },
            "class": "ArrayIterator",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 26,
            "description": "Executes the supplied function on each item in the list.  The\nfunction receives the value, the index, and the list itself as\nparameters (in that order).",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 45,
            "description": "Executes the supplied function on each item in the list.  Iteration\nstops if the supplied function does not return a truthy value.  The\nfunction receives the value, the index, and the list itself as\nparameters (in that order).",
            "itemtype": "method",
            "name": "every",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if every item in the array returns true from the supplied function, false otherwise",
                "type": "Boolean"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 71,
            "description": "Executes the supplied function on each item in the list.  Returns a\nnew list containing the items for which the supplied function\nreturned a truthy value.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of items for which the supplied function returned a truthy value (empty if it never returned a truthy value)",
                "type": "Object"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 100,
            "description": "Executes the supplied function on each item in the list, searching\nfor the first item that matches the supplied function.  The function\nreceives the value, the index, and the object itself as parameters\n(in that order).",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the first item for which the supplied function returns true, or null if it never returns true",
                "type": "Mixed"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 127,
            "description": "Executes the supplied function on each item in the list and returns\na new list with the results.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of all return values",
                "type": "Object"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 151,
            "description": "Partitions an list into two new list, one with the items for which\nthe supplied function returns true, and one with the items for which\nthe function returns false.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "partition",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object with two properties: matches and rejects. Each is a list containing the items that were selected or rejected by the test function (or an empty object if none).",
                "type": "Object"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 181,
            "description": "Executes the supplied function on each item in the list, folding the\nlist into a single value.  The function receives the value returned\nby the previous iteration (or the initial value if this is the first\niteration), the value being iterated, the index, and the list itself\nas parameters (in that order).  The function must return the updated\nvalue.",
            "itemtype": "method",
            "name": "reduce",
            "params": [
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the list",
                "type": "Mixed"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 209,
            "description": "Executes the supplied function on each item in the list, starting\nfrom the end and folding the list into a single value.  The function\nreceives the value returned by the previous iteration (or the\ninitial value if this is the first iteration), the value being\niterated, the index, and the list itself as parameters (in that\norder).  The function must return the updated value.",
            "itemtype": "method",
            "name": "reduceRight",
            "params": [
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the list",
                "type": "Mixed"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 243,
            "description": "Executes the supplied function on each item in the list.  Returns a\nnew list containing the items for which the supplied function\nreturned a falsey value.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "reject",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "array or object of items for which the supplied function returned a falsey value (empty if it never returned a falsey value)",
                "type": "Object"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-iterable-extras/js/iterable-extras.js",
            "line": 272,
            "description": "Executes the supplied function on each item in the list.  Iteration\nstops if the supplied function returns a truthy value.  The function\nreceives the value, the index, and the list itself as parameters\n(in that order).",
            "itemtype": "method",
            "name": "some",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if the function returns a truthy value on any of the items in the array, false otherwise",
                "type": "Boolean"
            },
            "class": "Iterable",
            "module": "gallery-iterable-extras"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 65,
            "itemtype": "property",
            "name": "FIT_TO_VIEWPORT",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 71,
            "itemtype": "property",
            "name": "FIT_TO_CONTENT",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 79,
            "description": "FIT_TO_VIEWPORT sizes the rows to fit everything inside the\nbrowser's viewport.  FIT_TO_CONTENT sizes the rows to eliminate all\nscrollbars on module bodies.  Note that you can configure this\nproperty by putting the CSS class \"FIT_TO_VIEWPORT\" or\n\"FIT_TO_CONTENT\" on layout-bd.",
            "itemtype": "attribute",
            "name": "mode",
            "type": "PageLayout.FIT_TO_VIEWPORT or PageLayout.FIT_TO_CONTENT",
            "default": "PageLayout.FIT_TO_VIEWPORT",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 99,
            "description": "Minimum page width, measured in em's.  The page content will not\ncollapse narrower than this width.  If the viewport is smaller, the\nbrower's horizontal scrollbar will appear.",
            "itemtype": "attribute",
            "name": "minWidth",
            "type": "{Number} em's",
            "default": "73 (em) 950px @ 13px font",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 117,
            "description": "Minimum page height in FIT_TO_VIEWPORT mode, measured in em's.  The\npage content will not collapse lower than this height.  If the\nviewport is smaller, the brower's vertical scrollbar will appear.",
            "itemtype": "attribute",
            "name": "minHeight",
            "type": "{Number} em's",
            "default": "44 (em) 570px @ 13px font",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 135,
            "description": "In FIT_TO_CONTENT mode, set this to true to make the footer stick to\nthe bottom of the viewport.  The default is for the footer to scroll\nalong with the rest of the page content.",
            "itemtype": "attribute",
            "name": "stickyFooter",
            "type": "{Boolean}",
            "default": "false",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 150,
            "description": "When organizing modules into columns in FIT_TO_CONTENT mode, set\nthis to false to allow each column to be a different height.",
            "itemtype": "attribute",
            "name": "matchColumnHeights",
            "type": "{Boolean}",
            "default": "true",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 164,
            "description": "Selector identifying the element which contains layout-(hd|bd|ft).\nThis cannot be used to attach PageLayout to only part of the page.\nIt should only be used when the page content is unavoidably embedded\ninside an element which fills the page.",
            "itemtype": "attribute",
            "name": "body",
            "type": "{String|Node}",
            "default": "\"body\"",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 184,
            "itemtype": "event",
            "name": "beforeReflow",
            "description": "Fires before the layout is reflowed.",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 188,
            "itemtype": "event",
            "name": "afterReflow",
            "description": "Fires after the layout is completely reflowed, including viewport scrollbar changes.",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 193,
            "itemtype": "event",
            "name": "beforeExpandModule",
            "description": "Fires before a module is expanded.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 198,
            "itemtype": "event",
            "name": "afterExpandModule",
            "description": "Fires after a module is expanded.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 204,
            "itemtype": "event",
            "name": "beforeCollapseModule",
            "description": "Fires before a module is collapsed.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 209,
            "itemtype": "event",
            "name": "afterCollapseModule",
            "description": "Fires after a module is collapsed.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 215,
            "itemtype": "event",
            "name": "beforeResizeModule",
            "description": "Fires before a module is resized.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                },
                {
                    "name": "height",
                    "description": "new height in pixels or \"auto\"",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "new width in pixels or \"auto\"",
                    "type": "Number"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 222,
            "itemtype": "event",
            "name": "afterResizeModule",
            "description": "Fires after a module is resized.",
            "params": [
                {
                    "name": "bd",
                    "description": "the module body (layout-m-bd)",
                    "type": "Node"
                },
                {
                    "name": "height",
                    "description": "new height in pixels",
                    "type": "Number"
                },
                {
                    "name": "width",
                    "description": "new width in pixels",
                    "type": "Number"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 230,
            "itemtype": "property",
            "name": "fit_to_viewport_class",
            "type": "{String}",
            "default": "\"FIT_TO_VIEWPORT\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 238,
            "itemtype": "property",
            "name": "fit_to_content_class",
            "type": "{String}",
            "default": "\"FIT_TO_CONTENT\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 246,
            "itemtype": "property",
            "name": "force_fit_class",
            "type": "{String}",
            "default": "\"FORCE_FIT\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 254,
            "itemtype": "property",
            "name": "page_header_class",
            "type": "{String}",
            "default": "\"layout-hd\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 262,
            "itemtype": "property",
            "name": "page_body_class",
            "type": "{String}",
            "default": "\"layout-bd\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 270,
            "itemtype": "property",
            "name": "page_footer_class",
            "type": "{String}",
            "default": "\"layout-ft\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 278,
            "itemtype": "property",
            "name": "module_rows_class",
            "type": "{String}",
            "value": "\"layout-module-row\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 286,
            "itemtype": "property",
            "name": "module_cols_class",
            "type": "{String}",
            "value": "\"layout-module-col\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 294,
            "itemtype": "property",
            "name": "module_class",
            "type": "{String}",
            "default": "\"layout-module\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 302,
            "itemtype": "property",
            "name": "module_header_class",
            "type": "{String}",
            "default": "\"layout-m-hd\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 310,
            "itemtype": "property",
            "name": "module_body_class",
            "type": "{String}",
            "default": "\"layout-m-bd\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 318,
            "itemtype": "property",
            "name": "module_footer_class",
            "type": "{String}",
            "default": "\"layout-m-ft\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 326,
            "itemtype": "property",
            "name": "not_managed_class",
            "type": "{String}",
            "default": "\"layout-not-managed\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 334,
            "itemtype": "property",
            "name": "collapse_vert_nub_class",
            "type": "{String}",
            "default": "\"layout-vert-collapse-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 342,
            "itemtype": "property",
            "name": "collapse_left_nub_class",
            "type": "{String}",
            "default": "\"layout-left-collapse-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 350,
            "itemtype": "property",
            "name": "collapse_right_nub_class",
            "type": "{String}",
            "default": "\"layout-right-collapse-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 358,
            "itemtype": "property",
            "name": "expand_vert_nub_class",
            "type": "{String}",
            "default": "\"layout-vert-expand-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 366,
            "itemtype": "property",
            "name": "expand_left_nub_class",
            "type": "{String}",
            "default": "\"layout-left-expand-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 374,
            "itemtype": "property",
            "name": "expand_right_nub_class",
            "type": "{String}",
            "default": "\"layout-right-expand-nub\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 382,
            "itemtype": "property",
            "name": "collapsed_vert_class",
            "type": "{String}",
            "default": "\"layout-collapsed-vert\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 390,
            "itemtype": "property",
            "name": "collapsed_horiz_class",
            "type": "{String}",
            "default": "\"layout-collapsed-horiz\"",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 398,
            "itemtype": "property",
            "name": "min_module_height",
            "type": "{Number}",
            "default": "10 (px)",
            "static": 1,
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 849,
            "description": "Call this after manually adding or removing modules on the page.",
            "itemtype": "method",
            "name": "rescanBody",
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1002,
            "itemtype": "method",
            "name": "getHeaderHeight",
            "return": {
                "description": "the height of the sticky header in pixels",
                "type": "Number"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1011,
            "itemtype": "method",
            "name": "getHeaderContainer",
            "return": {
                "description": "the header container (layout-hd) or null if there is no header",
                "type": "Node"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1020,
            "itemtype": "method",
            "name": "getBodyHeight",
            "return": {
                "description": "the height of the scrolling body in pixels",
                "type": "Number"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1029,
            "itemtype": "method",
            "name": "getBodyContainer",
            "return": {
                "description": "the body container (layout-bd)",
                "type": "Node"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1038,
            "itemtype": "method",
            "name": "getFooterHeight",
            "return": {
                "description": "the height of the sticky footer in pixels or zero if the footer is not sticky",
                "type": "Number"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1048,
            "itemtype": "method",
            "name": "getFooterContainer",
            "return": {
                "description": "the footer container (layout-ft), or null if there is no footer",
                "type": "Node"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1057,
            "itemtype": "method",
            "name": "moduleIsCollapsed",
            "params": [
                {
                    "name": "node",
                    "description": ".layout-module",
                    "type": "String|Node"
                }
            ],
            "return": {
                "description": "true if module is collapsed",
                "type": "Boolean"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1080,
            "description": "Expand the specified module.",
            "itemtype": "method",
            "name": "expandModule",
            "params": [
                {
                    "name": "node",
                    "description": ".layout-module",
                    "type": "String|Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1108,
            "description": "Collapse the specified module.",
            "itemtype": "method",
            "name": "collapseModule",
            "params": [
                {
                    "name": "node",
                    "description": ".layout-module",
                    "type": "String|Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1136,
            "description": "Toggle the collapsed state of the specified layout-module.",
            "itemtype": "method",
            "name": "toggleModule",
            "params": [
                {
                    "name": "module",
                    "description": ".layout-module",
                    "type": "String|Node"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1156,
            "description": "Call this when something changes size, to request a reflow of the\nlayout.",
            "itemtype": "method",
            "name": "elementResized",
            "params": [
                {
                    "name": "el",
                    "description": "element that changed size",
                    "type": "String|Node"
                }
            ],
            "return": {
                "description": "true if the element is inside the managed containers",
                "type": "Boolean"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1205,
            "description": "Returns the components of the module.",
            "itemtype": "method",
            "name": "_analyzeModule",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "root",
                    "description": ".layout-module",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "root,hd,bd,ft",
                "type": "Object"
            },
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout/js/PageLayout.js",
            "line": 1252,
            "description": "Set the width of a module.",
            "itemtype": "method",
            "name": "_setWidth",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "children",
                    "description": "root,hd,bd,ft",
                    "type": "Object"
                },
                {
                    "name": "w",
                    "description": "width in pixels",
                    "type": "Number"
                }
            ],
            "class": "PageLayout",
            "module": "gallery-layout"
        },
        {
            "file": "src/gallery-layout-anywidget/js/layout-anywidget.js",
            "line": 31,
            "description": "Instance of Y.PageLayout",
            "itemtype": "attribute",
            "name": "layout",
            "type": "{PageLayout}",
            "required": 1,
            "writeonce": "",
            "class": "Plugin.PageLayoutAnyWidgetModule",
            "module": "gallery-layout-anywidget",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-layout-datatable/js/layout-datatable.js",
            "line": 31,
            "description": "Instance of Y.PageLayout",
            "itemtype": "attribute",
            "name": "layout",
            "type": "{PageLayout}",
            "required": 1,
            "writeonce": "",
            "class": "Plugin.PageLayoutDataTableModule",
            "module": "gallery-layout-datatable",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-layout-datatable/js/layout-datatable.js",
            "line": 107,
            "description": "By default, the scroll position is restored after Y.PageLayout\nreflows the page.  In certain cases, e.g., switching to a different\npage of data, the scroll position should be reset instead.  Call\nthis function to request that the scroll position be reset after the\nnext layout reflow.",
            "itemtype": "method",
            "name": "resetScroll",
            "class": "Plugin.PageLayoutDataTableModule",
            "module": "gallery-layout-datatable",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-layout-dd/js/PageLayoutDD.js",
            "line": 3,
            "description": "Allows rearranging Page Layout modules via Drag-and-Drop.",
            "class": "LinkedList",
            "module": "gallery-layout-datatable",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 59,
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "true if the list is empty",
                "type": "Boolean"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 68,
            "description": "Warning:  This requires traversing the list!  Use isEmpty() whenever\npossible.",
            "itemtype": "method",
            "name": "size",
            "return": {
                "description": "the number of items in the list",
                "type": "Number"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 89,
            "itemtype": "method",
            "name": "iterator",
            "return": {
                "description": "",
                "type": "LinkedListIterator"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 98,
            "description": "Creates a new, empty LinkedList.",
            "itemtype": "method",
            "name": "newInstance",
            "return": {
                "description": "",
                "type": "LinkedList"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 109,
            "itemtype": "method",
            "name": "head",
            "return": {
                "description": "the first item in the list, or null if the list is empty",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 118,
            "itemtype": "method",
            "name": "tail",
            "return": {
                "description": "the last item in the list, or null if the list is empty",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 127,
            "itemtype": "method",
            "name": "indexOf",
            "params": [
                {
                    "name": "needle",
                    "description": "the item to search for",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "first index of the needle, or -1 if not found",
                "type": "Number"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 147,
            "itemtype": "method",
            "name": "lastIndexOf",
            "params": [
                {
                    "name": "needle",
                    "description": "the item to search for",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "last index of the needle, or -1 if not found",
                "type": "Number"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 168,
            "description": "Clear the list.",
            "itemtype": "method",
            "name": "clear",
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 178,
            "itemtype": "method",
            "name": "insertBefore",
            "params": [
                {
                    "name": "value",
                    "description": "value to insert",
                    "type": "Mixed"
                },
                {
                    "name": "item",
                    "description": "existing item",
                    "type": "LinkedListItem"
                }
            ],
            "return": {
                "description": "inserted item",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 206,
            "itemtype": "method",
            "name": "insertAfter",
            "params": [
                {
                    "name": "item",
                    "description": "existing item",
                    "type": "LinkedListItem"
                },
                {
                    "name": "value",
                    "description": "value to insert",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "inserted item",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 234,
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "value",
                    "description": "value to prepend",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "prepended item",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 256,
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "value",
                    "description": "value to append",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "appended item",
                "type": "LinkedListItem"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 278,
            "description": "Remove the item from the list.",
            "itemtype": "method",
            "name": "remove",
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 315,
            "description": "Reverses the items in place.",
            "itemtype": "method",
            "name": "reverse",
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 334,
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 355,
            "description": "Executes the supplied function on each item in the list.  The\nfunction receives the value, the index, and the list itself as\nparameters (in that order).",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 365,
            "description": "Executes the supplied function on each item in the list.  Iteration\nstops if the supplied function does not return a truthy value.  The\nfunction receives the value, the index, and the list itself as\nparameters (in that order).",
            "itemtype": "method",
            "name": "every",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if every item in the array returns true from the supplied function, false otherwise",
                "type": "Boolean"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 377,
            "description": "Executes the supplied function on each item in the list.  Returns a\nnew list containing the items for which the supplied function\nreturned a truthy value.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of items for which the supplied function returned a truthy value (empty if it never returned a truthy value)",
                "type": "Object"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 389,
            "description": "Executes the supplied function on each item in the list, searching\nfor the first item that matches the supplied function.  The function\nreceives the value, the index, and the object itself as parameters\n(in that order).",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the first item for which the supplied function returns true, or null if it never returns true",
                "type": "Mixed"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 401,
            "description": "Executes the supplied function on each item in the list and returns\na new list with the results.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of all return values",
                "type": "Object"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 412,
            "description": "Partitions an list into two new list, one with the items for which\nthe supplied function returns true, and one with the items for which\nthe function returns false.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "partition",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object with two properties: matches and rejects. Each is a list containing the items that were selected or rejected by the test function (or an empty object if none).",
                "type": "Object"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 424,
            "description": "Executes the supplied function on each item in the list, folding the\nlist into a single value.  The function receives the value returned\nby the previous iteration (or the initial value if this is the first\niteration), the value being iterated, the index, and the list itself\nas parameters (in that order).  The function must return the updated\nvalue.",
            "itemtype": "method",
            "name": "reduce",
            "params": [
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the list",
                "type": "Mixed"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 439,
            "description": "Executes the supplied function on each item in the list.  Returns a\nnew list containing the items for which the supplied function\nreturned a falsey value.  The function receives the value, the\nindex, and the object itself as parameters (in that order).",
            "itemtype": "method",
            "name": "reject",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "array or object of items for which the supplied function returned a falsey value (empty if it never returned a falsey value)",
                "type": "Object"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedList.js",
            "line": 451,
            "description": "Executes the supplied function on each item in the list.  Iteration\nstops if the supplied function returns a truthy value.  The function\nreceives the value, the index, and the list itself as parameters\n(in that order).",
            "itemtype": "method",
            "name": "some",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if the function returns a truthy value on any of the items in the array, false otherwise",
                "type": "Boolean"
            },
            "class": "LinkedList",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListItem.js",
            "line": 25,
            "itemtype": "method",
            "name": "prev",
            "return": {
                "description": "previous item or null",
                "type": "LinkedListItem"
            },
            "class": "LinkedListItem",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListItem.js",
            "line": 34,
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "next item or null",
                "type": "LinkedListItem"
            },
            "class": "LinkedListItem",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 26,
            "itemtype": "method",
            "name": "atBeginning",
            "return": {
                "description": "true if at the beginning",
                "type": "Boolean"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 35,
            "itemtype": "method",
            "name": "atEnd",
            "return": {
                "description": "true if at the end",
                "type": "Boolean"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 44,
            "description": "Move to the beginning of the list.",
            "itemtype": "method",
            "name": "moveToBeginning",
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 55,
            "description": "Move to the end of the list.",
            "itemtype": "method",
            "name": "moveToEnd",
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 66,
            "itemtype": "method",
            "name": "next",
            "return": {
                "description": "next value in the list or undefined if at the end",
                "type": "Mixed"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 93,
            "itemtype": "method",
            "name": "prev",
            "return": {
                "description": "previous value in the list or undefined if at the beginning",
                "type": "Mixed"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 120,
            "description": "Insert the given value at the iteration position.  The inserted item\nwill be returned by next().",
            "itemtype": "method",
            "name": "insert",
            "params": [
                {
                    "name": "value",
                    "description": "value to insert",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "inserted item",
                "type": "LinkedListItem"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 143,
            "description": "Remove the previous item from the list.",
            "itemtype": "method",
            "name": "removePrev",
            "return": {
                "description": "removed item or undefined if at the end",
                "type": "LinkedListItem"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-linkedlist/js/LinkedListIterator.js",
            "line": 172,
            "description": "Remove the next item from the list.",
            "itemtype": "method",
            "name": "removeNext",
            "return": {
                "description": "removed item or undefined if at the end",
                "type": "LinkedListItem"
            },
            "class": "LinkedListIterator",
            "module": "gallery-linkedlist"
        },
        {
            "file": "src/gallery-log-filter/js/log-filter.js",
            "line": 16,
            "description": "Adds a filter that filters out messages other than the given set of\nlevels.",
            "itemtype": "method",
            "name": "addLevelFilter",
            "static": 1,
            "params": [
                {
                    "name": "levels",
                    "description": "List of log levels to pass through, e.g, `['error','warn']`.",
                    "type": "Array"
                }
            ],
            "class": "LogFilter",
            "module": "gallery-log-filter"
        },
        {
            "file": "src/gallery-log-filter/js/log-filter.js",
            "line": 36,
            "description": "Adds a function to filter log messages.",
            "itemtype": "method",
            "name": "addFilter",
            "static": 1,
            "params": [
                {
                    "name": "filter",
                    "description": "Function to apply.  Called with `msg, cat, src`.  Returns `true` to pass the message.",
                    "type": "Function"
                }
            ],
            "class": "LogFilter",
            "module": "gallery-log-filter"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 17,
            "itemtype": "method",
            "name": "sign",
            "static": 1,
            "return": {
                "description": "+1 if value > 0, -1 if value < 0, else zero",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 27,
            "itemtype": "method",
            "name": "add",
            "static": 1,
            "return": {
                "description": "sum of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 45,
            "itemtype": "method",
            "name": "addReciprocals",
            "static": 1,
            "return": {
                "description": "sum of the reciprocals of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 65,
            "itemtype": "method",
            "name": "parallel",
            "static": 1,
            "return": {
                "description": "net value of N resistors in parallel (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 75,
            "itemtype": "method",
            "name": "multiply",
            "static": 1,
            "return": {
                "description": "product of all the arguments (either passed separately or as an array)",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 93,
            "itemtype": "method",
            "name": "degreesToRadians",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "angle in degrees",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "angle in radians",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 104,
            "itemtype": "method",
            "name": "radiansToDegrees",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "angle in radians",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "angle in degrees",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 115,
            "itemtype": "method",
            "name": "acosh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic cosine",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 126,
            "itemtype": "method",
            "name": "asinh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic sine",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 137,
            "itemtype": "method",
            "name": "atanh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "inverse hyperbolic tangent",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 148,
            "itemtype": "method",
            "name": "cosh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic cosine",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 160,
            "itemtype": "method",
            "name": "sinh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic sine",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-math/js/Math.js",
            "line": 172,
            "itemtype": "method",
            "name": "tanh",
            "static": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "hyperbolic sine",
                "type": "Number"
            },
            "class": "Math",
            "module": "gallery-math"
        },
        {
            "file": "src/gallery-mathcanvas/js/Arccosine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Arccosine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Arcsine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Arcsine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Arctangent.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Arctangent",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Arctangent2.js",
            "line": 25,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Arctangent2",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Conjugate.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Conjugate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Conjugate.js",
            "line": 34,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Conjugate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Conjugate.js",
            "line": 62,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Conjugate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Cosine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Cosine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/E.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.E",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/E.js",
            "line": 31,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.E",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Exponential.js",
            "line": 25,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Exponential",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Exponential.js",
            "line": 37,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Exponential",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Exponential.js",
            "line": 100,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Exponential",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Exponential.js",
            "line": 119,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Exponential",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 47,
            "itemtype": "method",
            "name": "getArgCount",
            "return": {
                "description": "number of arguments",
                "type": "Int"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 56,
            "itemtype": "method",
            "name": "getArg",
            "return": {
                "description": "requested argument, or undefined",
                "type": "MathFunction"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 66,
            "itemtype": "method",
            "name": "appendArg",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ],
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 77,
            "itemtype": "method",
            "name": "removeArg",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ],
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 92,
            "description": "If origArg is an argument, replaces origArg with newArg.",
            "itemtype": "method",
            "name": "replaceArg",
            "params": [
                {
                    "name": "origArg",
                    "description": "original argument",
                    "type": "MathFunction"
                },
                {
                    "name": "newArg",
                    "description": "new argument",
                    "type": "MathFunction"
                }
            ],
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 112,
            "itemtype": "method",
            "name": "evaluateArgs",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of argument values, from calling evaluate()"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 127,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 205,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 246,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/FunctionWithArgs.js",
            "line": 255,
            "description": "Print an argument, with parentheses if necessary.",
            "itemtype": "method",
            "name": "_printArg",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "index",
                    "description": "argument index or MathFunction",
                    "type": "Number|MathFunction"
                }
            ],
            "return": {
                "description": "the string representation of the argument",
                "type": "String"
            },
            "class": "MathFunction.FunctionWithArgs",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/HyperbolicCosine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.HyperbolicCosine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/HyperbolicSine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.HyperbolicSine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/HyperbolicTangent.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.HyperbolicTangent",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/I.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.I",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/I.js",
            "line": 31,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.I",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/ImaginaryPart.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.ImaginaryPart",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicCosine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.InverseHyperbolicCosine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicSine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.InverseHyperbolicSine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/InverseHyperbolicTangent.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.InverseHyperbolicTangent",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Logarithm.js",
            "line": 25,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Logarithm",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Logarithm.js",
            "line": 38,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Logarithm",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Logarithm.js",
            "line": 97,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Logarithm",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Magnitude.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Magnitude",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Magnitude.js",
            "line": 34,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Magnitude",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Magnitude.js",
            "line": 67,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Magnitude",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 24,
            "description": "The function to display.",
            "itemtype": "attribute",
            "name": "func",
            "type": "{Y.MathFunction|String}",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 40,
            "description": "The font name to use.",
            "itemtype": "attribute",
            "name": "fontName",
            "type": "{String}",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 52,
            "description": "The font size to use, in em's.",
            "itemtype": "attribute",
            "name": "fontSize",
            "type": "{number}",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 64,
            "description": "The minimum width of the canvas.  If the expression is wider, the\nwidth will increase to fit.",
            "itemtype": "attribute",
            "name": "minWidth",
            "type": "{Integer}",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 77,
            "description": "The minimum height of the canvas.  If the expression is taller, the\nheight will increase to fit.",
            "itemtype": "attribute",
            "name": "minHeight",
            "type": "{Integer}",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 346,
            "description": "Shows touch keyboard.",
            "itemtype": "method",
            "name": "showKeyboard",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 377,
            "description": "Hides touch keyboard.",
            "itemtype": "method",
            "name": "hideKeyboard",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 408,
            "description": "Expands the selection up one level of the parse tree.",
            "itemtype": "method",
            "name": "expandSelection",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 426,
            "description": "Deletes the selected sub-expression.",
            "itemtype": "method",
            "name": "deleteSelection",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 439,
            "itemtype": "method",
            "name": "deleteFunction",
            "params": [
                {
                    "name": "f",
                    "description": "function to remove from the overall expression",
                    "type": "MathFunction"
                }
            ],
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 485,
            "description": "Renders the expression.",
            "itemtype": "method",
            "name": "_renderExpression",
            "access": "protected",
            "tagname": "",
            "class": "MathCanvas",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathCanvas.js",
            "line": 688,
            "description": "Parses a string into a Y.MathFunction.",
            "itemtype": "method",
            "name": "parse",
            "static": 1,
            "params": [
                {
                    "name": "expr",
                    "description": "expression to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "MathFunction"
            },
            "class": "MathCanvas.Parser",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 23,
            "itemtype": "method",
            "name": "getParent",
            "return": {
                "description": "parent function or null",
                "type": "MathFunction"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 32,
            "description": "Add the layout information for this object and its descendants to\nrect_list.",
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 62,
            "description": "Draw this object and its descendants.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 77,
            "description": "Must be implemented by derived classes.",
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 85,
            "description": "Must be implemented by derived classes.",
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 92,
            "itemtype": "method",
            "name": "parenthesizeForPrint",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ],
            "return": {
                "description": "true if f needs to parenthesize us",
                "type": "Boolean"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/MathFunction.js",
            "line": 104,
            "itemtype": "method",
            "name": "parenthesizeForRender",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "MathFunction"
                }
            ],
            "return": {
                "description": "true if f needs to parenthesize us",
                "type": "Boolean"
            },
            "class": "MathFunction",
            "module": "gallery-mathcanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/Max.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Max",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Min.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Min",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/NaturalLog.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.NaturalLog",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Negate.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Negate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Negate.js",
            "line": 34,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Negate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Negate.js",
            "line": 80,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Negate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Negate.js",
            "line": 102,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Negate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Phase.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Phase",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Pi.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Pi",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Pi.js",
            "line": 31,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Pi",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Product.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Product",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Product.js",
            "line": 32,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Product",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Product.js",
            "line": 96,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Product",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Product.js",
            "line": 131,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Product",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Quotient.js",
            "line": 25,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Quotient",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Quotient.js",
            "line": 37,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Quotient",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Quotient.js",
            "line": 103,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Quotient",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Quotient.js",
            "line": 128,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Quotient",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/RealPart.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.RealPart",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 23,
            "itemtype": "method",
            "name": "width",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "width"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 34,
            "itemtype": "method",
            "name": "height",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "height"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 45,
            "itemtype": "method",
            "name": "xcenter",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "horizontal center"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 56,
            "itemtype": "method",
            "name": "ycenter",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "vertical center"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 67,
            "itemtype": "method",
            "name": "area",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "area"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 78,
            "itemtype": "method",
            "name": "containsPt",
            "static": 1,
            "params": [
                {
                    "name": "r",
                    "description": "rectangle",
                    "type": "Rect"
                },
                {
                    "name": "xy",
                    "description": "point",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "true if rectangle contains point"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 91,
            "itemtype": "method",
            "name": "containsRect",
            "static": 1,
            "params": [
                {
                    "name": "r1",
                    "description": "",
                    "type": "Rect"
                },
                {
                    "name": "r2",
                    "description": "",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "true if r1 contains r2"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 104,
            "itemtype": "method",
            "name": "cover",
            "static": 1,
            "params": [
                {
                    "name": "r1",
                    "description": "rectangle",
                    "type": "Rect"
                },
                {
                    "name": "r2",
                    "description": "rectangle",
                    "type": "Rect"
                }
            ],
            "return": {
                "description": "rectangle convering both input arguments"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 125,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "r",
                    "description": "",
                    "type": "Rect"
                },
                {
                    "name": "midline",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "font_size",
                    "description": "percentage",
                    "type": "Int"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "MathFunction"
                }
            ],
            "return": {
                "description": "index of inserted item"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 150,
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "item at index"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 161,
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "f",
                    "description": "search target",
                    "type": "MathFunction"
                }
            ],
            "return": {
                "description": "data for specified MathFunction, or null if not found"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 175,
            "itemtype": "method",
            "name": "findIndex",
            "params": [
                {
                    "name": "f",
                    "description": "search target",
                    "type": "MathFunction"
                }
            ],
            "return": {
                "description": "index of item for specified MathFunction, or -1 if not found"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 186,
            "description": "Shift the specified rect and all rects inside it.",
            "itemtype": "method",
            "name": "shift",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "dx",
                    "description": "horizontal shift",
                    "type": "Int"
                },
                {
                    "name": "dy",
                    "description": "vertical shift",
                    "type": "Int"
                }
            ],
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 226,
            "description": "Set the midline of the specified rectangle.",
            "itemtype": "method",
            "name": "setMidline",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "midline",
                    "type": "Int"
                }
            ],
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 240,
            "itemtype": "method",
            "name": "getBounds",
            "return": {
                "description": "the bounding rect of all the rects in the list"
            },
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 249,
            "description": "Returns the index of the smallest rectangle that contains both\nstartPt and currPt.  Returns -1 if there is no such rectangle.  If\nstartPt is inside the bounding rectangle and currPt is outside, we\nreturn the index of the bounding rectangle.",
            "itemtype": "method",
            "name": "getSelection",
            "params": [
                {
                    "name": "start_pt",
                    "description": "point where the drag started",
                    "type": "Point"
                },
                {
                    "name": "curr_pt",
                    "description": "current cursor location",
                    "type": "Point"
                }
            ],
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/RectList.js",
            "line": 290,
            "description": "Returns the index of the smallest rectangle enclosing the given one.",
            "itemtype": "method",
            "name": "getParent",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Int"
                }
            ],
            "class": "MathCanvas.RectList",
            "module": "gallery-mathcanvas",
            "namespace": "MathCanvas"
        },
        {
            "file": "src/gallery-mathcanvas/js/Rotate.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Rotate",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Sine.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Sine",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/SquareRoot.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.SquareRoot",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/SquareRoot.js",
            "line": 34,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.SquareRoot",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/SquareRoot.js",
            "line": 69,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.SquareRoot",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/SquareRoot.js",
            "line": 83,
            "itemtype": "method",
            "name": "_drawSquareRoot",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Context2d"
                },
                {
                    "name": "rect",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "MathFunction.SquareRoot",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Sum.js",
            "line": 21,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Sum",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Sum.js",
            "line": 32,
            "itemtype": "method",
            "name": "prepareToRender",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "top_left",
                    "description": "x,y coordinates of the top left of the bounding box",
                    "type": "Point"
                },
                {
                    "name": "font_size",
                    "description": "percentage of the base font size",
                    "type": "Float"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "return": {
                "description": "index of this items info in rect_list",
                "type": "Int"
            },
            "class": "MathFunction.Sum",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Sum.js",
            "line": 120,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "canvas",
                    "description": "the drawing canvas",
                    "type": "MathCanvas"
                },
                {
                    "name": "rect_list",
                    "description": "layout information",
                    "type": "RectList"
                }
            ],
            "class": "MathFunction.Sum",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Sum.js",
            "line": 163,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Sum",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Tangent.js",
            "line": 23,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Tangent",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Value.js",
            "line": 39,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Value",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Value.js",
            "line": 49,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Value",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Variable.js",
            "line": 24,
            "itemtype": "method",
            "name": "evaluate",
            "params": [
                {
                    "name": "var_list",
                    "description": "map of variable names to values or MathFunctions",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the value of the function"
            },
            "class": "MathFunction.Variable",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-mathcanvas/js/Variable.js",
            "line": 41,
            "itemtype": "method",
            "name": "toString",
            "return": {
                "description": "text representation of the function"
            },
            "class": "MathFunction.Variable",
            "module": "gallery-mathcanvas",
            "namespace": "MathFunction"
        },
        {
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 33,
            "description": "The range of Unicode characters to use for the background noise.",
            "itemtype": "attribute",
            "name": "charRange",
            "type": "{Array}",
            "default": "['\\u30A1', '\\u30FA']",
            "class": "MatrixBackground",
            "module": "gallery-matrix-background"
        },
        {
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 51,
            "description": "Set to `true` to force a monospace font.  This only works if the\nbrowser can find a monospace version of the character range which\nyou are using.",
            "itemtype": "attribute",
            "name": "monospace",
            "type": "{Boolean}",
            "default": "true for IE, false for all other browsers",
            "class": "MatrixBackground",
            "module": "gallery-matrix-background"
        },
        {
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 66,
            "description": "If you do not have a monospace font for the charRange, set this to\n`true` to computer the widest character in the range.  Note that\nthis can take a long time if you have a large charRange!",
            "itemtype": "attribute",
            "name": "computeWidestChar",
            "type": "{Boolean}",
            "default": "false",
            "class": "MatrixBackground",
            "module": "gallery-matrix-background"
        },
        {
            "file": "src/gallery-matrix-background/js/MatrixBackground.js",
            "line": 81,
            "description": "Fraction of total columns that have a spinning character.",
            "itemtype": "attribute",
            "name": "spinFraction",
            "type": "{Number}",
            "default": "0.2",
            "class": "MatrixBackground",
            "module": "gallery-matrix-background"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 31,
            "description": "The sequence of messages to display.  Each item defines `intro`, a\nlist of strings to display immediately, `lines`, a list of strings\nto phase in one at a time, and (optional) `pause`, the number of\nmilliseconds to wait before continuing to the next item in the\nsequence.",
            "itemtype": "attribute",
            "name": "textSequence",
            "type": "{Array}",
            "required": 1,
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 48,
            "description": "Milliseconds to wait before starting the text sequence.",
            "itemtype": "attribute",
            "name": "introDelay",
            "type": "{Number}",
            "default": "5000",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 61,
            "description": "Overridden by `pause` values in `textSequence`.",
            "itemtype": "attribute",
            "name": "pagePause",
            "type": "{Number}",
            "default": "2000",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 74,
            "description": "Milliseconds to wait before restarting the text sequence.\nOverridden by `pause` value of last item in `textSequence`.",
            "itemtype": "attribute",
            "name": "restartDelay",
            "type": "{Number}",
            "default": "5000",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 88,
            "description": "<dl>\n<dt>none</dt><dd>Each line is drawn all at once and then begins to phase in.</dd>\n<dt>block</dt><dd>The text appears as a block cursor (\\u2588) scans across the container.</dd>\n<dt>char</dt><dd>The text appears as a randomly changing character scans across the container.</dd>\n</dl>",
            "itemtype": "attribute",
            "name": "cursor",
            "type": "{String}",
            "default": "\"block\"",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 108,
            "description": "The maximum number of iterations before a character is forced to the\nfinal value.  Each character stops changing when it hits the correct value\nor exceeds the maximum.  Specify zero to simply display the text.",
            "itemtype": "attribute",
            "name": "maxPhaseCount",
            "type": "{Number}",
            "default": "20",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 123,
            "description": "The range of Unicode characters to use for spinning characters.  For\nmost interesting results, all the characters in textSequence should\nbe in this range.",
            "itemtype": "attribute",
            "name": "charRange",
            "type": "{Array}",
            "default": "['!', '~']",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 143,
            "itemtype": "attribute",
            "name": "background",
            "type": "{Plugin.Base}",
            "default": "{MatrixBackground}",
            "writeonce": "",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-matrix-credits/js/MatrixCredits.js",
            "line": 159,
            "description": "Configuration for Y.MatrixBackground",
            "itemtype": "attribute",
            "name": "backgroundConfig",
            "type": "{Object}",
            "writeonce": "",
            "class": "MatrixCredits",
            "module": "gallery-matrix-credits"
        },
        {
            "file": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "line": 34,
            "description": "Adds the named method to the given rpc object.",
            "itemtype": "method",
            "name": "addMethod",
            "static": 1,
            "params": [
                {
                    "name": "rpc",
                    "description": "rpc object",
                    "type": "RPC.Mojito"
                },
                {
                    "name": "name",
                    "description": "name of method",
                    "type": "String"
                },
                {
                    "name": "force",
                    "description": "pass true to override existing method",
                    "type": "Boolean"
                }
            ],
            "class": "RPC.Mojito",
            "module": "gallery-mojito-rpc",
            "namespace": "RPC"
        },
        {
            "file": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "line": 68,
            "description": "Executes the named method via the mojitProxy and invokes the callback\nwhen the result is received.",
            "itemtype": "method",
            "name": "exec",
            "async": 1,
            "params": [
                {
                    "name": "method",
                    "description": "the name of the function to execute via the mojitProxy",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "array of arguments for the method",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to call on success or object specifying {context,on:{success,failure}}",
                    "type": "Function|Object"
                }
            ],
            "class": "RPC.Mojito",
            "module": "gallery-mojito-rpc",
            "namespace": "RPC"
        },
        {
            "file": "src/gallery-mojito-rpc/js/mojito-rpc.js",
            "line": 116,
            "itemtype": "method",
            "name": "mojito",
            "static": 1,
            "async": 1,
            "params": [
                {
                    "name": "proxy",
                    "description": "the mojit proxy",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "the name of the function to execute via the mojitProxy",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "array of arguments for the method",
                    "type": "Array"
                },
                {
                    "name": "callback",
                    "description": "(optional) function to call on success or object specifying {context,on:{success,failure}}",
                    "type": "Function|Object"
                },
                {
                    "name": "config",
                    "description": "config object passed to Y.RPC.Mojito constructo",
                    "type": "Object"
                }
            ],
            "class": "RPC.Mojito",
            "module": "gallery-mojito-rpc",
            "namespace": "RPC"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 54,
            "description": "Retrieve a value.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the object to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the stored object, or undefined if the slot is empty",
                "type": "Mixed"
            },
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 81,
            "description": "Store a value.",
            "itemtype": "method",
            "name": "put",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "false if the key has already been used",
                "type": "Boolean"
            },
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 132,
            "description": "Store a value.",
            "itemtype": "method",
            "name": "replace",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the original value that was in the slot, or undefined if the slot is empty",
                "type": "Mixed"
            },
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 149,
            "description": "Remove an value.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the value",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value that was removed, or undefined if the slot was empty",
                "type": "Mixed"
            },
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 169,
            "description": "Remove all values.",
            "itemtype": "method",
            "name": "clear",
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-mru-cache/js/MRUCache.js",
            "line": 181,
            "description": "This resets all the values.",
            "itemtype": "method",
            "name": "dumpStats",
            "return": {
                "description": "the current stats",
                "type": "Object"
            },
            "class": "MRUCache",
            "module": "gallery-mru-cache"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 162,
            "description": "Destroys the MultiObject, but not the individual objects.\n<code>destroy()</code> is, of course, delegated.",
            "itemtype": "method",
            "name": "multi_destroy",
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 173,
            "itemtype": "method",
            "name": "multi_get_primary_item_index",
            "return": {
                "description": "the index of the primary item"
            },
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 182,
            "itemtype": "method",
            "name": "multi_set_primary_item_index",
            "params": [
                {
                    "name": "index",
                    "description": "the index of the primary item",
                    "type": "Int"
                }
            ],
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 192,
            "itemtype": "method",
            "name": "multi_get_return_all_results",
            "return": {
                "description": "true if all results will be returned by delegated functions"
            },
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 201,
            "itemtype": "method",
            "name": "multi_set_return_all_results",
            "params": [
                {
                    "name": "all",
                    "description": "true if delegated functions should return all results",
                    "type": "Boolean"
                }
            ],
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-multiobject/js/MultiObject.js",
            "line": 211,
            "description": "Return an array of all the individual results from calling the\nspecified function.  This is only useful if return_all_results=false.",
            "itemtype": "method",
            "name": "multi_get_all",
            "params": [
                {
                    "name": "f",
                    "description": "name of the function to invoke",
                    "type": "String"
                },
                {
                    "name": "arg",
                    "description": "0..n arguments to pass to the function",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "results from delegating the named function",
                "type": "Array"
            },
            "class": "MultiObject",
            "module": "gallery-multiobject"
        },
        {
            "file": "src/gallery-neon/js/Neon.js",
            "line": 28,
            "description": "Background (starting) color.  Must be parseable by Y.Color.toRGB().",
            "itemtype": "attribute",
            "name": "backgroundColor",
            "type": "{String}",
            "class": "Plugin.Neon",
            "module": "gallery-neon",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-neon/js/Neon.js",
            "line": 39,
            "description": "Text (ending) color.  Must be parseable by Y.Color.toRGB().",
            "itemtype": "attribute",
            "name": "textColor",
            "type": "{String}",
            "class": "Plugin.Neon",
            "module": "gallery-neon",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-neon/js/Neon.js",
            "line": 50,
            "description": "Text shadow *template* for setting text-shadow CSS3 property.  Use\n{color} to mark where color should be inserted.",
            "itemtype": "attribute",
            "name": "textShadow",
            "type": "{String}",
            "class": "Plugin.Neon",
            "module": "gallery-neon",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-neon/js/Neon.js",
            "line": 62,
            "description": "The number of flickers before the text stays visible.",
            "itemtype": "attribute",
            "name": "flickerCount",
            "type": "{int}",
            "default": "10",
            "class": "Plugin.Neon",
            "module": "gallery-neon",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-neon/js/Neon.js",
            "line": 75,
            "description": "The easing to apply to the color animation.",
            "itemtype": "attribute",
            "name": "easing",
            "type": "{Function}",
            "default": "Y.Easing.easeIn",
            "class": "Plugin.Neon",
            "module": "gallery-neon",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 18,
            "description": "Useful when constructing regular expressions that match CSS classes.",
            "itemtype": "property",
            "name": "class_re_prefix",
            "static": 1,
            "type": "{String}",
            "value": "\"(?:^|\\\\s)(?:\"",
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 28,
            "description": "Useful when constructing regular expressions that match CSS classes.",
            "itemtype": "property",
            "name": "class_re_suffix",
            "static": 1,
            "type": "{String}",
            "value": "\")(?:\\\\s|$)\"",
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 38,
            "description": "<p>Patch to speed up search for a single class name or single tag name.\nTo use a regular expression, call getAncestorByClassName().</p>",
            "itemtype": "method",
            "name": "ancestor",
            "params": [
                {
                    "name": "fn",
                    "description": "selector string or boolean method for testing elements",
                    "type": "String|Function"
                },
                {
                    "name": "test_self",
                    "description": "pass true to include the element itself in the scan",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 73,
            "description": "<p>Searches for an ancestor by class name.  This is significantly faster\nthan using Y.node.ancestor('.classname'), and it accepts a regular\nexpression.</p>",
            "itemtype": "method",
            "name": "getAncestorByClassName",
            "params": [
                {
                    "name": "class_name",
                    "description": "class to search for",
                    "type": "String|Regexp"
                },
                {
                    "name": "test_self",
                    "description": "pass true to include the element itself in the scan",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 105,
            "description": "<p>Searches for an ancestor by tag name.  This is significantly faster\nthan using Y.node.ancestor('tagname').</p>",
            "itemtype": "method",
            "name": "getAncestorByTagName",
            "params": [
                {
                    "name": "tag_name",
                    "description": "tag name to search for",
                    "type": "String"
                },
                {
                    "name": "test_self",
                    "description": "pass true to include the element itself in the scan",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 207,
            "description": "<p>Searches for descendants by class name.  Unlike Y.all(), this\nfunction accepts a regular expression.</p>",
            "itemtype": "method",
            "name": "getElementsByClassName",
            "params": [
                {
                    "name": "class_name",
                    "description": "class to search for",
                    "type": "String|Regexp"
                },
                {
                    "name": "tag_name",
                    "description": "optional tag name to filter by",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "NodeList"
            },
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-optimizations/js/Optimizations.js",
            "line": 236,
            "description": "<p>Searches for one descendant by class name.  Unlike Y.one(), this\nfunction accepts a regular expression.  </p>",
            "itemtype": "method",
            "name": "getFirstElementByClassName",
            "params": [
                {
                    "name": "class_name",
                    "description": "class to search for",
                    "type": "String|Regexp"
                },
                {
                    "name": "tag_name",
                    "description": "optional tag name to filter by",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "Node~optimizations",
            "module": "gallery-node-optimizations"
        },
        {
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 14,
            "description": "Maximum height in pixels allowed for `Y.Node.adjustTextareaHeight()`.",
            "itemtype": "property",
            "name": "max_textarea_height",
            "type": "{Number}",
            "static": 1,
            "class": "Node~utils",
            "module": "gallery-node-utils"
        },
        {
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 23,
            "description": "Adjusts the height of a textarea to fit the text.",
            "itemtype": "method",
            "name": "adjustTextareaHeight",
            "static": 1,
            "params": [
                {
                    "name": "textarea",
                    "description": "textarea to adjust",
                    "type": "Node"
                }
            ],
            "class": "Node~utils",
            "module": "gallery-node-utils"
        },
        {
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 39,
            "description": "Positions the caret inside a text input or textarea.",
            "itemtype": "method",
            "name": "setCaretPosition",
            "params": [
                {
                    "name": "pos",
                    "description": "the location of the caret",
                    "type": "Number"
                }
            ],
            "class": "Node~utils",
            "module": "gallery-node-utils"
        },
        {
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 50,
            "description": "Selects part of the text in a text input or textarea.",
            "itemtype": "method",
            "name": "selectRange",
            "params": [
                {
                    "name": "start",
                    "description": "the start of the selection",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "the length of the selection",
                    "type": "Number"
                }
            ],
            "class": "Node~utils",
            "module": "gallery-node-utils"
        },
        {
            "file": "src/gallery-node-utils/js/utils.js",
            "line": 75,
            "description": "Selects all of the text in a text input or textarea.",
            "itemtype": "method",
            "name": "selectAllText",
            "class": "Node~utils",
            "module": "gallery-node-utils"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 17,
            "description": "Executes the supplied function on each Node in the NodeList.\nIteration stops if the supplied function does not return a truthy\nvalue.  The function receives the Node, the index, and the NodeList\nitself as parameters (in that order).",
            "itemtype": "method",
            "name": "every",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if every item in the array returns true from the supplied function, false otherwise",
                "type": "Boolean"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 38,
            "description": "Executes the supplied function on each Node in the NodeList,\nsearching for the first Node that matches the supplied function.\nThe function receives the Node, the index, and the NodeList itself\nas parameters (in that order).",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the first Node for which the supplied function returns true, or null if it never returns true",
                "type": "Node"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 61,
            "description": "Executes the supplied function on each Node in the NodeList and\nreturns a new array with the results.  The function receives the\nNode, the index, and the NodeList itself as parameters (in that order).",
            "itemtype": "method",
            "name": "map",
            "params": [
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "all return values, mapped according to the item key",
                "type": "Array"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 81,
            "description": "Partitions the NodeList into two new NodeLists, one with the items\nfor which the supplied function returns true, and one with the\nitems for which the function returns false.  The function receives\nthe Node, the index, and the NodeList itself as parameters (in that\norder).",
            "itemtype": "method",
            "name": "partition",
            "params": [
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object with two properties: matches and rejects. Each is a NodeList containing the items that were selected or rejected by the test function (or an empty object if none).",
                "type": "Object"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 112,
            "description": "Executes the supplied function on each Node in the NodeList, folding\nthe NodeList into a single value.  The function receives the value\nreturned by the previous iteration (or the initial value if this is\nthe first iteration), the Node being iterated, the index, and the\nNodeList itself as parameters (in that order).  The function must\nreturn the updated value.",
            "itemtype": "method",
            "name": "reduce",
            "params": [
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each Node in the NodeList",
                "type": "Mixed"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-nodelist-extras2/js/nodelist-extras2.js",
            "line": 136,
            "description": "Executes the supplied function on each Node in the NodeList,\nstarting at the end and folding the NodeList into a single value.\nThe function receives the value returned by the previous iteration\n(or the initial value if this is the first iteration), the Node\nbeing iterated, the index, and the NodeList itself as parameters (in\nthat order).  The function must return the updated value.",
            "itemtype": "method",
            "name": "reduceRight",
            "params": [
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each Node in the NodeList",
                "type": "Mixed"
            },
            "class": "NodeList~extras2",
            "module": "gallery-nodelist-extras2"
        },
        {
            "file": "src/gallery-object-extras/js/array-extras.js",
            "line": 11,
            "description": "Converts the array of objects into a map of the same objects, keyed\noff a particular attribute.",
            "itemtype": "method",
            "name": "toObject",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "the array to iterate",
                    "type": "Array"
                },
                {
                    "name": "k",
                    "description": "the attribute to key off",
                    "type": "String"
                }
            ],
            "return": {
                "description": "map of the objects",
                "type": "Object"
            },
            "class": "Array~object-extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 19,
            "description": "Executes the supplied function on each item in the object.\nIteration stops if the supplied function does not return a truthy\nvalue.  The function receives the value, the key, and the object\nitself as parameters (in that order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "every",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "true if every item in the array returns true from the supplied function, false otherwise",
                "type": "Boolean"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 49,
            "description": "Executes the supplied function on each item in the object.  Returns\na new object containing the items for which the supplied function\nreturned a truthy value.  The function receives the value, the key,\nand the object itself as parameters (in that order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "filter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "object of items for which the supplied function returned a truthy value (empty if it never returned a truthy value)",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 82,
            "description": "Executes the supplied function on each item in the object, searching\nfor the first item that matches the supplied function.  The function\nreceives the value, the key, and the object itself as parameters (in\nthat order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "find",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the first item for which the supplied function returns true, or null if it never returns true",
                "type": "Mixed"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 113,
            "description": "Executes the supplied function on each item in the object, searching\nfor the first item that matches the supplied function.\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "keyOf",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "v",
                    "description": "the value to search for",
                    "type": "Mixed"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "key of an item strictly equal to v, or null if not found",
                "type": "String"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 140,
            "description": "Executes a named method on each item in the object. Items that do\nnot have a function by that name will be skipped.",
            "itemtype": "method",
            "name": "invoke",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "any number of additional args are passed as parameters to the execution of the named method",
                    "type": "Any",
                    "multiple": true
                }
            ],
            "return": {
                "description": "all return values, mapped according to the item key",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 168,
            "description": "Executes the supplied function on each item in the object and\nreturns a new object with the results.  The function receives the\nvalue, the key, and the object itself as parameters (in that order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "map",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "all return values, mapped according to the item key",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 199,
            "description": "Partitions an object into two new objects, one with the items for\nwhich the supplied function returns true, and one with the items\nfor which the function returns false.  The function receives the\nvalue, the key, and the object itself as parameters (in that order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "partition",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "object with two properties: matches and rejects. Each is an object containing the items that were selected or rejected by the test function (or an empty object if none).",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 237,
            "description": "Executes the supplied function on each item in the object, folding\nthe object into a single value.  The function receives the value\nreturned by the previous iteration (or the initial value if this is\nthe first iteration), the value being iterated, the key, and the\nobject itself as parameters (in that order).  The function must\nreturn the updated value.\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "reduce",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the object",
                "type": "Mixed"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 272,
            "description": "Executes the supplied function on each item in the object.  Returns\na new object containing the items for which the supplied function\nreturned a falsey value.  The function receives the value, the key,\nand the object itself as parameters (in that order).\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.",
            "itemtype": "method",
            "name": "reject",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "f",
                    "description": "the function to execute on each item",
                    "type": "Function"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "object of items for which the supplied function returned a falsey value (empty if it never returned a falsey value)",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 298,
            "description": "Creates an object by pairing the corresponding elements of two arrays.",
            "itemtype": "method",
            "name": "zip",
            "static": 1,
            "params": [
                {
                    "name": "a1",
                    "description": "the keys which must be strings",
                    "type": "Array"
                },
                {
                    "name": "a2",
                    "description": "the values",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "object formed by pairing each element of the first array with an item in the second array having the corresponding index",
                "type": "Object"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 319,
            "description": "Extracts a value from an object, given a string containing a valid\nJavaScript expression.  In a browser, this uses eval().  In Adobe\nAIR, it parses the string, thereby restricting the syntax to only\ndot notation.",
            "itemtype": "method",
            "name": "evalGet",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object from which to extract a value",
                    "type": "Object"
                },
                {
                    "name": "s",
                    "description": "the expression",
                    "type": "String"
                }
            ],
            "return": {
                "description": "requested value",
                "type": "Mixed"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 357,
            "description": "Sets a value inside an object, given a string containing a valid\nJavaScript expression.  In a browser, this uses eval().  In Adobe\nAIR, it parses the string, thereby restricting the syntax to only\ndot notation.",
            "itemtype": "method",
            "name": "evalSet",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object in which to set a value",
                    "type": "Object"
                },
                {
                    "name": "s",
                    "description": "the expression",
                    "type": "String"
                },
                {
                    "name": "v",
                    "description": "the value to set",
                    "type": "Mixed"
                }
            ],
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-object-extras/js/object-extras.js",
            "line": 395,
            "description": "Executes the supplied function on each item in the object, starting at\nthe end and folding the object into a single value.  The function\nreceives the value returned by the previous iteration (or the initial\nvalue if this is the first iteration), the value being iterated, the\nkey, and the object itself as parameters (in that order).  The function\nmust return the updated value.\n\nBy default, only properties owned by obj are enumerated. To include\nprototype properties, set the proto parameter to true.\n\nSince the order of iteration is undefined for objects, this is identical\nto `reduce`.",
            "itemtype": "method",
            "name": "reduceRight",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "the object to iterate",
                    "type": "Object"
                },
                {
                    "name": "init",
                    "description": "the initial value",
                    "type": "Mixed"
                },
                {
                    "name": "f",
                    "description": "the function to invoke",
                    "type": "String"
                },
                {
                    "name": "c",
                    "description": "optional context object",
                    "type": "Object"
                },
                {
                    "name": "proto",
                    "description": "include prototype properties",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "final result from iteratively applying the given function to each item in the object",
                "type": "Mixed"
            },
            "class": "Object~extras",
            "module": "gallery-object-extras"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 32,
            "description": "CSS class assigned to the span",
            "itemtype": "attribute",
            "name": "pageInputClass",
            "default": "'yui-paginator-page-input'",
            "class": "Paginator.ui.CurrentPageInput",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 43,
            "description": "Used as innerHTML for the span.",
            "itemtype": "attribute",
            "name": "pageInputTemplate",
            "default": "'{currentPage} of {totalPages}'",
            "class": "Paginator.ui.CurrentPageInput",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 56,
            "description": "Removes the span node and clears event listeners.",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.CurrentPageInput",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 69,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.CurrentPageInput",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageInput.js",
            "line": 104,
            "description": "Swap the link and span nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.CurrentPageInput",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 31,
            "description": "CSS class assigned to the span containing the info.",
            "itemtype": "attribute",
            "name": "pageReportClass",
            "default": "'yui-paginator-current'",
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 42,
            "description": "Used as innerHTML for the span.  Place holders in the form of {name}\nwill be replaced with the so named value from the key:value map\ngenerated by the function held in the pageReportValueGenerator attribute.",
            "itemtype": "attribute",
            "name": "pageReportTemplate",
            "default": "'({currentPage} of {totalPages})'",
            "see": [
                "pageReportValueGenerator attribute"
            ],
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 56,
            "description": "Function to generate the value map used to populate the\npageReportTemplate.  The function is passed the Paginator instance as a\nparameter.  The default function returns a map with the following keys:\n<ul>\n<li>currentPage</li>\n<li>totalPages</li>\n<li>startIndex</li>\n<li>endIndex</li>\n<li>startRecord</li>\n<li>endRecord</li>\n<li>totalRecords</li>\n</ul>",
            "itemtype": "attribute",
            "name": "pageReportValueGenarator",
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 90,
            "description": "Replace place holders in a string with the named values found in an\nobject literal.",
            "static": 1,
            "itemtype": "method",
            "name": "sprintf",
            "params": [
                {
                    "name": "template",
                    "description": "The content string containing place holders",
                    "type": "String"
                },
                {
                    "name": "values",
                    "description": "The key:value pairs used to replace the place holders",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 107,
            "description": "Span node containing the formatted info",
            "itemtype": "property",
            "name": "span",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 116,
            "description": "Removes the link/span node and clears event listeners\nremoval.",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 127,
            "description": "Generate the span containing info formatted per the pageReportTemplate\nattribute.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/CurrentPageReport.js",
            "line": 147,
            "description": "Regenerate the content of the span if appropriate. Calls\nCurrentPageReport.sprintf with the value of the pageReportTemplate\nattribute and the value map returned from pageReportValueGenerator\nfunction.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.CurrentPageReport",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 31,
            "description": "Used as innerHTML for the first page link/span.",
            "itemtype": "attribute",
            "name": "firstPageLinkLabel",
            "default": "'&lt;&lt; first'",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 42,
            "description": "CSS class assigned to the link/span",
            "itemtype": "attribute",
            "name": "firstPageLinkClass",
            "default": "'yui-paginator-first'",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 56,
            "description": "The currently placed HTMLElement node",
            "itemtype": "property",
            "name": "current",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 64,
            "description": "Link node",
            "itemtype": "property",
            "name": "link",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 72,
            "description": "Span node (inactive link)",
            "itemtype": "property",
            "name": "span",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 81,
            "description": "Removes the link/span node and clears event listeners.",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 92,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 122,
            "description": "Swap the link and span nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 146,
            "description": "Rebuild the markup.",
            "itemtype": "method",
            "name": "rebuild",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/FirstPageLink.js",
            "line": 167,
            "description": "Listener for the link's onclick event.  Pass new value to setPage method.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "e",
                    "description": "The click event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.FirstPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 32,
            "description": "CSS class assigned to the span",
            "itemtype": "attribute",
            "name": "itemRangeDropdownClass",
            "default": "'yui-paginator-ir-dropdown'",
            "class": "Paginator.ui.ItemRangeDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 43,
            "description": "Used as innerHTML for the span.",
            "itemtype": "attribute",
            "name": "itemRangeDropdownTemplate",
            "default": "'{currentRange} of {totalItems}'",
            "class": "Paginator.ui.ItemRangeDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 56,
            "description": "Removes the link/span node and clears event listeners.",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.ItemRangeDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 69,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.ItemRangeDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ItemRangeDropdown.js",
            "line": 106,
            "description": "Swap the link and span nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.ItemRangeDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 31,
            "description": "CSS class assigned to the link/span",
            "itemtype": "attribute",
            "name": "lastPageLinkClass",
            "default": "'yui-paginator-last'",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 42,
            "description": "Used as innerHTML for the last page link/span.",
            "itemtype": "attribute",
            "name": "lastPageLinkLabel",
            "default": "'last &gt;&gt;'",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 55,
            "description": "Currently placed HTMLElement node",
            "itemtype": "property",
            "name": "current",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 63,
            "description": "Link HTMLElement node",
            "itemtype": "property",
            "name": "link",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 71,
            "description": "Span node (inactive link)",
            "itemtype": "property",
            "name": "span",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 79,
            "description": "Empty place holder node for when the last page link is inappropriate to\ndisplay in any form (unlimited paging).",
            "itemtype": "property",
            "name": "na",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 89,
            "description": "Removes the link/span node and clears event listeners",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 101,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 148,
            "description": "Swap the link, span, and na nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event (ignored)",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 177,
            "description": "Rebuild the markup.",
            "itemtype": "method",
            "name": "rebuild",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event (ignored)",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/LastPageLink.js",
            "line": 198,
            "description": "Listener for the link's onclick event.  Passes to setPage method.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "e",
                    "description": "The click event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.LastPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 31,
            "description": "CSS class assigned to the link/span",
            "itemtype": "attribute",
            "name": "nextPageLinkClass",
            "default": "'yui-paginator-next'",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 42,
            "description": "Used as innerHTML for the next page link/span.",
            "itemtype": "attribute",
            "name": "nextPageLinkLabel",
            "default": "'next &gt;'",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 55,
            "description": "Currently placed HTMLElement node",
            "itemtype": "property",
            "name": "current",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 63,
            "description": "Link node",
            "itemtype": "property",
            "name": "link",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 71,
            "description": "Span node (inactive link)",
            "itemtype": "property",
            "name": "span",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 80,
            "description": "Removes the link/span node and clears event listeners",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 91,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 123,
            "description": "Swap the link and span nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 149,
            "description": "Rebuild the markup.",
            "itemtype": "method",
            "name": "rebuild",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/NextPageLink.js",
            "line": 170,
            "description": "Listener for the link's onclick event.  Passes to setPage method.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "e",
                    "description": "The click event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.NextPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 33,
            "description": "CSS class assigned to the span containing the page links.",
            "itemtype": "attribute",
            "name": "pageLinksContainerClass",
            "default": "'yui-paginator-pages'",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 44,
            "description": "CSS class assigned to each page link/span.",
            "itemtype": "attribute",
            "name": "pageLinkClass",
            "default": "'yui-paginator-page'",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 55,
            "description": "CSS class assigned to the current page span.",
            "itemtype": "attribute",
            "name": "currentPageClass",
            "default": "'yui-paginator-current-page'",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 66,
            "description": "Maximum number of page links to display at one time.",
            "itemtype": "attribute",
            "name": "pageLinks",
            "default": "10",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 77,
            "description": "Function used generate the innerHTML for each page link/span.  The\nfunction receives as parameters the page number and a reference to the\npaginator object.",
            "itemtype": "attribute",
            "name": "pageLabelBuilder",
            "default": "function (page, paginator) { return page; }",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 90,
            "description": "Templates for generating page links.",
            "itemtype": "property",
            "name": "templates",
            "static": 1,
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 102,
            "description": "Calculates start and end page numbers given a current page, attempting\nto keep the current page in the middle",
            "static": 1,
            "itemtype": "method",
            "name": "calculateRange",
            "params": [
                {
                    "name": "currentPage",
                    "description": "The current page",
                    "type": "Int"
                },
                {
                    "name": "totalPages",
                    "description": "Maximum number of pages",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "numPages",
                    "description": "Preferred number of pages in range",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "[start_page_number, end_page_number]",
                "type": "Array"
            },
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 147,
            "description": "Current page",
            "itemtype": "property",
            "name": "current",
            "type": "number",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 155,
            "description": "Span node containing the page links",
            "itemtype": "property",
            "name": "container",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 164,
            "description": "Removes the page links container node and clears event listeners",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 174,
            "description": "Generate the nodes and return the container node containing page links\nappropriate to the current pagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 198,
            "description": "Update the links if appropriate",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 267,
            "description": "Force a rebuild of the page links.",
            "itemtype": "method",
            "name": "rebuild",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PageLinks.js",
            "line": 277,
            "description": "Listener for the container's onclick event.  Looks for qualifying link\nclicks, and pulls the page number from the link's page attribute.\nSends link's page attribute to the Paginator's setPage method.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "e",
                    "description": "The click event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.PageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 38,
            "description": "Base of id strings used for ui components.",
            "static": 1,
            "itemtype": "property",
            "name": "Paginator.ID_BASE",
            "type": "string",
            "access": "private",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 47,
            "description": "Used to identify unset, optional configurations, or used explicitly in\nthe case of totalRecords to indicate unlimited pagination.",
            "static": 1,
            "itemtype": "property",
            "name": "Paginator.VALUE_UNLIMITED",
            "type": "number",
            "final": 1,
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 57,
            "description": "Default template used by Paginator instances.  Update this if you want\nall new Paginators to use a different default template.",
            "static": 1,
            "itemtype": "property",
            "name": "Paginator.TEMPLATE_DEFAULT",
            "type": "string",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 66,
            "description": "Common alternate pagination format, including page links, links for\nprevious, next, first and last pages as well as a rows-per-page\ndropdown.  Offered as a convenience.",
            "static": 1,
            "itemtype": "property",
            "name": "Paginator.TEMPLATE_ROWS_PER_PAGE",
            "type": "string",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 76,
            "description": "Storage object for UI Components",
            "static": 1,
            "itemtype": "property",
            "name": "Paginator.ui",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 83,
            "description": "Similar to Y.Lang.isNumber, but allows numeric strings.  This is\nis used for attribute validation in conjunction with getters that return\nnumbers.",
            "itemtype": "method",
            "name": "Paginator.isNumeric",
            "params": [
                {
                    "name": "v",
                    "description": "value to be checked for number or numeric string",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "true if the input is coercable into a finite number",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 97,
            "description": "Return a number or null from input",
            "itemtype": "method",
            "name": "Paginator.toNumber",
            "params": [
                {
                    "name": "n",
                    "description": "a number or numeric string",
                    "type": "Number|String"
                }
            ],
            "return": {
                "description": "Number"
            },
            "static": 1,
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 114,
            "description": "REQUIRED. Number of records constituting a &quot;page&quot;",
            "itemtype": "attribute",
            "name": "rowsPerPage",
            "type": "integer",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 125,
            "description": "Total number of records to paginate through",
            "itemtype": "attribute",
            "name": "totalRecords",
            "type": "integer",
            "default": "0",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 137,
            "description": "Zero based index of the record considered first on the current page.\nFor page based interactions, don't modify this attribute directly;\nuse setPage(n).",
            "itemtype": "attribute",
            "name": "recordOffset",
            "type": "integer",
            "default": "0",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 160,
            "description": "Page to display on initial paint",
            "itemtype": "attribute",
            "name": "initialPage",
            "type": "integer",
            "default": "1",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 172,
            "description": "Template used to render controls.  The string will be used as\ninnerHTML on all specified container nodes.  Bracketed keys\n(e.g. {pageLinks}) in the string will be replaced with an instance\nof the so named ui component.",
            "see": [
                "Paginator.TEMPLATE_DEFAULT",
                "Paginator.TEMPLATE_ROWS_PER_PAGE"
            ],
            "itemtype": "attribute",
            "name": "template",
            "type": "string",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 187,
            "description": "Display pagination controls even when there is only one page.  Set\nto false to forgo rendering and/or hide the containers when there\nis only one page of data.  Note if you are using the rowsPerPage\ndropdown ui component, visibility will be maintained as long as the\nnumber of records exceeds the smallest page size.",
            "itemtype": "attribute",
            "name": "alwaysVisible",
            "type": "boolean",
            "default": "true",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 204,
            "description": "Unique id assigned to this instance",
            "itemtype": "attribute",
            "name": "id",
            "type": "integer",
            "final": 1,
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 217,
            "description": "Event fired when a change in pagination values is requested,\neither by interacting with the various ui components or via the\nsetStartIndex(n) etc APIs.\nSubscribers will receive the proposed state as the first parameter.\nThe proposed state object will contain the following keys:\n<ul>\n  <li>paginator - the Paginator instance</li>\n  <li>page</li>\n  <li>totalRecords</li>\n  <li>recordOffset - index of the first record on the new page</li>\n  <li>rowsPerPage</li>\n  <li>records - array containing [start index, end index] for the records on the new page</li>\n  <li>before - object literal with all these keys for the current state</li>\n</ul>",
            "itemtype": "event",
            "name": "changeRequest",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 235,
            "description": "Event fired when attribute changes have resulted in the calculated\ncurrent page changing.",
            "itemtype": "event",
            "name": "pageChange",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 247,
            "description": "Flag used to indicate multiple attributes are being updated via setState",
            "itemtype": "property",
            "name": "_batch",
            "type": "boolean",
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 255,
            "description": "Used by setState to indicate when a page change has occurred",
            "itemtype": "property",
            "name": "_pageChanged",
            "type": "boolean",
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 263,
            "description": "Temporary state cache used by setState to keep track of the previous\nstate for eventual pageChange event firing",
            "itemtype": "property",
            "name": "_state",
            "type": "Object",
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 293,
            "description": "Subscribes to instance attribute change events to automate certain\nbehaviors.",
            "itemtype": "method",
            "name": "_selfSubscribe",
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 324,
            "description": "Creates the individual ui components and renders them into a container.",
            "itemtype": "method",
            "name": "_renderTemplate",
            "params": [
                {
                    "name": "container",
                    "description": "where to add the ui components",
                    "type": "HTMLElement"
                },
                {
                    "name": "template",
                    "description": "the template to use as a guide for rendering",
                    "type": "String"
                },
                {
                    "name": "id_base",
                    "description": "id base for the container's ui components",
                    "type": "String"
                },
                {
                    "name": "hide",
                    "description": "leave the container hidden after assembly",
                    "type": "Boolean"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 364,
            "description": "Replaces a marker node with a rendered UI component, determined by the\nyui-paginator-ui-(UI component class name) in the marker's className. e.g.\nyui-paginator-ui-PageLinks => new Y.Paginator.ui.PageLinks(this)",
            "itemtype": "method",
            "name": "renderUIComponent",
            "params": [
                {
                    "name": "marker",
                    "description": "the marker node to replace",
                    "type": "HTMLElement"
                },
                {
                    "name": "id_base",
                    "description": "string base the component's generated id",
                    "type": "String"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 388,
            "description": "Hides the widget if there is only one page of data and attribute\nalwaysVisible is false.  Conversely, it displays the widget if either\nthere is more than one page worth of data or alwaysVisible is turned on.",
            "itemtype": "method",
            "name": "updateVisibility",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 422,
            "description": "Get the total number of pages in the data set according to the current\nrowsPerPage and totalRecords values.  If totalRecords is not set, or\nset to Y.Paginator.VALUE_UNLIMITED, returns Y.Paginator.VALUE_UNLIMITED.",
            "itemtype": "method",
            "name": "getTotalPages",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 445,
            "description": "Does the requested page have any records?",
            "itemtype": "method",
            "name": "hasPage",
            "params": [
                {
                    "name": "page",
                    "description": "the page in question",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 461,
            "description": "Get the page number corresponding to the current record offset.",
            "itemtype": "method",
            "name": "getCurrentPage",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 474,
            "description": "Are there records on the next page?",
            "itemtype": "method",
            "name": "hasNextPage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 486,
            "description": "Get the page number of the next page, or null if the current page is the\nlast page.",
            "itemtype": "method",
            "name": "getNextPage",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 496,
            "description": "Is there a page before the current page?",
            "itemtype": "method",
            "name": "hasPreviousPage",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 505,
            "description": "Get the page number of the previous page, or null if the current page\nis the first page.",
            "itemtype": "method",
            "name": "getPreviousPage",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 515,
            "description": "Get the start and end record indexes of the specified page.",
            "itemtype": "method",
            "name": "getPageRecords",
            "params": [
                {
                    "name": "page",
                    "description": "The page (current page if not specified)",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "[start_index, end_index]",
                "type": "Array"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 547,
            "description": "Set the current page to the provided page number if possible.",
            "itemtype": "method",
            "name": "setPage",
            "params": [
                {
                    "name": "newPage",
                    "description": "the new page number",
                    "type": "Number"
                },
                {
                    "name": "silent",
                    "description": "whether to forcibly avoid firing the changeRequest event",
                    "type": "Boolean"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 563,
            "description": "Get the number of rows per page.",
            "itemtype": "method",
            "name": "getRowsPerPage",
            "return": {
                "description": "the current setting of the rowsPerPage attribute",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 572,
            "description": "Set the number of rows per page.",
            "itemtype": "method",
            "name": "setRowsPerPage",
            "params": [
                {
                    "name": "rpp",
                    "description": "the new number of rows per page",
                    "type": "Number"
                },
                {
                    "name": "silent",
                    "description": "whether to forcibly avoid firing the changeRequest event",
                    "type": "Boolean"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 590,
            "description": "Get the total number of records.",
            "itemtype": "method",
            "name": "getTotalRecords",
            "return": {
                "description": "the current setting of totalRecords attribute",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 599,
            "description": "Set the total number of records.",
            "itemtype": "method",
            "name": "setTotalRecords",
            "params": [
                {
                    "name": "total",
                    "description": "the new total number of records",
                    "type": "Number"
                },
                {
                    "name": "silent",
                    "description": "whether to forcibly avoid firing the changeRequest event",
                    "type": "Boolean"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 617,
            "description": "Get the index of the first record on the current page",
            "itemtype": "method",
            "name": "getStartIndex",
            "return": {
                "description": "the index of the first record on the current page",
                "type": "Number"
            },
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 626,
            "description": "Move the record offset to a new starting index.  This will likely cause\nthe calculated current page to change.  You should probably use setPage.",
            "itemtype": "method",
            "name": "setStartIndex",
            "params": [
                {
                    "name": "offset",
                    "description": "the new record offset",
                    "type": "Number"
                },
                {
                    "name": "silent",
                    "description": "whether to forcibly avoid firing the changeRequest event",
                    "type": "Boolean"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 645,
            "description": "Get an object literal describing the current state of the paginator.  If\nan object literal of proposed values is passed, the proposed state will\nbe returned as an object literal with the following keys:\n<ul>\n<li>paginator - instance of the Paginator</li>\n<li>page - number</li>\n<li>totalRecords - number</li>\n<li>recordOffset - number</li>\n<li>rowsPerPage - number</li>\n<li>records - [ start_index, end_index ]</li>\n<li>before - (OPTIONAL) { state object literal for current state }</li>\n</ul>",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "",
                "type": "Object"
            },
            "params": [
                {
                    "name": "changes",
                    "description": "OPTIONAL object literal with proposed values\nSupported change keys include:\n<ul>\n<li>rowsPerPage</li>\n<li>totalRecords</li>\n<li>recordOffset OR</li>\n<li>page</li>\n</ul>",
                    "type": "Object"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 741,
            "description": "Convenience method to facilitate setting state attributes rowsPerPage,\ntotalRecords, recordOffset in batch.  Also supports calculating\nrecordOffset from state.page if state.recordOffset is not provided.\nFires only a single pageChange event, if appropriate.\nThis will not fire a changeRequest event.",
            "itemtype": "method",
            "name": "setState",
            "params": [
                {
                    "name": "state",
                    "description": "Object literal of attribute:value pairs to set",
                    "type": "Object"
                }
            ],
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 789,
            "description": "Sets recordOffset to the starting index of the previous page when\ntotalRecords is reduced below the current recordOffset.",
            "itemtype": "method",
            "name": "_syncRecordOffset",
            "params": [
                {
                    "name": "e",
                    "description": "totalRecordsChange event",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 815,
            "description": "Fires the pageChange event when the state attributes have changed in\nsuch a way as to locate the current recordOffset on a new page.",
            "itemtype": "method",
            "name": "_handleStateChange",
            "params": [
                {
                    "name": "e",
                    "description": "the attribute change event",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/Paginator.js",
            "line": 840,
            "description": "Fires a pageChange event in the form of a standard attribute change\nevent with additional properties prevState and newState.",
            "itemtype": "method",
            "name": "_firePageChange",
            "params": [
                {
                    "name": "state",
                    "description": "the result of getState(oldState)",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Paginator",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 31,
            "description": "CSS class assigned to the link/span",
            "itemtype": "attribute",
            "name": "previousPageLinkClass",
            "default": "'yui-paginator-previous'",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 42,
            "description": "Used as innerHTML for the previous page link/span.",
            "itemtype": "attribute",
            "name": "previousPageLinkLabel",
            "default": "'&lt; prev'",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 55,
            "description": "Currently placed HTMLElement node",
            "itemtype": "property",
            "name": "current",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 63,
            "description": "Link node",
            "itemtype": "property",
            "name": "link",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 71,
            "description": "Span node (inactive link)",
            "itemtype": "property",
            "name": "span",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 80,
            "description": "Removes the link/span node and clears event listeners",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 91,
            "description": "Generate the nodes and return the appropriate node given the current\npagination state.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 121,
            "description": "Swap the link and span nodes if appropriate.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/PreviousPageLink.js",
            "line": 145,
            "description": "Listener for the link's onclick event.  Passes to setPage method.",
            "itemtype": "method",
            "name": "onClick",
            "params": [
                {
                    "name": "e",
                    "description": "The click event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.PreviousPageLink",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 31,
            "description": "CSS class assigned to the select node",
            "itemtype": "attribute",
            "name": "rowsPerPageDropdownClass",
            "default": "'yui-paginator-rpp-options'",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 42,
            "description": "CSS class assigned to the select node",
            "itemtype": "attribute",
            "name": "rowsPerPageDropdownTitle",
            "default": "'Rows per page'",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 53,
            "description": "Array of available rows-per-page sizes.  Converted into select options.\nArray values may be positive integers or object literals in the form<br>\n{ value : NUMBER, text : STRING }",
            "itemtype": "attribute",
            "name": "rowsPerPageOptions",
            "default": "[]",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 68,
            "description": "select node",
            "itemtype": "property",
            "name": "select",
            "type": "HTMLElement",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 77,
            "description": "option node for the optional All value",
            "itemtype": "property",
            "name": "all",
            "type": "HTMLElement",
            "access": "protected",
            "tagname": "",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 87,
            "description": "Removes the select node and clears event listeners",
            "itemtype": "method",
            "name": "destroy",
            "access": "private",
            "tagname": "",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 97,
            "description": "Generate the select and option nodes and returns the select node.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "id_base",
                    "description": "used to create unique ids for generated nodes",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 117,
            "description": "(Re)generate the select options.",
            "itemtype": "method",
            "name": "rebuild",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 155,
            "description": "Select the appropriate option if changed.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "e",
                    "description": "The calling change event",
                    "type": "CustomEvent"
                }
            ],
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 179,
            "description": "Listener for the select's onchange event.  Sent to setRowsPerPage method.",
            "itemtype": "method",
            "name": "onChange",
            "params": [
                {
                    "name": "e",
                    "description": "The change event",
                    "type": "DOMEvent"
                }
            ],
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/RowsPerPageDropdown.js",
            "line": 189,
            "description": "Updates the all option value (and Paginator's rowsPerPage attribute if\nnecessary) in response to a change in the Paginator's totalRecords.",
            "itemtype": "method",
            "name": "_handleTotalRecordsChange",
            "params": [
                {
                    "name": "e",
                    "description": "attribute change event",
                    "type": "Event"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "Paginator.ui.RowsPerPageDropdown",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ValidationPageLinks.js",
            "line": 23,
            "description": "Array of status strings for each page.  If the status value for a page\nis not empty, it is used to build a CSS class for the page:\nyui3-has&lt;status&gt;",
            "itemtype": "attribute",
            "name": "pageStatus",
            "class": "Paginator.ui.ValidationPageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-paginator/js/ValidationPageLinks.js",
            "line": 36,
            "description": "Templates for generating page links.",
            "itemtype": "property",
            "name": "templates",
            "static": 1,
            "class": "Paginator.ui.ValidationPageLinks",
            "module": "gallery-paginator"
        },
        {
            "file": "src/gallery-popup/js/input-popup.js",
            "line": 47,
            "description": "Input field to use.",
            "itemtype": "attribute",
            "name": "inputField",
            "type": "{Node|String}",
            "required": 1,
            "writeonce": "",
            "class": "InputPopup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/input-popup.js",
            "line": 64,
            "description": "Selector for clickable elements inside the popup that should close it.",
            "itemtype": "attribute",
            "name": "clickNodes",
            "type": "{String}",
            "required": 1,
            "writeonce": "",
            "class": "InputPopup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/input-popup.js",
            "line": 79,
            "description": "Selector for clickable nodes in a `Y.Calendar` instance.",
            "itemtype": "property",
            "name": "CalendarNodes",
            "type": "{String}",
            "static": 1,
            "class": "InputPopup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/input-popup.js",
            "line": 88,
            "description": "Selector for clickable nodes in a `Y.Saw.Timepicker` instance.",
            "itemtype": "property",
            "name": "TimePickerNodes",
            "type": "{String}",
            "static": 1,
            "class": "InputPopup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/popup.js",
            "line": 63,
            "description": "Add an additional event which should hide the popup.",
            "itemtype": "method",
            "name": "appendHideOn",
            "chainable": 1,
            "params": [
                {
                    "name": "o",
                    "description": "The event description (node, eventName, keyCode)",
                    "type": "Object"
                }
            ],
            "class": "Popup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/popup.js",
            "line": 133,
            "description": "List of { node, eventName, keyCode } describing the events that\nshould trigger showing the popup.  `node` and `eventName` are\nrequired.",
            "itemtype": "attribute",
            "name": "showOn",
            "type": "{Array}",
            "class": "Popup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/popup.js",
            "line": 147,
            "description": "List of { node, eventName, keyCode } describing the events that\nshould keep the popup open.  These block hideOn from being\ntriggered.  `node` and `eventName` are required.",
            "itemtype": "attribute",
            "name": "stayOpenOn",
            "type": "{Array}",
            "class": "Popup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-popup/js/popup.js",
            "line": 161,
            "description": "Set to `true` to reparent the popup to the body element.",
            "itemtype": "attribute",
            "name": "reparentToBody",
            "type": "{Boolean}",
            "default": "false",
            "writeonce": "",
            "class": "Popup",
            "module": "gallery-popup"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 96,
            "description": "The prompt displayed when a new item is added to the query.",
            "itemtype": "attribute",
            "name": "chooseVarPrompt",
            "type": "{String}",
            "default": "\"Choose a variable\"",
            "writeonce": "",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 111,
            "description": "All generated form field names start with this prefix.  This avoids\nconflicts if you have more than one QueryBuilder on a page.",
            "itemtype": "attribute",
            "name": "fieldPrefix",
            "type": "{String}",
            "default": "\"\"",
            "writeonce": "",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 127,
            "description": "Configuration passed to plugins when they are constructed.",
            "itemtype": "attribute",
            "name": "pluginConfig",
            "type": "{Object}",
            "default": "{}",
            "writeonce": "",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 143,
            "itemtype": "event",
            "name": "queryChanged",
            "description": "Fires when the query is modified.",
            "params": [
                {
                    "name": "info",
                    "description": "`remove` is `true` if a row was removed",
                    "type": "Object"
                }
            ],
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 257,
            "description": "Reset the query.",
            "itemtype": "method",
            "name": "reset",
            "params": [
                {
                    "name": "var_list",
                    "description": "If specified, the list of available variables is replaced.",
                    "type": "Array"
                },
                {
                    "name": "operators",
                    "description": "If specified, the operators for all variable types will be replaced.",
                    "type": "Object"
                }
            ],
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 293,
            "description": "Append a new query condition to the table.",
            "itemtype": "method",
            "name": "appendNew",
            "params": [
                {
                    "name": "name",
                    "description": "If specified, this variable is selected.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "If specified, this value is selected.  Refer to the appropriate plugin documentation to figure out what data to pass.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "plugin that was created for the row, if any",
                "type": "Object"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 417,
            "description": "Set the value of the specified row.",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "row_index",
                    "description": "The index of the row",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "If specified, the value to set (Refer to the appropriate plugin documentation to figure out what data to pass.)",
                    "type": "Mixed"
                }
            ],
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 519,
            "description": "Removes the specified row.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "row_index",
                    "description": "The index of the row",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "`true` if successful",
                "type": "Boolean"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 568,
            "description": "Validate the fields in each row.",
            "itemtype": "method",
            "name": "validateFields",
            "return": {
                "description": "`true` if all values are valid",
                "type": "Boolean"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 605,
            "itemtype": "method",
            "name": "clearFieldMessages",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 623,
            "description": "Display a message for the specified field.",
            "itemtype": "method",
            "name": "displayFieldMessage",
            "params": [
                {
                    "name": "e",
                    "description": "The selector for the element or the element itself",
                    "type": "String|Object"
                },
                {
                    "name": "msg",
                    "description": "The message",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "The message type (see Y.FormManager.status_order)",
                    "type": "String"
                },
                {
                    "name": "scroll",
                    "description": "`true` if the form row should be scrolled into view",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "return": {
                "description": "true if the message was displayed, false if a higher precedence message was already there",
                "type": "Boolean"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 650,
            "description": "Returns plugin used for the specified row, if any.",
            "itemtype": "method",
            "name": "getPlugin",
            "params": [
                {
                    "name": "row_index",
                    "description": "The index of the row",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "the plugin for the row, if any",
                "type": "Object"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 663,
            "itemtype": "method",
            "name": "toDatabaseQuery",
            "return": {
                "description": "list of [var, op, value] tuples suitable for a database query",
                "type": "Array"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 688,
            "description": "Updates internal data to match ordering of rows.  Useful after\nDrag-and-Drop operation is finished.",
            "itemtype": "method",
            "name": "rowsReordered",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 714,
            "itemtype": "method",
            "name": "_renumberRows",
            "access": "private",
            "tagname": "",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 738,
            "itemtype": "method",
            "name": "_createContainer",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "container for one piece of a query row",
                "type": "DOM element"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 748,
            "description": "Fires the queryChanged event.",
            "itemtype": "method",
            "name": "_notifyChanged",
            "access": "protected",
            "tagname": "",
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 763,
            "itemtype": "method",
            "name": "variableName",
            "params": [
                {
                    "name": "i",
                    "description": "query row index",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "name for the select form element listing the available query variables",
                "type": "String"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 778,
            "itemtype": "method",
            "name": "_variablesMenu",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "menu_name",
                    "description": "name for the select form element",
                    "type": "String"
                }
            ],
            "return": {
                "description": "markup for the query variable menu",
                "type": "String"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 799,
            "itemtype": "method",
            "name": "_rowControls",
            "access": "protected",
            "tagname": "",
            "return": {
                "description": "markup for the row controls (insert and remove)",
                "type": "String"
            },
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/QueryBuilder.js",
            "line": 825,
            "description": "<p>Environment information.</p>\n\n<dl>\n<dt>has_bubble_problem</dt>\n<dd>True if change events from select elements do not bubble.</dd>\n</dl>",
            "itemtype": "property",
            "name": "Env",
            "type": "{Object}",
            "static": 1,
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder/js/Types.js",
            "line": 9,
            "description": "<p>Mapping of variable types to plugin classes.  (Always introduce new\nvariable types rather than changing the existing mappings.)</p>\n\n<dl>\n<dt>string</dt>\n<dd>Generic string.</dd>\n<dt>number</dt>\n<dd>Generic number.  You must specify appropriate validations, e.g., yiv-integer or yiv-decimal.</dd>\n<dt>select</dt>\n<dd>Generic list of values.</dd>\n</dl>",
            "itemtype": "property",
            "name": "plugin_mapping",
            "type": "{Object}",
            "static": 1,
            "class": "QueryBuilder",
            "module": "gallery-querybuilder"
        },
        {
            "file": "src/gallery-querybuilder-multiselect-input/js/multiselect-input.js",
            "line": 34,
            "description": "<p>Map of localizable strings.</p>\n\n<dl>\n<dt>required</dt>\n<dd>Displayed when the field is left empty.</dd>\n</dl>",
            "itemtype": "property",
            "name": "Strings",
            "type": "{Object}",
            "static": 1,
            "class": "QueryBuilder.MultiselectInput",
            "module": "gallery-querybuilder",
            "submodule": "gallery-querybuilder-multiselect-input",
            "namespace": "QueryBuilder"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 132,
            "itemtype": "attribute",
            "name": "changesAlwaysInclude",
            "description": "Record keys to always include in result from getChanges().",
            "type": "Array",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 143,
            "itemtype": "attribute",
            "name": "includeAllRowsInChanges",
            "description": "If true, getChanges() returns a record for every row, even if the record is empty.  Set to false if you want getChanges() to only return records that contain data.",
            "type": "Boolean",
            "default": "true",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 155,
            "itemtype": "attribute",
            "name": "includeRowIndexInChanges",
            "description": "If true, getChanges() includes the row index in each record, using the _row_index key.",
            "type": "Boolean",
            "default": "false",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 176,
            "description": "The CSS class that marks the container for the error message inside a cell.",
            "itemtype": "property",
            "name": "error_text_class",
            "static": 1,
            "type": "{String}",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 185,
            "description": "The markup for the container for the error message inside a cell.",
            "itemtype": "property",
            "name": "error_display_markup",
            "static": 1,
            "type": "{String}",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 194,
            "description": "The CSS class that marks the \"Copy Down\" button inside a cell.",
            "itemtype": "property",
            "name": "copy_down_button_class",
            "static": 1,
            "type": "{String}",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 203,
            "description": "Called with exactly the same arguments as any other cell\nformatter, this function displays an input field.",
            "itemtype": "method",
            "name": "textFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "standard DataTable formatter data",
                    "type": "Object"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 227,
            "description": "Called with exactly the same arguments as any other cell\nformatter, this function displays a textarea field.",
            "itemtype": "method",
            "name": "textareaFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "standard DataTable formatter data",
                    "type": "Object"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 251,
            "description": "Called with exactly the same arguments as any other cell\nformatter, this function displays an email address without the\nanchor tag.  Use this as the column's qeFormatter if the column\nshould not be editable in QuickEdit mode.",
            "itemtype": "method",
            "name": "readonlyEmailFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "standard DataTable formatter data",
                    "type": "Object"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 266,
            "description": "Called with exactly the same arguments as any other cell\nformatter, this function displays a link without the anchor tag.\nUse this as the column's qeFormatter if the column should not be\neditable in QuickEdit mode.",
            "itemtype": "method",
            "name": "readonlyLinkFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "standard DataTable formatter data",
                    "type": "Object"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 319,
            "description": "Inserts a \"Copy down\" button if the cell is in the first row of the\nDataTable.  Call this at the end of your QuickEdit formatter.",
            "itemtype": "method",
            "name": "copyDownFormatter",
            "static": 1,
            "params": [
                {
                    "name": "o",
                    "description": "cell formatter object",
                    "type": "Object"
                },
                {
                    "name": "td",
                    "description": "cell",
                    "type": "Node"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 489,
            "description": "Switch to QuickEdit mode.  Columns that have quickEdit defined will\nbe editable.  If the table has paginators, you must hide them.",
            "itemtype": "method",
            "name": "start",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 556,
            "description": "Stop QuickEdit mode.  THIS DISCARDS ALL DATA!  If you want to save\nthe data, call getChanges() BEFORE calling this function.  If the\ntable has paginators, you must show them.",
            "itemtype": "method",
            "name": "cancel",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 601,
            "description": "Return the changed values.  For each row, an object is created with\nonly the changed values.  The object keys are the column keys.  If\nyou need values from particular columns to be included always, even\nif the value did not change, include the key `changesAlwaysInclude`\nin the plugin configuration and pass an array of column keys.\nIf you need the row indexes, configure `includeRowIndexInChanges`.\n\nIf you only want the records with changes, configure\n`includeAllRowsInChanges` to be false.  For this to be useful, you\nwill need to configure either `changesAlwaysInclude` or\n`includeRowIndexInChanges`.",
            "itemtype": "method",
            "name": "getChanges",
            "return": {
                "description": "array of objects if all validations pass, false otherwise",
                "type": "Mixed"
            },
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 675,
            "description": "Validate the QuickEdit data.",
            "itemtype": "method",
            "name": "validate",
            "return": {
                "description": "true if all validation checks pass",
                "type": "Boolean"
            },
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 703,
            "description": "Clear all validation messages in QuickEdit mode.",
            "itemtype": "method",
            "name": "clearMessages",
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 723,
            "description": "Display a message for a QuickEdit field.  If an existing message with\na higher precedence is already visible, it will not be replaced.",
            "itemtype": "method",
            "name": "displayMessage",
            "params": [
                {
                    "name": "e",
                    "description": "form field",
                    "type": "Element"
                },
                {
                    "name": "msg",
                    "description": "message to display",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "message type: error, warn, success, info",
                    "type": "String"
                },
                {
                    "name": "scroll",
                    "description": "If false, does not scroll, even if this is the first message to display.",
                    "type": "Boolean"
                }
            ],
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 771,
            "description": "Return the status of the field.",
            "itemtype": "method",
            "name": "_getElementStatus",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "form field",
                    "type": "Node"
                },
                {
                    "name": "r",
                    "description": "regex to match against className",
                    "type": "RegExp"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-quickedit/js/QuickEdit.js",
            "line": 788,
            "description": "Return the column key for the specified field.",
            "itemtype": "method",
            "name": "_getColumnKey",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "form field",
                    "type": "Node"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Plugin.DataTableQuickEdit",
            "module": "gallery-quickedit",
            "namespace": "Plugin"
        },
        {
            "file": "src/gallery-scrollintoview/js/ScrollIntoView.js",
            "line": 189,
            "description": "To receive notification of when the animation finishes, subscribe to the\nevent `scrollIntoViewFinished` on the Y.Node instance.  For consistency,\nthis event always fires, even without animation.\n\nIf you modify the ancestor chain while the animation is running, the\nresults will be unpredictable.",
            "itemtype": "method",
            "name": "scrollIntoView",
            "params": [
                {
                    "name": "config",
                    "description": "configuration",
                    "optional": true,
                    "props": [
                        {
                            "name": "anim",
                            "description": "true to use default duration and easing, or object",
                            "optional": true,
                            "props": [
                                {
                                    "name": "duration",
                                    "description": "duration of animation",
                                    "optional": true
                                },
                                {
                                    "name": "easing",
                                    "description": "easing used during animation",
                                    "optional": true
                                }
                            ]
                        },
                        {
                            "name": "margin",
                            "description": "viewport margins, to avoid ending up under an element with `position:fixed`",
                            "optional": true,
                            "props": [
                                {
                                    "name": "top",
                                    "description": "top margin (px)",
                                    "optional": true
                                },
                                {
                                    "name": "bottom",
                                    "description": "bottom margin (px)",
                                    "optional": true
                                },
                                {
                                    "name": "left",
                                    "description": "left margin (px)",
                                    "optional": true
                                },
                                {
                                    "name": "right",
                                    "description": "right margin (px)",
                                    "optional": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "chainable": 1,
            "class": "Node~scrollIntoView",
            "module": "gallery-scrollintoview"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 18,
            "description": "Utility function for extracting the same value from both comparator\narguments.",
            "itemtype": "method",
            "name": "drill",
            "static": 1,
            "params": [
                {
                    "name": "key",
                    "description": "path to element stored in both a and b",
                    "type": "Array"
                },
                {
                    "name": "a",
                    "description": "first object to compare",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "second object to compare",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "values extracted from a and b",
                "type": "Array"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 44,
            "description": "The default behavior for sorting strings.  Provided for cases where one\nneeds to compare object members.",
            "itemtype": "method",
            "name": "compareAsString",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "first string to compare",
                    "type": "String"
                },
                {
                    "name": "b",
                    "description": "second string to compare",
                    "type": "String"
                }
            ],
            "return": {
                "description": "-1,0,+1 based on comparing the strings",
                "type": "Number"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 59,
            "itemtype": "method",
            "name": "compareAsStringNoCase",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "first string to compare",
                    "type": "String"
                },
                {
                    "name": "b",
                    "description": "second string to compare",
                    "type": "String"
                }
            ],
            "return": {
                "description": "-1,0,+1 based on comparing the strings when ignoring case",
                "type": "Number"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 73,
            "description": "The default behavior for sorting numbers.  Provided for cases where one\nneeds to compare object members.",
            "itemtype": "method",
            "name": "compareAsNumber",
            "static": 1,
            "params": [
                {
                    "name": "a",
                    "description": "first number to compare",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "second number to compare",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "-1,0,+1 based on comparing the values",
                "type": "Number"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 88,
            "description": "<p>Sort by an object member:\n`sort(Y.bind(Y.Sort.compareKey, null, Y.Sort.compareAs*, key_or_path))`</p>\n\n<p>Key can be an array, to drill deep inside the objects, e.g.,\n`['foo','bar','baz']` translates to a.foo.bar.baz</p>",
            "itemtype": "method",
            "name": "compareKey",
            "static": 1,
            "params": [
                {
                    "name": "f",
                    "description": "comparator",
                    "type": "Function"
                },
                {
                    "name": "key",
                    "description": "object key or path to the value which should be compared",
                    "type": "String|Array"
                }
            ],
            "return": {
                "description": "-1,0,+1 based on comparing the values",
                "type": "Number"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-sort-extras/js/sort-extras.js",
            "line": 114,
            "description": "Flip the sort order:  `sort(Y.Sort.flip(comparator))`",
            "itemtype": "method",
            "name": "flip",
            "static": 1,
            "params": [
                {
                    "name": "f",
                    "description": "original comparator which takes 2 arguments",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "new comparator that inverts the sort order",
                "type": "Function"
            },
            "class": "Sort",
            "module": "gallery-sort-extras"
        },
        {
            "file": "src/gallery-table-utils/js/utils.js",
            "line": 7,
            "description": "<p>Utilities for tables.</p>",
            "mainName": "gallery-table-utils",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "class": "Assert",
            "module": "gallery-table-utils"
        },
        {
            "file": "src/gallery-table-utils/js/utils.js",
            "line": 13,
            "description": "Saves the current vertical scroll position and listens for the\nappropriate event to trigger restoring the position.",
            "itemtype": "method",
            "name": "preserveScrollPosition",
            "static": 1,
            "params": [
                {
                    "name": "table",
                    "description": "DataTable or BulkEditor",
                    "type": "Widget"
                },
                {
                    "name": "type",
                    "description": "\"table\" or \"bulkeditor\"",
                    "type": "String"
                }
            ],
            "class": "Assert",
            "module": "gallery-table-utils"
        },
        {
            "file": "src/gallery-test-extras/js/Assert.js",
            "line": 18,
            "description": "Asserts that the mantissas of two values are with epsilon of each\nother.  (The test automatically fails if the exponents are different.)",
            "itemtype": "method",
            "name": "areWithinEpsilon",
            "static": 1,
            "params": [
                {
                    "name": "expected",
                    "description": "the expected value",
                    "type": "Number"
                },
                {
                    "name": "actual",
                    "description": "the actual value to test",
                    "type": "Number"
                },
                {
                    "name": "epsilon",
                    "description": "the maximum allowed difference in the mantissas",
                    "type": "Number"
                }
            ],
            "class": "Assert",
            "module": "gallery-test-extras"
        },
        {
            "file": "src/gallery-test-extras/js/Assert.js",
            "line": 45,
            "description": "Asserts that both real and imaginary parts of two complex values are\nwith epsilon of each other.  (The test automatically fails if the\nexponents are different.)",
            "itemtype": "method",
            "name": "complexWithinEpsilon",
            "static": 1,
            "params": [
                {
                    "name": "expected",
                    "description": "the expected value",
                    "type": "ComplexNumber"
                },
                {
                    "name": "actual",
                    "description": "the actual value to test",
                    "type": "ComplexNumber"
                },
                {
                    "name": "epsilon",
                    "description": "the maximum allowed difference in the mantissas",
                    "type": "ComplexNumber"
                }
            ],
            "class": "Assert",
            "module": "gallery-test-extras"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 25,
            "description": "Object returned by saveOpenState(), used to initialize the open\nelements.",
            "itemtype": "attribute",
            "name": "openState",
            "type": "Object",
            "writeonce": "",
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 38,
            "description": "Message displayed below the last row if paginating children.  The\nmessage must include `&lt;a href=\"{href}\" class=\"{css}\"&gt;` to\nprovide a link to go to the next page.",
            "itemtype": "attribute",
            "name": "moreRowsMessage",
            "type": "String",
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 56,
            "description": "The class added to rows created by this plugin.",
            "itemtype": "property",
            "name": "Y.RowExpansion.row_class",
            "type": "{String}",
            "value": "\"row-expansion\"",
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 65,
            "description": "Formatter for open/close twistdown.",
            "itemtype": "method",
            "name": "twistdownFormatter",
            "static": 1,
            "params": [
                {
                    "name": "send_request",
                    "description": "Function that reloads DataTable",
                    "type": "Function"
                }
            ],
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 150,
            "description": "Default formatter for indented column.",
            "itemtype": "method",
            "name": "treeValueFormatter",
            "static": 1,
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 164,
            "description": "Add node id's to an existing openState object.",
            "itemtype": "method",
            "name": "augmentOpenState",
            "static": 1,
            "params": [
                {
                    "name": "open_state",
                    "description": "opaque object containing the open state of all the nodes",
                    "type": "Object"
                },
                {
                    "name": "ids",
                    "description": "list of ids to add to the open state",
                    "type": "Array"
                }
            ],
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/Treeble.js",
            "line": 201,
            "itemtype": "method",
            "name": "saveOpenState",
            "return": {
                "description": "opaque object containing the open state of all the nodes",
                "type": "Object"
            },
            "class": "Treeble",
            "module": "gallery-treeble"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 36,
            "description": "<p>The root datasource.</p>\n\n<p>You <em>must</em> directly set a `treeble_config` object on this\ndatasource.  (You cannot use `set('treeble_config',...)`.)  By\nsetting it on each datasource, we allow hetrogeneous datasources to\nbe displayed in a single tree. `treeble_config` can contain the\nfollowing configuration:</p>\n\n<dl>\n<dt>generateRequest</dt>\n<dd>(required) The function to convert the initial request into\n\t\ta request usable by the actual DataSource.  This function takes\n\t\ttwo arguments: state (sort,dir,startIndex,resultCount) and path\n\t\t(an array of node indices telling how to reach the node).\n\t\t</dd>\n<dt>requestCfg</dt>\n<dd>(optional) Configuration object passed as `cfg` to `sendRequest`.</dd>\n<dt>schemaPluginConfig</dt>\n<dd>(required) Object to pass to `plug` to install a schema.</dd>\n<dt>cachePluginConfig</dt>\n<dd>(optional) Object to pass to `plug` to install a cache.</dd>\n<dt>childNodesKey</dt>\n<dd>(semi-optional) The name of the key inside a node which contains\n\t\tthe data used to construct the DataSource for retrieving the children.\n\t\tThis config is only required if you provide a custom parser.</dd>\n<dt>nodeOpenKey</dt>\n<dd>(optional) The name of the key inside a node which contains\n\t\tthe initial open state of the node.  If it is true, the node will\n\t\tautomatically be opened the first time it is shown.  (After that,\n\t\tit will remember the state set by the user.)</dd>\n<dt>startIndexExpr</dt>\n<dd>(optional) OGNL expression telling how to extract the startIndex\n\t\tfrom the received data, e.g., `.meta.startIndex`.  If it is not\n\t\tprovided, startIndex is always assumed to be zero.</dd>\n<dt>totalRecordsExpr</dt>\n<dd>(semi-optional) OGNL expression telling how to extract the total number\n\t\tof records from the received data, e.g., `.meta.totalRecords`.\n\t\tIf this is not provided, `totalRecordsReturnExpr` must be\n\t\tspecified.</dd>\n<dt>totalRecordsReturnExpr</dt>\n<dd>(semi-optional) OGNL expression telling where in the response to store\n\t\tthe total number of records, e.g., `.meta.totalRecords`.\n\t\tThis is only appropriate for DataSources that always return the\n\t\tentire data set.  If this is not provided, `totalRecordsExpr` must\n\t\tbe specified.  If both are provided, `totalRecordsExpr` takes\n\t\tpriority.</dd>\n</dl>",
            "itemtype": "attribute",
            "name": "root",
            "type": "{DataSource}",
            "writeonce": "",
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 94,
            "description": "Pass `true` to paginate the result after merging child nodes into\nthe list.  The default (`false`) is to paginate only root nodes, so\nall children are visible.",
            "itemtype": "attribute",
            "name": "paginateChildren",
            "type": "{boolean}",
            "default": "false",
            "writeonce": "",
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 111,
            "description": "The key in each record that stores an identifier which is unique\nacross the entire tree.  If this is not specified, then all nodes\nwill close when the data is sorted.",
            "itemtype": "attribute",
            "name": "uniqueIdKey",
            "type": "{String}",
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 125,
            "itemtype": "event",
            "name": "toggled",
            "description": "Fires after an element is opened or closed.",
            "params": [
                {
                    "name": "path",
                    "description": "the path to the toggled element",
                    "type": "Array"
                },
                {
                    "name": "open",
                    "description": "the new state of the element",
                    "type": "Boolean"
                }
            ],
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 924,
            "itemtype": "method",
            "name": "isOpen",
            "params": [
                {
                    "name": "path",
                    "description": "Path to node",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "true if the node is open",
                "type": "Boolean"
            },
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 945,
            "description": "Toggle the specified node between open and closed.  When a node is\nopened for the first time, this requires a request to the\nDataSource.  Any code that assumes the node has been opened must be\npassed in as a completion function.",
            "itemtype": "method",
            "name": "toggle",
            "params": [
                {
                    "name": "path",
                    "description": "Path to the node",
                    "type": "Array"
                },
                {
                    "name": "request",
                    "description": "{sort,dir,startIndex,resultCount}",
                    "type": "Object"
                },
                {
                    "name": "completion",
                    "description": "Function to call when the operation completes.  Can be object: {fn,scope,args}",
                    "type": "Function|Object"
                }
            ],
            "return": {
                "description": "false if the path to the node has not yet been fully explored or is not openable, true otherwise",
                "type": "Boolean"
            },
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 994,
            "itemtype": "method",
            "name": "getOpenNodeIds",
            "return": {
                "description": "id's of open nodes",
                "type": "Array"
            },
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 1021,
            "itemtype": "method",
            "name": "setOpenNodeIds",
            "params": [
                {
                    "name": "id's",
                    "description": "of nodes that should be opened",
                    "type": "Array"
                }
            ],
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleDataSource.js",
            "line": 1034,
            "itemtype": "method",
            "name": "flushCache",
            "params": [
                {
                    "name": "path",
                    "description": "Path to node",
                    "type": "Array"
                }
            ],
            "class": "DataSource.Treeble",
            "module": "gallery-treeble",
            "namespace": "DataSource"
        },
        {
            "file": "src/gallery-treeble/js/TreebleParser.js",
            "line": 13,
            "itemtype": "method",
            "name": "treebledatasource",
            "static": 1,
            "params": [
                {
                    "name": "oData",
                    "description": "Data to convert.",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "The new data source.",
                "type": "DataSource"
            },
            "class": "Parsers",
            "module": "gallery-treeble"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nMap the common EventSource events to custom\nYUI events. These are delayed with a timer\nto avoid race conditions and provide consistency\nbetween the native EventSource usage and the\nXHR-based event source events.",
            "line": " src/gallery-eventsource/js/eventsource.js:109"
        },
        {
            "message": "Missing item type\nAllows rearranging Page Layout modules via Drag-and-Drop.",
            "line": " src/gallery-layout-dd/js/PageLayoutDD.js:3"
        }
    ]
}